{"version":3,"file":"index.min.js","sources":["../src/lib/dom.ts","../src/lib/utils.ts","../src/components/ui/icon/svgIconList.ts","../src/components/ui/icon/Icon.ts","../src/components/ui/tooltip/Tooltip.ts","../src/components/ui/button/Button.ts","../src/components/ui/toggler/Toggler.ts","../src/components/ui/dialog/Dialog.ts","../src/components/table/EditColumnDialog.ts","../src/components/toolbar/HintManager.ts","../src/components/toolbar/Toolbar.ts","../src/components/ui/popup/Popup.ts","../src/components/table/EditNodeDialog.ts","../src/components/table/TableCell.ts","../src/components/table/TableHeaderCell.ts","../src/components/table/TableMaskBox.ts","../src/components/table/TableMask.ts","../src/components/table/TableController.ts","../src/components/line/LineSegment.ts","../src/components/line/LineGroup.ts","../src/components/line/LineController.ts","../src/components/anchor/Anchor.ts","../src/components/anchor/AnchorController.ts","../src/index.ts"],"sourcesContent":["// HTMLElementTagNameMap from lib.dom.d.ts\ninterface HTMLElementTagNameMap {\n  a: HTMLAnchorElement;\n  abbr: HTMLElement;\n  address: HTMLElement;\n  area: HTMLAreaElement;\n  article: HTMLElement;\n  aside: HTMLElement;\n  audio: HTMLAudioElement;\n  b: HTMLElement;\n  base: HTMLBaseElement;\n  bdi: HTMLElement;\n  bdo: HTMLElement;\n  blockquote: HTMLQuoteElement;\n  body: HTMLBodyElement;\n  br: HTMLBRElement;\n  button: HTMLButtonElement;\n  canvas: HTMLCanvasElement;\n  caption: HTMLTableCaptionElement;\n  cite: HTMLElement;\n  code: HTMLElement;\n  col: HTMLTableColElement;\n  colgroup: HTMLTableColElement;\n  data: HTMLDataElement;\n  datalist: HTMLDataListElement;\n  dd: HTMLElement;\n  del: HTMLModElement;\n  details: HTMLDetailsElement;\n  dfn: HTMLElement;\n  dialog: HTMLDialogElement;\n  dir: HTMLDirectoryElement;\n  div: HTMLDivElement;\n  dl: HTMLDListElement;\n  dt: HTMLElement;\n  em: HTMLElement;\n  embed: HTMLEmbedElement;\n  fieldset: HTMLFieldSetElement;\n  figcaption: HTMLElement;\n  figure: HTMLElement;\n  font: HTMLFontElement;\n  footer: HTMLElement;\n  form: HTMLFormElement;\n  frame: HTMLFrameElement;\n  frameset: HTMLFrameSetElement;\n  h1: HTMLHeadingElement;\n  h2: HTMLHeadingElement;\n  h3: HTMLHeadingElement;\n  h4: HTMLHeadingElement;\n  h5: HTMLHeadingElement;\n  h6: HTMLHeadingElement;\n  head: HTMLHeadElement;\n  header: HTMLElement;\n  hgroup: HTMLElement;\n  hr: HTMLHRElement;\n  html: HTMLHtmlElement;\n  i: HTMLElement;\n  iframe: HTMLIFrameElement;\n  img: HTMLImageElement;\n  input: HTMLInputElement;\n  ins: HTMLModElement;\n  kbd: HTMLElement;\n  label: HTMLLabelElement;\n  legend: HTMLLegendElement;\n  li: HTMLLIElement;\n  link: HTMLLinkElement;\n  main: HTMLElement;\n  map: HTMLMapElement;\n  mark: HTMLElement;\n  marquee: HTMLMarqueeElement;\n  menu: HTMLMenuElement;\n  meta: HTMLMetaElement;\n  meter: HTMLMeterElement;\n  nav: HTMLElement;\n  noscript: HTMLElement;\n  object: HTMLObjectElement;\n  ol: HTMLOListElement;\n  optgroup: HTMLOptGroupElement;\n  option: HTMLOptionElement;\n  output: HTMLOutputElement;\n  p: HTMLParagraphElement;\n  param: HTMLParamElement;\n  picture: HTMLPictureElement;\n  pre: HTMLPreElement;\n  progress: HTMLProgressElement;\n  q: HTMLQuoteElement;\n  rp: HTMLElement;\n  rt: HTMLElement;\n  ruby: HTMLElement;\n  s: HTMLElement;\n  samp: HTMLElement;\n  script: HTMLScriptElement;\n  section: HTMLElement;\n  select: HTMLSelectElement;\n  slot: HTMLSlotElement;\n  small: HTMLElement;\n  source: HTMLSourceElement;\n  span: HTMLSpanElement;\n  strong: HTMLElement;\n  style: HTMLStyleElement;\n  sub: HTMLElement;\n  summary: HTMLElement;\n  sup: HTMLElement;\n  table: HTMLTableElement;\n  tbody: HTMLTableSectionElement;\n  td: HTMLTableCellElement;\n  template: HTMLTemplateElement;\n  textarea: HTMLTextAreaElement;\n  tfoot: HTMLTableSectionElement;\n  th: HTMLTableCellElement;\n  thead: HTMLTableSectionElement;\n  time: HTMLTimeElement;\n  title: HTMLTitleElement;\n  tr: HTMLTableRowElement;\n  track: HTMLTrackElement;\n  u: HTMLElement;\n  ul: HTMLUListElement;\n  var: HTMLElement;\n  video: HTMLVideoElement;\n  wbr: HTMLElement;\n}\n\n/**\n * Create an element with designated tagName，and add a className to it,\n * then append to parentNode if has one.\n * @param tagName\n * @param className\n * @param parentNode\n * @returns\n */\nexport function createClassElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  className: string,\n  parentNode: HTMLElement = null,\n): HTMLElementTagNameMap[K] {\n  const el = document.createElement(tagName);\n  el.className = className;\n  if (parentNode) parentNode.appendChild(el);\n  return el;\n}\n\nconst elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches || Element.prototype.webkitMatchesSelector);\n\nexport function matches(element: HTMLElement, query: string): boolean {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\n/**\n * Delete a dom element\n * @param {HTMLElement} element\n */\nexport function removeElement(element: HTMLElement) {\n  if (element) {\n    if (element.remove) {\n      element.remove();\n    } else {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    }\n  }\n}\n\nexport function queryChildren(element: HTMLElement, selector: string): HTMLElement[] {\n  return Array.prototype.filter.call(element.children, (child: HTMLElement) =>\n    matches(child, selector),\n  );\n}\n\nexport function getStyles(element: HTMLElement): CSSStyleDeclaration {\n  return getComputedStyle(element);\n}\n\nexport function setStyles(element: HTMLElement, obj: Partial<CSSStyleDeclaration>) {\n  for (const key in obj) {\n    let val = obj[key];\n    if (typeof val === 'number') {\n      val = `${val}px`;\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nexport const createElementFromHtmlString = (htmlString: string) => {\n  const div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  // Change this to div.childNodes to support multiple top-level nodes.\n  return div.firstChild as HTMLElement;\n};\n","// eslint-disable-next-line @typescript-eslint/ban-types\nexport function debounce<F extends Function>(func: F, wait: number): F {\n  let timeoutID: number;\n\n  if (!Number.isInteger(wait)) {\n    console.warn('Call debounce without a valid number');\n    wait = 300;\n  }\n\n  // conversion through any necessary as it wont satisfy criteria otherwise\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return <any>function (this: any, ...args: any[]) {\n    clearTimeout(timeoutID);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const context = this;\n\n    timeoutID = window.setTimeout(function () {\n      func.apply(context, args);\n    }, wait);\n  };\n}\n\n// check if last column/row deleteable by occupiedList\nexport const setColumnAndRowDeletable = (\n  occupiedList: number[][],\n  totalRows: number,\n  totalColumns: number,\n) => {\n  let canDeleteColumn = true;\n  let canDeleteRow = true;\n  for (let i = 0; i < totalRows - 1; i++) {\n    if (occupiedList[i][totalColumns - 1] !== 0) {\n      canDeleteColumn = false;\n    }\n  }\n  for (let i = 0; i < totalColumns - 1; i++) {\n    if (occupiedList[totalRows - 1][i] !== 0) {\n      canDeleteRow = false;\n    }\n  }\n  return { canDeleteRow, canDeleteColumn };\n};\n\nexport const uniqId = () => {\n  const eles = window.document.getElementsByTagName('body');\n  const bodyObj = eles.item(0);\n  const c = bodyObj.innerHTML.length;\n  const t = new Date().getTime();\n  const n = Math.floor(Math.random() * 100 + 1);\n  return c.toString() + t.toString() + n.toString();\n};\n","const svgIconList = {\n  edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n  plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n  x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n  x2: '<svg t=\"1660284061189\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"59188\" width=\"200\" height=\"200\"><path d=\"M755.626667 695.04c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333L512 572.16 328.96 755.2c-8.533333 8.533333-19.2 12.373333-30.293333 12.373333s-21.76-4.266667-30.293334-12.373333c-16.64-16.64-16.64-43.52 0-60.16l183.04-183.04-183.04-183.04C251.733333 312.32 251.733333 285.44 268.373333 268.8c16.64-16.64 43.52-16.64 60.16 0l183.04 183.04L694.613333 268.8c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l183.466667 183.04z\" p-id=\"59189\"></path></svg>',\n  expand:\n    '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n  move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n  remove:\n    '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n  delete_row:\n    '<svg t=\"1659516333894\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12036\" width=\"200\" height=\"200\"><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.106667-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.586667l-90.453333 90.453333c-8.106667 8.106667-19.2 12.373333-30.293334 12.373333-11.093333 0-21.76-4.266667-30.293333-12.373333-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.88c-16.64-16.64-16.64-43.52 0-60.586667 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.586667L572.16 512l90.88 90.453333zM896 170.666667c0 23.466667-19.2 42.666667-42.666667 42.666666H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666667zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"12037\"></path></svg>',\n  delete_col:\n    '<svg t=\"1659516365239\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12171\" width=\"200\" height=\"200\"><path d=\"M421.546667 663.04c-16.64 16.64-43.52 16.64-60.16 0-8.106667-8.533333-12.373333-19.2-12.373334-30.293333 0-11.093333 4.266667-21.76 12.373334-30.293334l90.453333-90.453333-90.88-90.453333c-8.106667-8.106667-12.373333-19.2-12.373333-30.293334 0-11.093333 4.266667-21.76 12.373333-30.293333 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.586666 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l90.453333 90.453333c16.64 16.64 16.64 43.52 0 60.16-16.64 16.64-43.52 16.64-60.586666 0L512 572.16l-90.453333 90.88zM853.333333 896c-23.466667 0-42.666667-19.2-42.666666-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666667 42.666667zM128 853.333333V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666666 42.666667s-42.666667-19.2-42.666667-42.666667z\" p-id=\"12172\"></path></svg>',\n};\n\nexport default svgIconList;\n","import { createElementFromHtmlString, setStyles } from '../../../lib/dom';\nimport svgIconList from './svgIconList';\n\n// const svgIconList = {\n//   edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n//   plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n//   x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n//   expand:\n//     '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n//   move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n//   remove:\n//     '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n// };\n\nexport class Icon {\n  public element: HTMLElement;\n  constructor(\n    parentElement: HTMLElement | null,\n    options: {\n      name: string;\n      size?: number;\n      color?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    },\n  ) {\n    const targetIcon = svgIconList[options.name];\n    if (targetIcon) {\n      this.element = createElementFromHtmlString(svgIconList[options.name]);\n      const size = options.size ? options.size : 16;\n      const color = options.color ? options.color : '#333333';\n      const styleObj: Partial<CSSStyleDeclaration> = {\n        width: size + 'px',\n        height: size + 'px',\n      };\n      if (options.color) {\n        styleObj.fill = color;\n        styleObj.color = color;\n      }\n      setStyles(this.element, styleObj);\n      if (options.style) {\n        setStyles(this.element, options.style);\n      }\n      if (options.className) this.element.setAttribute('class', options.className);\n      this.element.classList.add('tfgraph-icon');\n      parentElement.appendChild(this.element);\n    }\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { TooltipOptoins } from '../../../types';\n\n/**\n * table-flow-graph popup\n */\nexport default class Tooltip {\n  targetElement: HTMLElement;\n  options: TooltipOptoins;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public dismissTimeoutId: number | null;\n  public showTimeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: TooltipOptoins) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n    this.targetElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.addEventListener('mouseleave', () => this.mouseLeave());\n  }\n\n  public render() {\n    const { placement = 'top', label } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-tooltip', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-tooltip-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-tooltip-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-tooltip-arrow', this.areaElement);\n    if (label) this.boxElement.innerHTML = label;\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    this.rendered = true;\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.targetElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    if (this.element) removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered && !this.showTimeoutId) {\n      this.showTimeoutId = window.setTimeout(() => {\n        this.render();\n      }, 500);\n    }\n    if (this.dismissTimeoutId) {\n      window.clearTimeout(this.dismissTimeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n    this.dismissTimeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 50);\n  }\n}\n","import { createClassElement } from '../../../lib/dom';\nimport { BtnOptions } from '../../../types';\nimport { Icon } from '../icon/Icon';\nimport Tooltip from '../tooltip/Tooltip';\n\n/**\n * table-flow-graph button\n */\nexport default class Button {\n  public element: HTMLElement;\n  public disabled: boolean;\n  public btnToolTip: Tooltip;\n\n  constructor(parentElement: HTMLElement, options: BtnOptions) {\n    const { label, type, onClick, icon, tooltip } = options;\n    let className = 'tfgraph-button is-hoverable';\n    if (options.className) className += ' ' + options.className;\n    className += ' ' + (type ? type : 'default');\n    this.element = createClassElement('button', className, parentElement);\n    if (icon) new Icon(this.element, { name: icon, size: 16, className: label ? 'mr-5' : '' });\n    if (label) {\n      createClassElement('span', '', this.element).innerHTML = label;\n    }\n    if (tooltip) this.btnToolTip = new Tooltip(this.element, { label: tooltip });\n\n    this.element.addEventListener('click', (e) => {\n      if (this.btnToolTip) this.btnToolTip.dismiss();\n      if (this.disabled) return;\n      if (typeof onClick === 'function') {\n        onClick(e);\n      }\n    });\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { createClassElement, setStyles } from '../../../lib/dom';\nimport { TogglerOptions, TogglerButton } from '../../../types';\n\n/**\n * table-flow-graph toggler btn group\n */\nexport default class Toggler {\n  public element: HTMLElement;\n  public indicatorEl: HTMLElement;\n  public btnContainerEl: HTMLElement;\n  public disabled: boolean;\n  public activeIndex: number;\n  public btnList: TogglerButton[] = [];\n\n  constructor(parentElement: HTMLElement, options: TogglerOptions) {\n    const { items, initialActiveIndex, onChange } = options;\n    this.element = createClassElement('div', 'tfgraph-toggler', parentElement);\n    this.indicatorEl = createClassElement('div', 'tfgraph-toggler-indicator', this.element);\n    this.btnContainerEl = createClassElement('div', 'flex flex-row items-center', this.element);\n    items.forEach((item, index) => {\n      const el = createClassElement('button', 'tfgraph-toggler-btn', this.btnContainerEl);\n      el.innerHTML = item.label;\n      this.btnList.push({ itemData: item, el, index });\n      el.addEventListener('click', () => {\n        this.setActive(index);\n        if (typeof onChange === 'function') onChange(item, index);\n      });\n    });\n    this.setActive(typeof initialActiveIndex === 'number' ? initialActiveIndex : 0);\n  }\n\n  setActive(index: number) {\n    if (this.activeIndex !== index) {\n      if (typeof this.activeIndex === 'number') {\n        this.btnList[this.activeIndex].el.classList.remove('active');\n      }\n      this.activeIndex = index;\n      this.btnList[index].el.classList.add('active');\n      this.setActiveIndicator();\n    }\n  }\n\n  setActiveIndicator() {\n    const containerRect = this.btnContainerEl.getBoundingClientRect();\n    const rect = this.btnList[this.activeIndex].el.getBoundingClientRect();\n    setStyles(this.indicatorEl, {\n      width: rect.width + 'px',\n      // this.activeIndex === 0 || this.activeIndex === this.btnList.length - 1\n      //   ? rect.width - 2 + 'px'\n      //   : rect.width + 4 + 'px',\n      left: rect.left - containerRect.left + 4 + 'px',\n      // this.activeIndex === 0\n      //   ? rect.left - containerRect.left + 4 + 'px'\n      //   : rect.left - containerRect.left - 2 + 'px',\n    });\n    // this.indicatorEl.style.width = rect.width + 2 + 'px';\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { createClassElement, removeElement } from '../../../lib/dom';\nimport { DialogOptions } from '../../../types';\nimport { Icon } from '../icon/Icon';\n\n/**\n * table-flow-graph dialog\n */\nexport default class Dialog {\n  targetElement: HTMLElement;\n  public element: HTMLElement;\n  public maskElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public titleBarElement: HTMLElement;\n  public closeBtnElement: HTMLElement;\n  public title: string;\n\n  constructor(options: DialogOptions) {\n    this.title = options.title;\n    this.targetElement = options.targetElement\n      ? options.targetElement\n      : document.getElementsByTagName('body')[0];\n    this.element = createClassElement('div', 'tfgraph-dialog', this.targetElement);\n    this.maskElement = createClassElement('div', 'tfgraph-dialog-mask', this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-dialog-box', this.element);\n    this.renderTitleBar();\n    this.boxElement.appendChild(options.contentElement);\n    this.targetElement.classList.add('overflow-hidden');\n    this.maskElement.addEventListener('click', () => this.close());\n  }\n\n  renderTitleBar() {\n    this.titleBarElement = createClassElement('div', 'tfgraph-dialog-bar', this.boxElement);\n    const titleEl = createClassElement('div', 'tfgraph-dialog-bar-title', this.titleBarElement);\n    titleEl.innerText = this.title;\n    this.closeBtnElement = createClassElement(\n      'div',\n      'tfgraph-dialog-bar-btn',\n      this.titleBarElement,\n    );\n    new Icon(this.closeBtnElement, { name: 'x2', size: 18 });\n    this.closeBtnElement.addEventListener('click', () => this.close());\n  }\n\n  public close() {\n    this.closeBtnElement.removeEventListener('click', () => this.close());\n    this.maskElement.removeEventListener('click', () => this.close());\n    removeElement(this.element);\n    this.targetElement.classList.remove('overflow-hidden');\n  }\n}\n","import { TableFlowGraph } from '../..';\nimport { createClassElement } from '../../lib/dom';\nimport { TFGraphColumn } from '../../types';\nimport Button from '../ui/button/Button';\nimport Dialog from '../ui/dialog/Dialog';\nimport TableHeaderCell from './TableHeaderCell';\n\nexport default class EditColumnDialog {\n  public dialog: Dialog | null;\n  public targetHeaderCell: TableHeaderCell;\n  public title: string;\n  public graphInstance: TableFlowGraph;\n  public contentElement: HTMLElement;\n  public inputEl: HTMLInputElement;\n  public btnConfirm: Button;\n  public btnCancel: Button;\n  public isEdit: boolean;\n\n  constructor(graphInstance: TableFlowGraph, targetHeaderCell?: TableHeaderCell) {\n    this.graphInstance = graphInstance;\n    this.dialog = null;\n    this.targetHeaderCell = targetHeaderCell;\n    this.setIsEdit();\n    this.renderContent();\n  }\n\n  setIsEdit() {\n    if (this.targetHeaderCell) {\n      this.title = this.targetHeaderCell.columnData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    if (this.inputEl) this.inputEl.value = this.title;\n  }\n\n  renderContent() {\n    this.contentElement = createClassElement('div', 'flex flex-col w-420 px-15 pb-15');\n    this.inputEl = createClassElement('input', 'tfgraph-input', this.contentElement);\n    this.inputEl.setAttribute('placeholder', this.graphInstance.options.labels.enterColumnName);\n    const btnContainer = createClassElement(\n      'div',\n      'flex flex-row items-center justify-end mt-15',\n      this.contentElement,\n    );\n    this.btnCancel = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.cancel,\n      type: 'default',\n      className: 'mr-10',\n      onClick: () => {\n        this.dialog.close();\n      },\n    });\n    this.btnConfirm = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.confirm,\n      type: 'primary',\n      onClick: () => {\n        if (this.inputEl.value) {\n          if (this.title !== this.inputEl.value) {\n            if (this.isEdit) {\n              this.targetHeaderCell.columnData.title = this.inputEl.value;\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onEditColumn === 'function') {\n                this.graphInstance.options.onEditColumn(this.targetHeaderCell.columnData);\n              }\n            } else {\n              const colData: TFGraphColumn = {\n                id: `header_col_${this.graphInstance.options.totalColumns}`,\n                title: this.inputEl.value,\n              };\n              this.graphInstance.options.columns.push(colData);\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onAddColumn === 'function') {\n                this.graphInstance.options.onAddColumn(colData);\n              }\n            }\n          } else {\n            this.dialog.close();\n          }\n        }\n      },\n    });\n  }\n\n  public show() {\n    this.setIsEdit();\n    this.dialog = new Dialog({\n      title: this.isEdit\n        ? this.graphInstance.options.labels.editColumn\n        : this.graphInstance.options.labels.addColumn,\n      contentElement: this.contentElement,\n    });\n  }\n}\n","import { TableFlowGraph } from '../..';\nimport { HintType } from '../../types';\n\nexport default class HintManager {\n  public targetEl: HTMLElement;\n  public currentHintState: HintType;\n  public graphInstance: TableFlowGraph;\n\n  constructor(targetEl: HTMLElement, graphInstance: TableFlowGraph) {\n    this.targetEl = targetEl;\n    this.graphInstance = graphInstance;\n    this.currentHintState = 'idel';\n    this.targetEl.innerText = '';\n  }\n\n  setHint(hintState: HintType) {\n    this.currentHintState = hintState;\n    switch (this.currentHintState) {\n      case 'idel':\n        this.targetEl.innerText = '';\n        break;\n      case 'drawLine':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_drawLine;\n        break;\n      case 'hoverLine':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_hoverLine;\n        break;\n      case 'hoverAnchor':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_hoverAnchor;\n        break;\n      case 'moveNode':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_moveNode;\n        break;\n      case 'resizeNode':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_resizeNode;\n        break;\n      default:\n        this.targetEl.innerText = '';\n        break;\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Toggler from '../ui/toggler/Toggler';\nimport { Mode } from '../../types';\nimport EditColumnDialog from '../table/EditColumnDialog';\nimport HintManager from './HintManager';\n// import { Icon } from './ui/Icon';\n\n/**\n * table-flow-graph toolbar\n */\nexport default class Toolbar {\n  public element: HTMLElement;\n  public graphInstance: TableFlowGraph;\n  public disabledMask: HTMLElement;\n  public modeToggler: Toggler;\n  public hintEl: HTMLElement;\n  public hintMgr: HintManager;\n  public newColumnBtn: Button;\n  public addColDialog: EditColumnDialog;\n\n  constructor(parentElement: HTMLElement, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-toolbar', parentElement);\n    this.modeToggler = new Toggler(this.element, {\n      items: [\n        { label: this.graphInstance.options.labels.editMode, id: 'edit' },\n        { label: this.graphInstance.options.labels.previewMode, id: 'preview' },\n      ],\n      onChange: (item) => {\n        graphInstance.changeMode(item.id as Mode);\n        this.setToolbarState();\n      },\n    });\n    this.hintEl = createClassElement('div', 'tfgraph-toolbar-hint', this.element);\n    this.hintMgr = new HintManager(this.hintEl, this.graphInstance);\n    // new Icon(this.element, {\n    //   name: 'plus',\n    //   style: { width: '16px', height: '16px' },\n    // });\n    const rightBtns = createClassElement('div', 'flex-row items-center', this.element);\n    this.newColumnBtn = new Button(rightBtns, {\n      icon: 'plus',\n      label: this.graphInstance.options.labels.addColumn,\n      type: 'primary',\n      onClick: () => this.addColumn(),\n    });\n\n    this.disabledMask = createClassElement('div', 'tfgraph-toolbar-mask hidden', this.element);\n    // new Button(rightBtns, { label: '添加行', type: 'primary' });\n\n    // new Button(this.element, { label: 'default' });\n    // new Button(this.element, {\n    //   label: 'clean',\n    //   type: 'clean',\n    //   onClick: () => {\n    //     console.log('clean clicked');\n    //   },\n    // });\n    // new Button(this.element, { label: 'primary', type: 'primary' });\n    // new Button(this.element, { label: 'warning', type: 'warning' });\n    // new Button(this.element, { label: 'danger', type: 'danger' });\n    // new Button(this.element, { label: 'success', type: 'success' });\n    // testBtn.setDisabled();\n    this.setToolbarState();\n    this.addColDialog = new EditColumnDialog(this.graphInstance);\n  }\n\n  addColumn() {\n    if (typeof this.graphInstance.options.addColumn === 'function') {\n      this.graphInstance.options.addColumn();\n    } else {\n      if (this.graphInstance.hasTableHeader) {\n        // add column dialog\n        this.addColDialog.show();\n      } else {\n        this.graphInstance.refresh(\n          Object.assign({}, this.graphInstance.options, {\n            columns: null,\n            totalColumns: this.graphInstance.options.totalColumns + 1,\n          }),\n        );\n        if (typeof this.graphInstance.options.onAddColumn === 'function') {\n          this.graphInstance.options.onAddColumn();\n        }\n      }\n    }\n  }\n\n  disable() {\n    this.disabledMask.classList.remove('hidden');\n  }\n\n  enable() {\n    this.disabledMask.classList.add('hidden');\n  }\n\n  setToolbarState() {\n    if (\n      this.graphInstance.options.totalColumns >= this.graphInstance.options.maxColumns ||\n      this.graphInstance.mode === 'preview'\n    ) {\n      this.newColumnBtn.element.classList.add('hidden');\n    } else {\n      this.newColumnBtn.element.classList.remove('hidden');\n    }\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { PopupOptions } from '../../../types';\n\n/**\n * table-flow-graph popup\n */\nexport default class Popup {\n  targetElement: HTMLElement;\n  options: PopupOptions;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public timeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: PopupOptions) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n    this.targetElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.addEventListener('mouseleave', () => this.mouseLeave());\n  }\n\n  public render() {\n    const { placement = 'top', contentElement } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-popup', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-popup-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-popup-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-popup-arrow', this.areaElement);\n    if (contentElement) this.boxElement.appendChild(contentElement);\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    this.areaElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.addEventListener('mouseleave', () => this.mouseLeave());\n    this.rendered = true;\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.areaElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered) this.render();\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    this.timeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 200);\n  }\n}\n","import { TableFlowGraph } from '../..';\nimport { createClassElement } from '../../lib/dom';\nimport { TFGraphNode } from '../../types';\nimport Button from '../ui/button/Button';\nimport Dialog from '../ui/dialog/Dialog';\nimport TableCell from './TableCell';\n\nexport default class EditNodeDialog {\n  public dialog: Dialog | null;\n  public targetCell: TableCell;\n  public title: string;\n  public graphInstance: TableFlowGraph;\n  public contentElement: HTMLElement;\n  public nodeNameInput: HTMLInputElement;\n  public btnConfirm: Button;\n  public btnCancel: Button;\n  public isEdit: boolean;\n\n  constructor(graphInstance: TableFlowGraph, targetCell: TableCell) {\n    this.graphInstance = graphInstance;\n    this.targetCell = targetCell;\n    this.dialog = null;\n    if (targetCell.nodeData) {\n      this.title = targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    this.renderContent();\n  }\n\n  setIsEdit() {\n    if (this.targetCell.nodeData) {\n      this.title = this.targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    if (this.nodeNameInput) this.nodeNameInput.value = this.title;\n  }\n\n  renderContent() {\n    this.contentElement = createClassElement('div', 'flex flex-col w-420 px-15 pb-15');\n    this.nodeNameInput = createClassElement('input', 'tfgraph-input', this.contentElement);\n    this.nodeNameInput.setAttribute('placeholder', this.graphInstance.options.labels.enterNodeName);\n    const btnContainer = createClassElement(\n      'div',\n      'flex flex-row items-center justify-end mt-15',\n      this.contentElement,\n    );\n    this.btnCancel = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.cancel,\n      type: 'default',\n      className: 'mr-10',\n      onClick: () => {\n        this.dialog.close();\n      },\n    });\n    this.btnConfirm = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.confirm,\n      type: 'primary',\n      onClick: () => {\n        if (this.nodeNameInput.value) {\n          if (this.title !== this.nodeNameInput.value) {\n            if (this.isEdit) {\n              this.targetCell.nodeData.title = this.nodeNameInput.value;\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onEditNode === 'function') {\n                this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n              }\n            } else {\n              const nodeData: TFGraphNode = {\n                id: `node_${this.targetCell.row}_${this.targetCell.column}`,\n                row: this.targetCell.row,\n                column: this.targetCell.column,\n                rowSpan: 1,\n                colSpan: 1,\n                title: this.nodeNameInput.value,\n              };\n              this.graphInstance.options.nodes.push(nodeData);\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onAddNode === 'function') {\n                this.graphInstance.options.onAddNode(nodeData);\n              }\n            }\n          } else {\n            this.dialog.close();\n          }\n        }\n      },\n    });\n  }\n\n  public show() {\n    this.setIsEdit();\n    this.dialog = new Dialog({\n      title: this.isEdit\n        ? this.graphInstance.options.labels.editNode\n        : this.graphInstance.options.labels.addNode,\n      contentElement: this.contentElement,\n    });\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport { TFGraphNode } from '../../types';\nimport Button from '../ui/button/Button';\nimport Popup from '../ui/popup/Popup';\nimport EditNodeDialog from './EditNodeDialog';\n// import Dialog from '../ui/dialog/Dialog';\n\n/**\n * table-flow-graph tabel cell\n */\nexport default class TableCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public nodeEl: HTMLElement;\n  public controlLayer: HTMLElement;\n  public popup: Popup;\n  public nodeData?: TFGraphNode;\n  public hasNode: boolean;\n  public row: number;\n  public column: number;\n  public rowSpan: number;\n  public colSpan: number;\n  public isTarget: boolean; // is moving or resizing this cell\n  public deleteRowBtn: Button;\n  public deleteColBtn: Button;\n  public editDialog: EditNodeDialog | null;\n\n  constructor(\n    parentElement: HTMLElement,\n    data: TFGraphNode | null,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.row = row;\n    this.column = column;\n    this.element = this.createTabelCell(data, row, column, this.graphInstance);\n    parentElement.appendChild(this.element);\n  }\n\n  createTabelCell(\n    data: TFGraphNode | null,\n    row,\n    column,\n    graphInstance: TableFlowGraph,\n  ): HTMLElement {\n    const el = createClassElement('div', 'tfgraph-cell');\n    el.setAttribute('id', `${graphInstance.id}_cell_${row}_${column}`);\n    if (data) {\n      const node = createClassElement('div', 'tfgraph-node');\n      if (data.type) node.classList.add(data.type);\n      if (data.isBtn && this.graphInstance.mode !== 'edit') node.classList.add('isBtn');\n      if (typeof this.graphInstance.options.renderNode === 'function') {\n        node.appendChild(this.graphInstance.options.renderNode(data));\n      } else {\n        node.innerText = data.title;\n      }\n\n      // node.innerText = data.id;\n      el.appendChild(node);\n      this.hasNode = true;\n      this.nodeEl = node;\n      this.nodeData = data;\n      this.rowSpan = data.rowSpan;\n      this.colSpan = data.colSpan;\n    } else {\n      this.rowSpan = 1;\n      this.colSpan = 1;\n      this.hasNode = false;\n    }\n    // set min height base on row span\n    el.style.minHeight = 80 * this.rowSpan + 'px';\n    return el;\n  }\n\n  // cell controls for edit mode\n  setEditControls() {\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    // const controlRowEl = createClassElement(\n    //   'div',\n    //   'flex flex-row items-center justify-center p-15 flex-wrap',\n    //   this.controlLayer,\n    // );\n    this.editDialog = new EditNodeDialog(this.graphInstance, this);\n    if (this.nodeData) {\n      new Button(this.controlLayer, {\n        icon: 'move',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.moveNode,\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        onClick: () => {\n          this.graphInstance.tableController.startMoving(this);\n        },\n      });\n      new Button(this.controlLayer, {\n        icon: 'edit',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.editNode,\n        className: 'absolute left-6 bottom-6 p-0 sm w-28 btn-bl',\n        onClick: () => {\n          if (typeof this.graphInstance.options.editNode === 'function') {\n            this.graphInstance.options.editNode(this.nodeData);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      new Button(this.controlLayer, {\n        icon: 'remove',\n        type: 'danger',\n        tooltip: this.graphInstance.options.labels.deleteNode,\n        className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n        onClick: () => {\n          // TODO remove cell\n          if (typeof this.graphInstance.options.onDeleteNode === 'function') {\n            this.graphInstance.options.onDeleteNode(this.nodeData);\n          }\n        },\n      });\n      new Button(this.controlLayer, {\n        icon: 'expand',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.adjustNodeSize,\n        className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n        onClick: () => {\n          this.graphInstance.tableController.startResizing(this);\n        },\n      });\n    } else {\n      new Button(this.controlLayer, {\n        icon: 'plus',\n        type: 'primary',\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        tooltip: this.graphInstance.options.labels.addNode,\n        onClick: () => {\n          if (typeof this.graphInstance.options.addNode === 'function') {\n            this.graphInstance.options.addNode(this.row, this.column);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      if (\n        this.graphInstance.options.totalRows > 1 &&\n        this.row === this.graphInstance.options.totalRows - 1\n      ) {\n        this.deleteRowBtn = new Button(this.controlLayer, {\n          icon: 'delete_row',\n          type: 'danger',\n          className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n          tooltip: this.graphInstance.options.labels.deleteRow,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteRow === 'function') {\n              this.graphInstance.options.deleteRow();\n            } else {\n              this.graphInstance.refresh(\n                Object.assign({}, this.graphInstance.options, {\n                  totalRows: this.graphInstance.options.totalRows - 1,\n                }),\n              );\n              if (typeof this.graphInstance.options.onDeleteRow === 'function') {\n                this.graphInstance.options.onDeleteRow();\n              }\n            }\n          },\n        });\n      }\n      if (\n        this.graphInstance.options.totalColumns > 1 &&\n        this.column === this.graphInstance.options.totalColumns - 1\n      ) {\n        this.deleteColBtn = new Button(this.controlLayer, {\n          icon: 'delete_col',\n          type: 'danger',\n          className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n          tooltip: this.graphInstance.options.labels.deleteColumn,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteColumn === 'function') {\n              // custom delete column method\n              this.graphInstance.options.deleteColumn();\n            } else {\n              // auto delete column\n              if (this.graphInstance.hasTableHeader) {\n                // if has options.columns data (table header will be rendered)\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  const targetColumn =\n                    this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n                  this.graphInstance.options.onDeleteColumn(targetColumn);\n                }\n                this.graphInstance.options.columns.pop();\n                this.graphInstance.refresh(Object.assign({}, this.graphInstance.options));\n              } else {\n                // if options.columns data is null or empty\n                this.graphInstance.refresh(\n                  Object.assign({}, this.graphInstance.options, {\n                    columns: null,\n                    totalColumns: this.graphInstance.options.totalColumns - 1,\n                  }),\n                );\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  this.graphInstance.options.onDeleteColumn();\n                }\n              }\n            }\n          },\n        });\n      }\n    }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  public setViewModeControls() {\n    if (this.nodeData) {\n      this.element.addEventListener('click', () => this.onClickNode());\n      if (this.nodeData.showPopup) {\n        let contentEl: HTMLElement;\n        if (typeof this.graphInstance.options.renderNodeHoverPopup === 'function') {\n          contentEl = this.graphInstance.options.renderNodeHoverPopup(this.nodeData);\n        } else {\n          contentEl = createClassElement('div', 'flex flex-col items-center p-30');\n          contentEl.innerHTML = this.nodeData.title;\n        }\n\n        this.popup = new Popup(this.nodeEl, {\n          placement: 'top',\n          contentElement: contentEl,\n        });\n      }\n    }\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n    if (this.deleteRowBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteRow &&\n        this.graphInstance.lineController.canDeleteRow\n      ) {\n        this.deleteRowBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteRowBtn.element.classList.add('hidden');\n      }\n    }\n    if (this.deleteColBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteColumn &&\n        this.graphInstance.lineController.canDeleteColumn\n      ) {\n        this.deleteColBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteColBtn.element.classList.add('hidden');\n      }\n    }\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n\n  onClickNode() {\n    if (typeof this.graphInstance.options.onClickNode === 'function') {\n      this.graphInstance.options.onClickNode(this.nodeData, this.nodeEl);\n    }\n  }\n\n  public setIsTarget(isTarget: boolean) {\n    if (isTarget && !this.isTarget) {\n      this.isTarget = true;\n      this.element.style.opacity = '0.4';\n    } else if (!isTarget && this.isTarget) {\n      this.isTarget = false;\n      this.element.style.opacity = '1';\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport { TFGraphColumn } from '../../types';\nimport Button from '../ui/button/Button';\nimport Popup from '../ui/popup/Popup';\n// import TableHeaderCellMenu from './TableHeaderCellMenu';\nimport EditColumnDialog from './EditColumnDialog';\n\n/**\n * table-flow-graph tabel header cell\n */\nexport default class TableHeaderCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public columnIndex: number;\n  public isLast: boolean;\n  public columnData: TFGraphColumn;\n  public canDelete: boolean;\n  public canAdd: boolean;\n  public popMenu: Popup | null;\n  // public menu: TableHeaderCellMenu | null;\n  public controlLayer: HTMLElement;\n  public editColDialog: EditColumnDialog;\n\n  constructor(\n    parentElement: HTMLElement,\n    columnData: TFGraphColumn,\n    columnIndex: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.columnIndex = columnIndex;\n    this.columnData = columnData;\n    this.isLast = this.columnIndex === this.graphInstance.options.totalColumns - 1;\n    this.element = this.createElement(parentElement);\n  }\n\n  createElement(parentElement: HTMLElement): HTMLElement {\n    const el = createClassElement('th', 'tfgraph-th', parentElement);\n    if (this.columnData.title) {\n      el.innerHTML = this.columnData.title;\n    } else {\n      el.classList.add('empty');\n    }\n    if (this.columnData.width) {\n      // TODO load width value from options\n      let width = this.columnData.width;\n      switch (this.columnData.width) {\n        case 'large':\n          width = '200';\n          break;\n        case 'md':\n          width = '170';\n          break;\n        case 'sm':\n          width = '130';\n          break;\n        case 'xs':\n          width = '105';\n          break;\n        default:\n          width = this.columnData.width;\n          break;\n      }\n      el.setAttribute('width', width);\n    } else {\n      el.setAttribute('width', 'auto');\n    }\n    el.setAttribute('id', `${this.graphInstance.id}_col_${this.columnIndex}`);\n    return el;\n  }\n\n  // header cell controls for edit mode\n  public setEditControls() {\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    this.editColDialog = new EditColumnDialog(this.graphInstance, this);\n    new Button(this.controlLayer, {\n      icon: 'edit',\n      type: 'primary',\n      className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n      tooltip: this.graphInstance.options.labels.editColumn,\n      onClick: () => {\n        if (typeof this.graphInstance.options.editColumn === 'function') {\n          this.graphInstance.options.editColumn(this.columnData);\n        } else {\n          this.editColDialog.show();\n        }\n      },\n    });\n    if (this.isLast && this.graphInstance.tableController.canDeleteColumn) {\n      new Button(this.controlLayer, {\n        icon: 'delete_col',\n        type: 'danger',\n        className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n        tooltip: this.graphInstance.options.labels.deleteColumn,\n        onClick: () => {\n          if (typeof this.graphInstance.options.deleteColumn === 'function') {\n            // custom delete column method\n            this.graphInstance.options.deleteColumn();\n          } else {\n            if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n              const targetColumn =\n                this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n              this.graphInstance.options.onDeleteColumn(targetColumn);\n            }\n            this.graphInstance.options.columns.pop();\n            this.graphInstance.refresh(Object.assign({}, this.graphInstance.options));\n          }\n        },\n      });\n    }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement, setStyles } from '../../lib/dom';\nimport { PositionAndSize } from '../../types';\nimport TableCell from './TableCell';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMaskBox {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public disabled: boolean;\n\n  constructor(parentEl: HTMLElement, targetCell: TableCell, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.disabled = false;\n    this.element = createClassElement('div', 'tfgraph-table-mask-cell', parentEl);\n    const nodeEl = createClassElement('div', 'tfgraph-table-mask-node', this.element);\n    nodeEl.innerText = targetCell.nodeData.title;\n    // setStyles(this.element, {\n    //   top: top + 'px',\n    //   left: left + 'px',\n    //   width: width + 'px',\n    //   height: height + 'px',\n    // });\n    this.element.addEventListener('click', () => {\n      if (!this.disabled) this.graphInstance.tableController.submitCellChange();\n    });\n  }\n\n  setPositinAndSize(pos_size: PositionAndSize) {\n    setStyles(this.element, {\n      top: pos_size.top + 'px',\n      left: pos_size.left + 'px',\n      width: pos_size.width + 'px',\n      height: pos_size.height + 'px',\n    });\n  }\n\n  disable() {\n    // TODO\n    if (!this.disabled) {\n      this.disabled = true;\n      this.element.classList.add('disabled');\n    }\n  }\n\n  enable() {\n    // TODO\n    if (this.disabled) {\n      this.disabled = false;\n      this.element.classList.remove('disabled');\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport { CellPositionAndSize, TableGridRect } from '../../types';\nimport TableCell from './TableCell';\nimport TableMaskBox from './TableMaskBox';\nimport { isEqual, cloneDeep } from 'lodash-es';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMask {\n  graphInstance: TableFlowGraph;\n  public maskBox: TableMaskBox;\n  public element: HTMLElement;\n  public tableGridRectList: TableGridRect[];\n  public mouseGridRect: TableGridRect;\n  public targetCell: TableCell;\n  public targetCellRect: TableGridRect;\n  public resultCellPositionAndSize: CellPositionAndSize;\n  public filteredOccupiedList: number[][]; // 1: occupied, 0: not occupied\n\n  constructor(tableGridRectList: TableGridRect[], graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement(\n      'div',\n      'tfgraph-cell-mask-layer hidden',\n      graphInstance.element,\n    );\n    this.tableGridRectList = tableGridRectList;\n  }\n\n  private showMask(targetTableCell: TableCell) {\n    this.targetCell = targetTableCell;\n    this.targetCell.setIsTarget(true);\n    this.setFilteredOccupiedList();\n    this.maskBox = new TableMaskBox(this.element, this.targetCell, this.graphInstance);\n    this.mouseGridRect = this.getMouseRect();\n    this.targetCellRect = this.getRectByRowAndColumn(this.targetCell.row, this.targetCell.column);\n    this.setMaskBoxStatus();\n  }\n\n  // occupied list without target tabel cell\n  private setFilteredOccupiedList() {\n    this.filteredOccupiedList = cloneDeep(this.graphInstance.tableController.occupiedList);\n    for (let i = this.targetCell.row; i < this.targetCell.row + this.targetCell.rowSpan; i++) {\n      for (\n        let j = this.targetCell.column;\n        j < this.targetCell.column + this.targetCell.colSpan;\n        j++\n      ) {\n        this.filteredOccupiedList[i][j] = 0;\n      }\n    }\n  }\n\n  // set maskbox position/size/disabled etc.\n  private setMaskBoxStatus() {\n    if (this.graphInstance.tableController.isMovingCell) {\n      this.resultCellPositionAndSize = {\n        row:\n          this.mouseGridRect.rowIndex + this.targetCell.rowSpan >\n          this.graphInstance.options.totalRows\n            ? this.graphInstance.options.totalRows - this.targetCell.rowSpan\n            : this.mouseGridRect.rowIndex,\n        column:\n          this.mouseGridRect.columnIndex + this.targetCell.colSpan >\n          this.graphInstance.options.totalColumns\n            ? this.graphInstance.options.totalColumns - this.targetCell.colSpan\n            : this.mouseGridRect.columnIndex,\n        rowSpan: this.targetCell.rowSpan,\n        colSpan: this.targetCell.colSpan,\n      };\n    } else {\n      this.resultCellPositionAndSize = {\n        row: Math.min(this.targetCellRect.rowIndex, this.mouseGridRect.rowIndex),\n        column: Math.min(this.targetCellRect.columnIndex, this.mouseGridRect.columnIndex),\n        rowSpan: Math.abs(this.targetCellRect.rowIndex - this.mouseGridRect.rowIndex) + 1,\n        colSpan: Math.abs(this.targetCellRect.columnIndex - this.mouseGridRect.columnIndex) + 1,\n      };\n    }\n    const topLeftRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row,\n      this.resultCellPositionAndSize.column,\n    );\n    const bottomRightRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan - 1,\n      this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan - 1,\n    );\n    if (bottomRightRect && topLeftRect) {\n      this.maskBox.setPositinAndSize({\n        left: topLeftRect.left,\n        top: topLeftRect.top,\n        width: bottomRightRect.left - topLeftRect.left + bottomRightRect.width + 1,\n        height: bottomRightRect.top - topLeftRect.top + bottomRightRect.height + 1,\n      });\n    }\n\n    // set maskbox disable/enable\n    let doable = true;\n    for (\n      let i = this.resultCellPositionAndSize.row;\n      i <\n      Math.min(\n        this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan,\n        this.graphInstance.options.totalRows,\n      );\n      i++\n    ) {\n      for (\n        let j = this.resultCellPositionAndSize.column;\n        j <\n        Math.min(\n          this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan,\n          this.graphInstance.options.totalColumns,\n        );\n        j++\n      ) {\n        if (!this.filteredOccupiedList[i] || this.filteredOccupiedList[i][j] > 0) {\n          doable = false;\n        }\n      }\n    }\n    if (doable) {\n      this.maskBox.enable();\n    } else {\n      this.maskBox.disable();\n    }\n  }\n\n  public startMask(targetTableCell: TableCell) {\n    this.element.classList.remove('hidden');\n    this.showMask(targetTableCell);\n  }\n\n  public stopMask() {\n    this.element.classList.add('hidden');\n    removeElement(this.maskBox.element);\n    this.targetCell.setIsTarget(false);\n    this.maskBox = null;\n  }\n\n  public submitChange() {\n    this.stopMask();\n    const targetCellPositionAndSize: CellPositionAndSize = {\n      row: this.targetCell.row,\n      column: this.targetCell.column,\n      rowSpan: this.targetCell.rowSpan,\n      colSpan: this.targetCell.colSpan,\n    };\n    if (!isEqual(this.resultCellPositionAndSize, targetCellPositionAndSize)) {\n      // const oldNode = cloneDeep(this.targetCell.nodeData);\n      this.targetCell.nodeData.row = this.resultCellPositionAndSize.row;\n      this.targetCell.nodeData.column = this.resultCellPositionAndSize.column;\n      this.targetCell.nodeData.rowSpan = this.resultCellPositionAndSize.rowSpan;\n      this.targetCell.nodeData.colSpan = this.resultCellPositionAndSize.colSpan;\n      // 提交变更\n      if (typeof this.graphInstance.options.onEditNode === 'function') {\n        this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n      }\n      this.graphInstance.refresh();\n    }\n  }\n\n  // get tableGridRect of current mouse position at\n  private getMouseRect() {\n    const mouseX = this.graphInstance.mousePosition.x;\n    const mouseY = this.graphInstance.mousePosition.y;\n    let targetGridRect: TableGridRect;\n    this.tableGridRectList.forEach((gridRect) => {\n      if (\n        mouseY > gridRect.top &&\n        mouseY < gridRect.top + gridRect.height &&\n        mouseX > gridRect.left &&\n        mouseX < gridRect.left + gridRect.width\n      ) {\n        targetGridRect = gridRect;\n      }\n    });\n    return targetGridRect;\n  }\n\n  private getRectByRowAndColumn(row, column) {\n    // const targetCellRow = this.targetCell.row;\n    // const targetCellColumn = this.targetCell.column;\n    return this.tableGridRectList.find((gridRect) => {\n      return gridRect.rowIndex === row && gridRect.columnIndex === column;\n    });\n  }\n\n  public onMouseMove() {\n    const newRect = this.getMouseRect();\n    if (!isEqual(newRect, this.mouseGridRect)) {\n      if (newRect) {\n        this.mouseGridRect = newRect;\n        this.setMaskBoxStatus();\n      }\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport TableCell from './TableCell';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableMask from './TableMask';\nimport Button from '../ui/button/Button';\nimport { setColumnAndRowDeletable } from '../../lib/utils';\nimport { ColumnSpec, RowSpec, TableGridRect } from '../../types';\n\n/**\n * table-flow-graph tabel\n */\nexport default class Table {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public bottomControlEL: HTMLElement | null;\n  public cells: TableCell[];\n  public headerCells: TableHeaderCell[];\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n  public occupiedList: number[][]; // 1: occupied, 0: not occupied\n  public tableMask: TableMask;\n  public isMovingCell: boolean;\n  public isResizingCell: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('table', 'tfgraph-table', this.graphInstance.element);\n    this.initTableStatus();\n  }\n\n  private initTableStatus() {\n    this.headerCells = [];\n    this.cells = [];\n    this.canDeleteColumn = false;\n    this.canDeleteRow = false;\n    this.occupiedList = [];\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n  }\n\n  // render table and set table controls\n  public renderTable() {\n    this.initTableStatus();\n    this.element.innerHTML = '';\n    this.createHeader();\n    this.createTds();\n    this.createCells();\n    this.setControls();\n  }\n\n  public setControls() {\n    const isEditMode = this.graphInstance.mode === 'edit';\n    if (isEditMode) {\n      const deleteableObj = setColumnAndRowDeletable(\n        this.occupiedList,\n        this.graphInstance.options.totalRows,\n        this.graphInstance.options.totalColumns,\n      );\n      this.canDeleteColumn = deleteableObj.canDeleteColumn;\n      this.canDeleteRow = deleteableObj.canDeleteRow;\n\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setEditControls();\n      });\n\n      // wait for table render ready\n      setTimeout(() => {\n        const columnSpecs: ColumnSpec[] = []; // [{left, width, columnIndex}]\n        const rowSpecs: RowSpec[] = []; // [{ top, height, rowIndex}]\n\n        this.headerCells.forEach((headerCell) => {\n          // set headerCell controls\n          headerCell.setEditControls();\n          // get columns's width and position\n          columnSpecs.push({\n            width: headerCell.element.getBoundingClientRect().width + 1,\n            left: headerCell.element.offsetLeft - 1,\n            columnIndex: headerCell.columnIndex,\n          });\n        });\n\n        // get rowSpects(row top position and height)\n        for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n          const targetCell = this.getMinRowSpanCell(i, 1);\n          const targetCellHeight = targetCell.element.getBoundingClientRect().height;\n          const targetCellRowHeight = targetCellHeight / targetCell.rowSpan;\n          rowSpecs.push({\n            top: targetCell.element.offsetTop - 1 + (i - targetCell.row) * targetCellRowHeight,\n            height: targetCellRowHeight + 1,\n            rowIndex: i,\n          });\n        }\n        // each table grid's left, top, width, height without rowspan and colspan\n        const tableGridRectList: TableGridRect[] = [];\n        rowSpecs.forEach((rowSpec) => {\n          columnSpecs.forEach((columnSpec) => {\n            tableGridRectList.push(Object.assign({}, rowSpec, columnSpec));\n          });\n        });\n        this.tableMask = new TableMask(tableGridRectList, this.graphInstance);\n      }, 1);\n    } else {\n      // click node event\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setViewModeControls();\n      });\n    }\n    this.setBottomControl();\n\n    // set table cell controls\n    // 1. remove last row ✓\n    // 2. empty cell: add node ✓\n    // 3. node cell: edit node content ✓\n    // 4. node cell: adjust node size ✓\n    // 5. node cell: move node position ✓\n  }\n\n  //  recursively find min rowspan cell for targetRow\n  getMinRowSpanCell(row: number, minRowSpan = 1) {\n    let targetRowCell: TableCell | null = null;\n    const rowCells = this.cells.filter((cell) => cell.row === row);\n    if (rowCells.length === 0) {\n      if (row > 0) {\n        targetRowCell = this.getMinRowSpanCell(row - 1, minRowSpan + 1);\n      }\n    } else {\n      let rowSpan = 20;\n      rowCells.forEach((cell) => {\n        if (cell.rowSpan < rowSpan && cell.rowSpan >= minRowSpan) {\n          rowSpan = cell.rowSpan;\n          targetRowCell = cell;\n        }\n      });\n    }\n    return targetRowCell;\n  }\n\n  public onMouseMove() {\n    if (this.isMovingCell || this.isResizingCell) {\n      this.tableMask.onMouseMove();\n    }\n  }\n\n  public startMoving(targetCell: TableCell) {\n    this.isMovingCell = true;\n    this.graphInstance.toolbar.hintMgr.setHint('moveNode');\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopMoving() {\n    this.isMovingCell = false;\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  public startResizing(targetCell: TableCell) {\n    this.isResizingCell = true;\n    this.graphInstance.toolbar.hintMgr.setHint('resizeNode');\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopResizing() {\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  // sumit cell position / size change\n  public submitCellChange() {\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.enable();\n    this.tableMask.submitChange();\n  }\n\n  public setBottomControl() {\n    if (\n      this.graphInstance.mode === 'edit' &&\n      !this.bottomControlEL &&\n      this.graphInstance.options.totalRows < this.graphInstance.options.maxRows\n    ) {\n      this.bottomControlEL = createClassElement(\n        'div',\n        'flex flex-row items-center justify-between mt-15',\n        this.graphInstance.element,\n      );\n      // add row btn\n      new Button(this.bottomControlEL, {\n        icon: 'plus',\n        label: this.graphInstance.options.labels.addRow,\n        className: 'flex-1',\n        onClick: () => {\n          if (typeof this.graphInstance.options.addRow === 'function') {\n            this.graphInstance.options.addRow();\n          } else {\n            this.graphInstance.refresh(\n              Object.assign({}, this.graphInstance.options, {\n                totalRows: this.graphInstance.options.totalRows + 1,\n              }),\n            );\n            if (typeof this.graphInstance.options.onAddRow === 'function') {\n              this.graphInstance.options.onAddRow();\n            }\n          }\n        },\n      });\n    } else {\n      if (this.bottomControlEL) {\n        removeElement(this.bottomControlEL);\n        this.bottomControlEL = null;\n      }\n    }\n  }\n\n  // render table header\n  createHeader() {\n    if (this.graphInstance.options.columns && this.graphInstance.options.columns.length > 0) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      this.graphInstance.options.columns.forEach((column, index) => {\n        const headerCell = new TableHeaderCell(tr, column, index, this.graphInstance);\n        this.headerCells.push(headerCell);\n      });\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render table rows and tds\n  createTds() {\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      tr.setAttribute('id', `${this.graphInstance.id}_tr_${i}`);\n      const occupiedRow: number[] = [];\n      this.occupiedList.push(occupiedRow);\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        const td = createClassElement('td', 'tfgraph-td', tr);\n        td.setAttribute('id', `${this.graphInstance.id}_td_${i}_${j}`);\n        occupiedRow.push(0);\n      }\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render tabel cells\n  createCells() {\n    // spaned table cell id array\n    const spanedTdIds = [];\n    const nodes = this.graphInstance.options.nodes;\n    if (nodes && nodes.length > 0) {\n      nodes.forEach((node) => {\n        // set spanned tabel cell ids\n        if (node.colSpan > 1 || node.rowSpan > 1) {\n          for (let i = node.column; i < node.column + node.colSpan; i++) {\n            for (let j = node.row; j < node.row + node.rowSpan; j++) {\n              if (!(i === node.column && j === node.row)) {\n                spanedTdIds.push(`${this.graphInstance.id}_td_${j}_${i}`);\n                this.occupiedList[j][i] = 1;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    // remove spaned tabell cell element\n    spanedTdIds.forEach((id) => removeElement(document.getElementById(id)));\n\n    // create table cells\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        if (!spanedTdIds.includes(`${this.graphInstance.id}_td_${i}_${j}`)) {\n          const targetNode =\n            nodes && nodes.length > 0\n              ? nodes.find((node) => node.row === i && node.column === j)\n              : null;\n          const targetTd = document.getElementById(`${this.graphInstance.id}_td_${i}_${j}`);\n          if (targetNode) {\n            targetTd.setAttribute('colSpan', targetNode.colSpan.toString());\n            targetTd.setAttribute('rowSpan', targetNode.rowSpan.toString());\n            this.occupiedList[i][j] = 1;\n          }\n          this.cells.push(new TableCell(targetTd, targetNode, i, j, this.graphInstance));\n        }\n      }\n    }\n  }\n}\n","// import { TableFlowGraph } from '../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport { LineOptions, Position } from '../../types';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph line\n */\nexport default class LineSegment {\n  public element: HTMLElement;\n  public thickness: number;\n  public startPointEl: HTMLElement;\n  public endArrowEl: HTMLElement;\n\n  constructor(parent: LineGroup, options: LineOptions) {\n    this.element = createClassElement('div', 'tfgraph-line', parent.element);\n    const { positionA, positionB, thickness = 2, isStart = true, isEnd = true } = options;\n    this.thickness = thickness;\n    if (isStart) this.toggleStartPoint();\n    if (isEnd) this.toggleEndArrow();\n    this.drawLine(positionA, positionB);\n    this.element.addEventListener('mouseenter', () => parent.setHovered(true));\n    this.element.addEventListener('mouseleave', () => parent.setHovered(false));\n    this.element.addEventListener('dblclick', () => parent.onDoubleClick());\n  }\n\n  public setHoverd(hovered = true) {\n    if (hovered) {\n      this.element.classList.add('hovered');\n    } else {\n      this.element.classList.remove('hovered');\n    }\n  }\n\n  public drawLine(positionA: Position, positionB: Position) {\n    // start point\n    const x1 = positionA.x;\n    const y1 = positionA.y;\n    // end point\n    const x2 = positionB.x;\n    const y2 = positionB.y;\n\n    // distance\n    const length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\n    // center\n    const cx = (x1 + x2) / 2 - length / 2;\n    const cy = (y1 + y2) / 2 - this.thickness / 2;\n    // angle\n    const angle = Math.atan2(y2 - y1, x2 - x1) * (180 / Math.PI);\n\n    this.element.style.width = length + this.thickness + 'px';\n    this.element.style.height = this.thickness + 'px';\n    this.element.style.left = cx - 0.5 * this.thickness + 'px';\n    this.element.style.top = cy + 'px';\n    this.element.style.borderRadius = this.thickness + 'px';\n    this.element.style.transform = `rotate(${angle}deg)`;\n  }\n\n  public toggleStartPoint() {\n    if (this.startPointEl) {\n      removeElement(this.startPointEl);\n    } else {\n      this.startPointEl = createClassElement('div', 'start-point', this.element);\n    }\n  }\n\n  public toggleEndArrow() {\n    if (this.endArrowEl) {\n      removeElement(this.endArrowEl);\n    } else {\n      this.endArrowEl = createClassElement('div', 'arrow', this.element);\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport { LineGroupOptions, Position } from '../../types';\nimport Anchor from '../anchor/Anchor';\nimport LineSegment from './LineSegment';\n\n/**\n * table-flow-graph line group\n */\nexport default class LineGroup {\n  public element: HTMLElement;\n  public isDrawingActive: boolean;\n  public anchorIds: string[];\n  public anchors: Anchor[];\n  public cursorLine: LineSegment; // line currently drawing at end\n  public lines: LineSegment[];\n  public cursorLineStartPosition: Position;\n  public graphInstance: TableFlowGraph;\n  public hovered: boolean; // is mouse hover\n\n  constructor(\n    parentElement: HTMLElement,\n    options: LineGroupOptions,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.element = createClassElement('div', 'tfgraph-line-group', parentElement);\n    this.isDrawingActive = options.isDrawingActive;\n    this.anchorIds = options.anchorIds;\n    this.graphInstance = graphInstance;\n    this.drawLines();\n  }\n\n  public addLineSegment(anchorId) {\n    if (!this.anchorIds.includes(anchorId)) {\n      this.anchorIds.push(anchorId);\n      this.drawLines();\n    }\n  }\n\n  public onDoubleClick() {\n    if (this.hovered) {\n      if (this.isDrawingActive) {\n        this.graphInstance.lineController.endDrawLine();\n      } else {\n        this.graphInstance.lineController.removeLineGroup(this);\n      }\n    }\n  }\n\n  public drawLines() {\n    this.anchors = [];\n    this.lines = [];\n    if (this.anchorIds.length === 0) return;\n    this.anchorIds.forEach((anchorId) => {\n      const targetAnchor = this.graphInstance.anchorController.anchors.find(\n        (anchor) => anchor.id === anchorId,\n      );\n      if (targetAnchor) {\n        this.anchors.push(targetAnchor);\n      }\n    });\n    this.element.innerHTML = '';\n    const pointList: Position[] = this.anchors.map((anchor) => ({\n      x: anchor.posX,\n      y: anchor.posY,\n    }));\n    if (pointList.length > 1) {\n      for (let i = 0; i < pointList.length - 1; i++) {\n        const line = new LineSegment(this, {\n          positionA: pointList[i],\n          positionB: pointList[i + 1],\n          thickness: 2,\n          isStart: i === 0,\n          isEnd: i === pointList.length - 2 && !this.isDrawingActive,\n        });\n        this.lines.push(line);\n      }\n    }\n    // add line between last anchor position and mouse position when drawing\n    if (this.isDrawingActive) {\n      this.cursorLineStartPosition = pointList[pointList.length - 1];\n      // draw cursor line\n      this.cursorLine = new LineSegment(this, {\n        positionA: this.cursorLineStartPosition,\n        positionB: this.graphInstance.mousePosition,\n        thickness: 2,\n        isStart: pointList.length === 0,\n        isEnd: true,\n      });\n      this.lines.push(this.cursorLine);\n    }\n  }\n\n  public setHovered(hovered = true) {\n    if (this.graphInstance.mode === 'edit') {\n      this.hovered = hovered;\n      this.lines.forEach((line) => {\n        line.setHoverd(hovered);\n      });\n      if (!this.isDrawingActive) {\n        this.graphInstance.toolbar.hintMgr.setHint(hovered ? 'hoverLine' : 'idel');\n      }\n    }\n  }\n\n  public endDrawing() {\n    // removeElement(this.cursorLine.element);\n    this.isDrawingActive = false;\n    this.drawLines();\n  }\n\n  public escapeDrawing() {\n    if (this.cursorLine) {\n      if (this.anchorIds.length > 0) {\n        this.anchorIds.pop();\n        if (this.anchorIds.length === 0) {\n          removeElement(this.element);\n          // remove the last anchor id in this line group\n          this.graphInstance.lineController.lineAnchorIds =\n            this.graphInstance.lineController.lineAnchorIds.filter(\n              (lineArray) => lineArray.length > 1,\n            );\n          this.graphInstance.lineController.endDrawLine();\n        } else {\n          this.drawLines();\n        }\n      }\n    }\n  }\n\n  public onMouseMove(graphInstance: TableFlowGraph) {\n    if (this.cursorLine) {\n      let targetPosition = graphInstance.mousePosition;\n      // snap to hovered anchor\n      if (\n        graphInstance.anchorController.hoveredAnchor &&\n        !this.anchorIds.includes(graphInstance.anchorController.hoveredAnchor.id)\n      ) {\n        targetPosition = {\n          x: graphInstance.anchorController.hoveredAnchor.posX,\n          y: graphInstance.anchorController.hoveredAnchor.posY,\n        };\n      }\n      this.cursorLine.drawLine(this.cursorLineStartPosition, targetPosition);\n    }\n  }\n}\n","import { cloneDeep, isEqual } from 'lodash-es';\nimport { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement, setStyles } from '../../lib/dom';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph lines controller\n */\nexport default class LineController {\n  public element: HTMLElement;\n  public lineAnchorIds: string[][]; // anchor ids to draw lines\n  public originLineAnchorIds: string[][]; // compare to lineAnchorIds to determine if lines are changed\n  public isDrawingLine: boolean;\n  public currentDrawingLine: LineGroup;\n  public graphInstance: TableFlowGraph;\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-line-layer', this.graphInstance.element);\n    const { options } = this.graphInstance;\n    // this.options.mode = options.mode ? options.mode : 'view';\n    if (options.lines && Array.isArray(options.lines)) {\n      this.lineAnchorIds = options.lines;\n    } else {\n      this.lineAnchorIds = [];\n    }\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public renderLines() {\n    this.element.innerHTML = '';\n    this.lineAnchorIds.forEach((lineGroup) => {\n      new LineGroup(\n        this.element,\n        { anchorIds: lineGroup, isDrawingActive: false },\n        this.graphInstance,\n      );\n    });\n    this.setColAndRowDeletable();\n  }\n\n  public startDrawLine() {\n    this.isDrawingLine = true;\n    this.graphInstance.toolbar.disable();\n    this.graphInstance.toolbar.hintMgr.setHint('drawLine');\n    // set lines layer below anchors layer when draing line\n    setStyles(this.element, { zIndex: '1' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '2' });\n\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public endDrawLine() {\n    this.isDrawingLine = false;\n    this.graphInstance.toolbar.enable();\n    // set lines layer above anchors layer when draing line\n    setStyles(this.element, { zIndex: '2' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '1' });\n\n    if (this.currentDrawingLine) {\n      this.currentDrawingLine.endDrawing();\n      if (this.currentDrawingLine.anchorIds.length <= 1) {\n        this.removeLineGroup(this.currentDrawingLine);\n      }\n      this.currentDrawingLine = undefined;\n    }\n    if (!isEqual(this.originLineAnchorIds, this.lineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  setColAndRowDeletable() {\n    const totalRows = this.graphInstance.options.totalRows;\n    const totalColumns = this.graphInstance.options.totalColumns;\n    this.canDeleteColumn = true;\n    this.canDeleteRow = true;\n    this.lineAnchorIds.forEach((line) => {\n      line.forEach((id) => {\n        const idArray = id.split('_');\n        const row = idArray[1];\n        const col = idArray[2];\n        if (parseInt(col) === totalColumns - 1) {\n          this.canDeleteColumn = false;\n        }\n        if (parseInt(row) === totalRows - 1) {\n          this.canDeleteRow = false;\n        }\n      });\n    });\n  }\n\n  public onChangeLines() {\n    this.setColAndRowDeletable();\n    this.graphInstance.options = Object.assign({}, this.graphInstance.options, {\n      lines: this.lineAnchorIds,\n    });\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    if (typeof this.graphInstance.options.onChangeLines === 'function') {\n      this.graphInstance.options.onChangeLines(this.lineAnchorIds);\n    }\n  }\n\n  public removeLineGroup(line: LineGroup) {\n    removeElement(line.element);\n    this.lineAnchorIds = this.lineAnchorIds.filter((lines) => !isEqual(lines, line.anchorIds));\n    if (!isEqual(this.lineAnchorIds, this.originLineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  public createLineGroup(anchorId) {\n    this.startDrawLine();\n    this.lineAnchorIds.push([anchorId]);\n    this.currentDrawingLine = new LineGroup(\n      this.element,\n      { anchorIds: this.lineAnchorIds[this.lineAnchorIds.length - 1], isDrawingActive: true },\n      this.graphInstance,\n    );\n  }\n\n  public addLineSegment(anchorId) {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.addLineSegment(anchorId);\n    }\n  }\n\n  public onMouseMove() {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.onMouseMove(this.graphInstance);\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport { Bearing } from '../../types';\n\n/**\n * Anchor point for drawing lines\n */\nexport default class Anchor {\n  // element of this Anchor\n  public element: HTMLElement;\n  // the bearing relative to this anchor's parent table cell\n  public bearing: Bearing;\n  public elementTr: HTMLElement;\n  public elementCol: HTMLElement;\n  // is the anchor on table cell border or on inner block border(top / bottom)\n  public isOffsetX: boolean;\n  // is the anchor on table cell border or on inner block border(left / right)\n  public isOffsetY: boolean;\n  // id for this Anchor class\n  public id = '';\n  // x position relative to table area\n  public posX = 0;\n  // y position relative to table area\n  public posY = 0;\n  public row: number;\n  public column: number;\n  public hidden = false;\n\n  constructor(\n    bearing: Bearing,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n    isOffsetX = false,\n    isOffsetY = false,\n  ) {\n    this.bearing = bearing;\n    this.isOffsetX = isOffsetX;\n    this.isOffsetY = isOffsetY;\n    this.row = row;\n    this.column = column;\n    this.elementTr = document.getElementById(`${graphInstance.id}_tr_${row}`);\n    this.elementCol = document.getElementById(`${graphInstance.id}_col_${column}`);\n    if (this.elementTr && this.elementCol) {\n      // create dom elements\n      this.element = createClassElement(\n        'div',\n        'tfgraph-anchor',\n        graphInstance.anchorController.element,\n      );\n      createClassElement('div', 'tfgraph-anchor-point', this.element);\n      const area = createClassElement('div', 'tfgraph-anchor-area', this.element);\n      createClassElement('div', 'tfgraph-anchor-circle', area);\n\n      // set Anchor instance id\n      this.id = `anchor_${row}_${column}_${bearing}_${isOffsetX ? 'offsetx' : 'normalx'}_${\n        isOffsetY ? 'offsety' : 'normaly'\n      }`;\n      // set dom id\n      this.element.setAttribute('id', `${graphInstance.id}_${this.id}`);\n\n      graphInstance.anchorController.anchors.push(this);\n      this.setVisible(graphInstance.mode === 'edit');\n      // setTimeout(() => this.setPosition(), 1);\n      this.setPosition();\n      this.element.addEventListener('click', () => {\n        if (!graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.createLineGroup(this.id);\n        } else {\n          graphInstance.lineController.addLineSegment(this.id);\n        }\n      });\n      this.element.addEventListener('mouseenter', () => {\n        graphInstance.anchorController.setHoveredAnchor(this);\n      });\n      this.element.addEventListener('mouseleave', () => {\n        if (graphInstance.anchorController.hoveredAnchor.id === this.id) {\n          graphInstance.anchorController.setHoveredAnchor(null);\n        }\n      });\n      // dblclick to finish drawing lines\n      this.element.addEventListener('dblclick', () => {\n        if (graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.endDrawLine();\n        }\n      });\n    }\n  }\n\n  setOnePosition(x, y) {\n    this.posX = x;\n    this.posY = y;\n    this.element.style.left = x + 'px';\n    this.element.style.top = y + 'px';\n    this.element.setAttribute('title', `xpos & ypos=${x},${y}`);\n  }\n\n  public setVisible(visible: boolean) {\n    if (visible) {\n      this.element.classList.remove('hidden');\n    } else {\n      this.element.classList.add('hidden');\n    }\n  }\n\n  public setPosition() {\n    const x_left = this.elementCol.offsetLeft + (this.isOffsetX ? 15 : 0);\n    const x_center = this.elementCol.offsetLeft + 0.5 * this.elementCol.offsetWidth;\n    const x_right =\n      this.elementCol.offsetLeft + this.elementCol.offsetWidth - (this.isOffsetX ? 15 : 0);\n    const y_top = this.elementTr.offsetTop + (this.isOffsetY ? 15 : 0);\n    const y_center = this.elementTr.offsetTop + 0.5 * this.elementTr.offsetHeight;\n    const y_bottom =\n      this.elementTr.offsetTop + this.elementTr.offsetHeight - (this.isOffsetY ? 15 : 0);\n\n    switch (this.bearing) {\n      case 'topleft':\n        this.setOnePosition(x_left, y_top);\n        break;\n      case 'top':\n        this.setOnePosition(x_center, y_top);\n        break;\n      case 'topright':\n        this.setOnePosition(x_right, y_top);\n        break;\n      case 'right':\n        this.setOnePosition(x_right, y_center);\n        break;\n      case 'bottomright':\n        this.setOnePosition(x_right, y_bottom);\n        break;\n      case 'bottom':\n        this.setOnePosition(x_center, y_bottom);\n        break;\n      case 'bottomleft':\n        this.setOnePosition(x_left, y_bottom);\n        break;\n      case 'left':\n        this.setOnePosition(x_left, y_center);\n        break;\n      case 'center':\n        this.setOnePosition(x_center, y_center);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport TableCell from '../table/TableCell';\nimport Anchor from './Anchor';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class AnchorController {\n  public element: HTMLElement;\n  public anchors: Anchor[];\n  public hoveredAnchor: Anchor | null; // current Anchor that mouse hoverd\n  graphInstance: TableFlowGraph;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.anchors = [];\n    this.element = createClassElement('div', 'tfgraph-anchor-layer', graphInstance.element);\n  }\n\n  public renderAnchors() {\n    this.element.innerHTML = '';\n    this.anchors = [];\n    this.graphInstance.tableController.cells.forEach((cell) => {\n      // console.log('cell:::::::::::', cell);\n      this.createAnchors(cell);\n    });\n  }\n\n  public setHoveredAnchor(anchor: Anchor | null) {\n    this.hoveredAnchor = anchor;\n    if (!this.graphInstance.lineController.isDrawingLine) {\n      if (anchor) {\n        this.graphInstance.toolbar.hintMgr.setHint('hoverAnchor');\n      } else {\n        this.graphInstance.toolbar.hintMgr.setHint('idel');\n      }\n    }\n  }\n\n  public resetPosition() {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor) => {\n        anchor.setPosition();\n      });\n    }\n  }\n\n  public setAnchorsVisible(visible: boolean) {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor: Anchor) => {\n        anchor.setVisible(visible);\n      });\n    }\n  }\n\n  // create anchors for one cell\n  createAnchors(cell: TableCell) {\n    for (let row = cell.row; row < cell.row + cell.rowSpan; row++) {\n      for (let col = cell.column; col < cell.column + cell.colSpan; col++) {\n        if (row === 0) {\n          new Anchor('top', row, col, this.graphInstance);\n          new Anchor('topright', row, col, this.graphInstance);\n          if (cell.column === 0) {\n            new Anchor('topleft', row, col, this.graphInstance);\n          }\n        }\n        if (col === 0) {\n          new Anchor('left', row, col, this.graphInstance);\n          new Anchor('bottomleft', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1) {\n          new Anchor('right', row, col, this.graphInstance);\n        }\n        if (row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottom', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1 || row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottomright', row, col, this.graphInstance);\n        }\n        if (cell.hasNode) {\n          if (col === cell.column) {\n            new Anchor('left', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomleft', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (col === cell.column + cell.colSpan - 1) {\n            new Anchor('right', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (row === cell.row) {\n            new Anchor('top', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('topright', row, col, this.graphInstance, false, true);\n            }\n          }\n          if (row === cell.row + cell.rowSpan - 1) {\n            new Anchor('bottom', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, false, true);\n            }\n          }\n        }\n      }\n    }\n    if (!cell.hasNode) {\n      new Anchor('center', cell.row, cell.column, this.graphInstance);\n    }\n  }\n}\n","import './styles/index.scss';\nimport { createClassElement, setStyles } from './lib/dom';\nimport { debounce } from './lib/utils';\nimport { Mode, Position, TFGraphOptions } from './types';\nimport Toolbar from './components/toolbar/Toolbar';\nimport TableController from './components/table/TableController';\nimport LineController from './components/line/LineController';\nimport AnchorController from './components/anchor/AnchorController';\n\n// default options\nconst defaultOptions: TFGraphOptions = {\n  totalColumns: 8,\n  totalRows: 8,\n  maxColumns: 12,\n  maxRows: 30,\n  labels: {\n    editMode: 'Edit Mode',\n    previewMode: 'Preview Mode',\n    editColumn: 'Edit Column',\n    addColumn: 'Add Column',\n    deleteColumn: 'Delete Column',\n    addRow: 'Add Row',\n    deleteRow: 'Delete Row',\n    editNode: 'Edit Node',\n    addNode: 'Add Node',\n    deleteNode: 'Delete Node',\n    adjustNodeSize: 'Adjust Node Size',\n    moveNode: 'Move Node',\n    newNode: 'New Node',\n    enterNodeName: 'Enter node name',\n    enterColumnName: 'Enter column name',\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n    hint_drawLine:\n      'Click another anchor to draw new line segment; press [ESC] to undo prev line segment; press [ENTER] or double click left mouse to finish drawing',\n    hint_hoverLine: 'Double click to delete this line',\n    hint_hoverAnchor: 'Click to start drawing lines',\n    hint_moveNode: 'Move cursor to move this node, click left mouse to confrim moving',\n    hint_resizeNode: 'Move cursor to resize this node, click left mouse to confrim resizing',\n  },\n};\n\nexport class TableFlowGraph {\n  public element: HTMLElement;\n  public baseElement: HTMLElement;\n  public options: TFGraphOptions;\n  public id: string;\n  public toolbar: Toolbar;\n  public isAlive: boolean;\n  public hasTableHeader: boolean;\n  public mode: Mode;\n  public mousePosition: Position;\n  public tableController: TableController;\n  public lineController: LineController;\n  public anchorController: AnchorController;\n\n  constructor(el: HTMLElement, options: TFGraphOptions) {\n    if (!el) {\n      throw new Error('no element is specified to initialize TableFlowGraph');\n    } else {\n      this.baseElement = el;\n    }\n\n    // use id as unique key, to support multiple table-flow-graph instances in one page.\n    if (this.baseElement.getAttribute('id')) {\n      this.id = this.baseElement.getAttribute('id');\n    } else {\n      this.id = 'id' + (Math.random() * 100000).toFixed(0);\n    }\n\n    this.init(options);\n\n    window.addEventListener('resize', this, false);\n    window.addEventListener('keydown', this, false);\n    window.addEventListener('mousemove', this, false);\n\n    this.isAlive = true;\n  }\n\n  public init(options: TFGraphOptions) {\n    this.baseElement.innerHTML = '';\n\n    this.options = Object.assign({}, defaultOptions, options);\n    if (options.labels) {\n      this.options.labels = Object.assign({}, defaultOptions.labels, options.labels);\n    }\n    if (typeof this.options.rows !== 'undefined') {\n      this.options.totalRows = this.options.rows.length;\n    }\n    if (this.options.columns && this.options.columns.length > 0) {\n      this.options.totalColumns = this.options.columns.length;\n    }\n    if (!this.options.columns || this.options.columns.length === 0) {\n      this.options.columns = [];\n      this.hasTableHeader = false;\n      for (let i = 0; i < this.options.totalColumns; i++) {\n        this.options.columns.push({\n          width: 'auto',\n        });\n      }\n    } else {\n      this.hasTableHeader = true;\n    }\n    if (this.options.totalRows > this.options.maxRows) {\n      this.options.totalRows = this.options.maxRows;\n    }\n    if (this.options.totalColumns > this.options.maxColumns) {\n      this.options.totalColumns = this.options.maxColumns;\n    }\n\n    // create toolbar and edit state\n    if (this.options.isEditor) {\n      this.mode = 'edit';\n      this.toolbar = new Toolbar(this.baseElement, this);\n    } else {\n      this.mode = 'preview';\n    }\n\n    // create root dom elements and controllers\n    this.element = createClassElement('div', 'tfgraph', this.baseElement);\n    if (this.mode === 'edit') this.element.classList.add('edit');\n    this.lineController = new LineController(this);\n    this.anchorController = new AnchorController(this);\n    this.tableController = new TableController(this);\n\n    this.render();\n  }\n\n  public render() {\n    // render table\n    this.tableController.renderTable();\n\n    // wait for table render ready; TODO set anchor position relative to table cells\n    setTimeout(() => {\n      // render anchors\n      this.anchorController.renderAnchors();\n      // render lines\n      this.lineController.renderLines();\n    }, 1);\n  }\n\n  handleResize = () => {\n    // TODO detailed resize management\n    // this.anchorController.resetPosition();\n    this.refresh();\n  };\n  debouncedHandleResize = debounce(this.handleResize, 500);\n\n  // handle addEventListener events\n  handleEvent(event) {\n    switch (event.type) {\n      case 'resize':\n        this.debouncedHandleResize();\n        break;\n      case 'mousemove':\n        this.onMourseMove(event);\n        break;\n      case 'keydown':\n        this.onKeydown(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onMourseMove(event) {\n    const rect = this.element.getBoundingClientRect();\n    const offsetX = event.clientX - rect.left;\n    const offsetY = event.clientY - rect.top;\n    this.mousePosition = { x: offsetX, y: offsetY };\n    this.lineController.onMouseMove();\n    this.tableController.onMouseMove();\n  }\n\n  onKeydown = (e) => {\n    if (e.code === 'Enter') {\n      // press enter to finish drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.endDrawLine();\n      }\n    } else if (e.code === 'Escape') {\n      // press esc to cancel last anchor point when drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.currentDrawingLine.escapeDrawing();\n      }\n      if (this.tableController.isMovingCell) {\n        this.tableController.stopMoving();\n      }\n      if (this.tableController.isResizingCell) {\n        this.tableController.stopResizing();\n      }\n    }\n  };\n\n  public refresh(options?: TFGraphOptions) {\n    if (!this.isAlive) {\n      return;\n    } else {\n      setTimeout(() => {\n        const height = this.baseElement.getBoundingClientRect().height;\n        // maintain consistent height when rerendering dom elements\n        setStyles(this.baseElement, { height: height + 'px' });\n        this.init(options ? options : this.options);\n        setStyles(this.baseElement, { height: 'auto' });\n      });\n    }\n  }\n\n  public destroy() {\n    if (!this.isAlive) {\n      return;\n    }\n\n    window.removeEventListener('resize', this, false);\n    window.removeEventListener('keydown', this, false);\n    window.removeEventListener('mousemove', this, false);\n\n    this.isAlive = false;\n  }\n\n  public changeMode(mode: Mode) {\n    if (this.mode !== mode) {\n      this.mode = mode;\n      if (mode === 'edit') {\n        this.element.classList.add('edit');\n      } else {\n        this.element.classList.remove('edit');\n      }\n      this.anchorController.setAnchorsVisible(mode === 'edit');\n      this.tableController.renderTable();\n    }\n  }\n}\n"],"names":["createClassElement","tagName","className","parentNode","el","document","createElement","appendChild","removeElement","element","remove","removeChild","setStyles","obj","key","val","concat","style","svgIconList","edit","plus","x","x2","expand","move","delete_row","delete_col","Icon","parentElement","options","htmlString","div","name","this","innerHTML","trim","firstChild","size","color","styleObj","width","height","fill","setAttribute","classList","add","Tooltip","targetElement","_this","rendered","addEventListener","mouseEnter","mouseLeave","prototype","render","_a","_b","placement","label","targetRect","getBoundingClientRect","body","left","top","areaElement","boxElement","arrowElement","areaRect","arrowRect","areaStyleObj","arrowStyleObj","bottom","right","showTimeoutId","window","clearTimeout","dismiss","removeEventListener","setTimeout","dismissTimeoutId","Button","type","onClick","icon","tooltip","btnToolTip","e","disabled","setDisabled","setEnabled","Toggler","btnList","items","initialActiveIndex","onChange","indicatorEl","btnContainerEl","forEach","item","index","push","itemData","setActive","activeIndex","setActiveIndicator","containerRect","rect","Dialog","title","getElementsByTagName","maskElement","renderTitleBar","contentElement","close","titleBarElement","innerText","closeBtnElement","EditColumnDialog","graphInstance","targetHeaderCell","dialog","setIsEdit","renderContent","columnData","isEdit","inputEl","value","labels","enterColumnName","btnContainer","btnCancel","cancel","btnConfirm","confirm","refresh","onEditColumn","colData","id","totalColumns","columns","onAddColumn","show","editColumn","addColumn","HintManager","targetEl","currentHintState","setHint","hintState","hint_drawLine","hint_hoverLine","hint_hoverAnchor","hint_moveNode","hint_resizeNode","Toolbar","modeToggler","editMode","previewMode","changeMode","setToolbarState","hintEl","hintMgr","rightBtns","newColumnBtn","disabledMask","addColDialog","hasTableHeader","Object","assign","disable","enable","maxColumns","mode","Popup","timeoutId","EditNodeDialog","targetCell","nodeData","nodeNameInput","enterNodeName","onEditNode","row","column","rowSpan","colSpan","nodes","onAddNode","editNode","addNode","TableCell","data","createTabelCell","node","isBtn","renderNode","hasNode","nodeEl","minHeight","setEditControls","controlLayer","editDialog","moveNode","tableController","startMoving","deleteNode","onDeleteNode","adjustNodeSize","startResizing","totalRows","deleteRowBtn","deleteRow","onDeleteRow","deleteColBtn","deleteColumn","onDeleteColumn","targetColumn","pop","onMouseEnter","onMouseLeave","setViewModeControls","onClickNode","showPopup","contentEl","renderNodeHoverPopup","popup","canDeleteRow","lineController","canDeleteColumn","setIsTarget","isTarget","opacity","TableHeaderCell","columnIndex","isLast","editColDialog","TableMaskBox","parentEl","submitCellChange","setPositinAndSize","pos_size","TableMask","tableGridRectList","showMask","targetTableCell","setFilteredOccupiedList","maskBox","mouseGridRect","getMouseRect","targetCellRect","getRectByRowAndColumn","setMaskBoxStatus","filteredOccupiedList","cloneDeep","occupiedList","i","j","isMovingCell","resultCellPositionAndSize","rowIndex","Math","min","abs","topLeftRect","bottomRightRect","doable","startMask","stopMask","submitChange","targetCellPositionAndSize","isEqual","targetGridRect","mouseX","mousePosition","mouseY","y","gridRect","find","onMouseMove","newRect","Table","initTableStatus","headerCells","cells","isResizingCell","renderTable","createHeader","createTds","createCells","setControls","deleteableObj","setColumnAndRowDeletable","cell","columnSpecs","rowSpecs","headerCell","offsetLeft","getMinRowSpanCell","targetCellRowHeight","offsetTop","rowSpec","columnSpec","tableMask","setBottomControl","minRowSpan","targetRowCell","rowCells","filter","length","rowSpan_1","toolbar","stopMoving","stopResizing","bottomControlEL","maxRows","addRow","onAddRow","tr_1","tr","occupiedRow","spanedTdIds","getElementById","includes","this_1","targetNode","targetTd","toString","LineSegment","parent","positionA","positionB","thickness","isStart","_c","isEnd","toggleStartPoint","toggleEndArrow","drawLine","setHovered","onDoubleClick","setHoverd","hovered","x1","y1","y2","sqrt","cx","cy","angle","atan2","PI","borderRadius","transform","startPointEl","endArrowEl","LineGroup","isDrawingActive","anchorIds","drawLines","addLineSegment","anchorId","endDrawLine","removeLineGroup","anchors","lines","targetAnchor","anchorController","anchor","pointList","map","posX","posY","line","cursorLineStartPosition","cursorLine","endDrawing","escapeDrawing","lineAnchorIds","lineArray","targetPosition","hoveredAnchor","LineController","Array","isArray","originLineAnchorIds","renderLines","lineGroup","setColAndRowDeletable","startDrawLine","isDrawingLine","zIndex","currentDrawingLine","undefined","onChangeLines","idArray","split","col","parseInt","createLineGroup","Anchor","bearing","isOffsetX","isOffsetY","hidden","elementTr","elementCol","area","setVisible","setPosition","setHoveredAnchor","setOnePosition","visible","x_left","x_center","offsetWidth","x_right","y_top","y_center","offsetHeight","y_bottom","AnchorController","renderAnchors","createAnchors","resetPosition","setAnchorsVisible","defaultOptions","newNode","TableFlowGraph","func","wait","timeoutID","handleResize","debouncedHandleResize","Number","isInteger","console","warn","args","_i","arguments","context","apply","onKeydown","code","Error","baseElement","getAttribute","random","toFixed","init","isAlive","rows","isEditor","TableController","handleEvent","event","onMourseMove","offsetX","clientX","offsetY","clientY","destroy"],"mappings":"6SAiIgBA,EACdC,EACAC,EACAC,QAAA,IAAAA,IAAAA,EAA8B,MAE9B,IAAMC,EAAKC,SAASC,cAAcL,GAGlC,OAFAG,EAAGF,UAAYA,EACXC,GAAYA,EAAWI,YAAYH,GAChCA,EAmBH,SAAUI,EAAcC,GACxBA,IACEA,EAAQC,OACVD,EAAQC,SAEJD,EAAQN,YACVM,EAAQN,WAAWQ,YAAYF,IAgBvB,SAAAG,EAAUH,EAAsBI,GAC9C,IAAK,IAAMC,KAAOD,EAAK,CACrB,IAAIE,EAAMF,EAAIC,GACK,iBAARC,IACTA,EAAM,GAAAC,OAAGD,EAAG,OAEdN,EAAQQ,MAAMH,GAAOC,EAEvB,OAAON,ECnKF,ICvBDS,EAAc,CAClBC,KAAM,s5BACNC,KAAM,i/BACNC,EAAG,4oCACHC,GAAI,usBACJC,OACE,k4CACFC,KAAM,gzDACNd,OACE,ooCACFe,WACE,8oCACFC,WACE,0oCCCJC,EAEE,SACEC,EACAC,GAQA,IHmKwCC,EACpCC,EGnKJ,GADmBb,EAAYW,EAAQG,MACvB,CACdC,KAAKxB,SHiKiCqB,EGjKKZ,EAAYW,EAAQG,OHkK7DD,EAAM1B,SAASC,cAAc,QAC/B4B,UAAYJ,EAAWK,OAGpBJ,EAAIK,YGrKP,IAAMC,EAAOR,EAAQQ,KAAOR,EAAQQ,KAAO,GACrCC,EAAQT,EAAQS,MAAQT,EAAQS,MAAQ,UACxCC,EAAyC,CAC7CC,MAAOH,EAAO,KACdI,OAAQJ,EAAO,MAEbR,EAAQS,QACVC,EAASG,KAAOJ,EAChBC,EAASD,MAAQA,GAEnB1B,EAAUqB,KAAKxB,QAAS8B,GACpBV,EAAQZ,OACVL,EAAUqB,KAAKxB,QAASoB,EAAQZ,OAE9BY,EAAQ3B,WAAW+B,KAAKxB,QAAQkC,aAAa,QAASd,EAAQ3B,WAClE+B,KAAKxB,QAAQmC,UAAUC,IAAI,gBAC3BjB,EAAcrB,YAAY0B,KAAKxB,WCvCrCqC,EAAA,WAYE,SAAYA,EAAAC,EAA4BlB,GAAxC,IAMCmB,EAAAf,KALCA,KAAKc,cAAgBA,EACrBd,KAAKJ,QAAUA,EACfI,KAAKgB,UAAW,EAChBhB,KAAKc,cAAcG,iBAAiB,cAAc,WAAM,OAAAF,EAAKG,gBAC7DlB,KAAKc,cAAcG,iBAAiB,cAAc,WAAM,OAAAF,EAAKI,gBAmFjE,OAhFSN,EAAAO,UAAAC,OAAP,WACQ,IAAAC,EAA+BtB,KAAKJ,QAAlC2B,EAAiBD,EAAAE,UAAjBA,OAAS,IAAAD,EAAG,MAAKA,EAAEE,UAErBC,EAAa1B,KAAKc,cAAca,wBACtC3B,KAAKxB,QAAUT,EAAmB,MAAO,kBAAmBK,SAASwD,MACrEjD,EAAUqB,KAAKxB,QAAS,CACtBqD,KAAMH,EAAWG,KAAO,GAAMH,EAAWnB,MAAQ,KACjDuB,IAAKJ,EAAWI,IAAM,GAAMJ,EAAWlB,OAAS,OAGlDR,KAAK+B,YAAchE,EAAmB,MAAO,wBAAwBgB,OAAAyC,GAAaxB,KAAKxB,SACvFwB,KAAKgC,WAAajE,EAAmB,MAAO,sBAAuBiC,KAAK+B,aACxE/B,KAAKiC,aAAelE,EAAmB,MAAO,wBAAyBiC,KAAK+B,aACxEN,IAAOzB,KAAKgC,WAAW/B,UAAYwB,GAEvC,IAAMS,EAAWlC,KAAK+B,YAAYJ,wBAC5BQ,EAAYnC,KAAKiC,aAAaN,wBAC9BS,EAA6C,GAC7CC,EAA8C,GACpD,OAAQb,GACN,IAAK,MACHY,EAAaP,MAAQ,GAAMK,EAAS3B,MAAQ,KAC5C6B,EAAaE,OAAS,GAAMZ,EAAWlB,OAAS,GAAK,KACrD6B,EAAcR,KAAO,IAAOK,EAAS3B,MAAQ4B,EAAU5B,OAAS,KAChE,MACF,IAAK,QACH6B,EAAaP,KAAO,GAAMH,EAAWnB,MAAQ,KAC7C6B,EAAaN,KAAO,GAAMI,EAAS1B,OAAS,KAC5C6B,EAAcP,IAAM,IAAOI,EAAS1B,OAAS2B,EAAU3B,QAAU,KACjE,MACF,IAAK,SACH4B,EAAaP,MAAQ,GAAMK,EAAS3B,MAAQ,KAC5C6B,EAAaN,IAAM,GAAMJ,EAAWlB,OAAS,KAC7C6B,EAAcR,KAAO,IAAOK,EAAS3B,MAAQ4B,EAAU5B,OAAS,KAChE,MACF,IAAK,OACH6B,EAAaG,MAAQ,GAAMb,EAAWnB,MAAQ,KAC9C6B,EAAaN,KAAO,GAAMI,EAAS1B,OAAS,KAC5C6B,EAAcP,IAAM,IAAOI,EAAS1B,OAAS2B,EAAU3B,QAAU,KAKrE7B,EAAUqB,KAAK+B,YAAaK,GAC5BzD,EAAUqB,KAAKiC,aAAcI,GAE7BrC,KAAKgB,UAAW,EACZhB,KAAKwC,gBACPC,OAAOC,aAAa1C,KAAKwC,eACzBxC,KAAKwC,cAAgB,OAIlB3B,EAAAO,UAAAuB,QAAP,WAAA,IAKC5B,EAAAf,KAJCA,KAAKgB,UAAW,EAChBhB,KAAKc,cAAc8B,oBAAoB,cAAc,WAAM,OAAA7B,EAAKG,gBAChElB,KAAKc,cAAc8B,oBAAoB,cAAc,WAAM,OAAA7B,EAAKI,gBAC5DnB,KAAKxB,SAASD,EAAcyB,KAAKxB,UAGhCqC,EAAAO,UAAAF,WAAP,WAAA,IASCH,EAAAf,KARMA,KAAKgB,UAAahB,KAAKwC,gBAC1BxC,KAAKwC,cAAgBC,OAAOI,YAAW,WACrC9B,EAAKM,WACJ,MAEDrB,KAAK8C,kBACPL,OAAOC,aAAa1C,KAAK8C,mBAItBjC,EAAAO,UAAAD,WAAP,WAAA,IAQCJ,EAAAf,KAPKA,KAAKwC,gBACPC,OAAOC,aAAa1C,KAAKwC,eACzBxC,KAAKwC,cAAgB,MAEvBxC,KAAK8C,iBAAmBL,OAAOI,YAAW,WACxC9B,EAAK4B,YACJ,KAEN9B,KClGDkC,EAAA,WAKE,SAAYA,EAAApD,EAA4BC,GAAxC,IAmBCmB,EAAAf,KAlBSyB,EAAwC7B,EAAnC6B,MAAEuB,EAAiCpD,EAA7BoD,KAAEC,EAA2BrD,EAApBqD,QAAEC,EAAkBtD,EAAOsD,KAAnBC,EAAYvD,EAAOuD,QACnDlF,EAAY,8BACZ2B,EAAQ3B,YAAWA,GAAa,IAAM2B,EAAQ3B,WAClDA,GAAa,KAAO+E,GAAc,WAClChD,KAAKxB,QAAUT,EAAmB,SAAUE,EAAW0B,GACnDuD,GAAM,IAAIxD,EAAKM,KAAKxB,QAAS,CAAEuB,KAAMmD,EAAM9C,KAAM,GAAInC,UAAWwD,EAAQ,OAAS,KACjFA,IACF1D,EAAmB,OAAQ,GAAIiC,KAAKxB,SAASyB,UAAYwB,GAEvD0B,IAASnD,KAAKoD,WAAa,IAAIvC,EAAQb,KAAKxB,QAAS,CAAEiD,MAAO0B,KAElEnD,KAAKxB,QAAQyC,iBAAiB,SAAS,SAACoC,GAClCtC,EAAKqC,YAAYrC,EAAKqC,WAAWT,UACjC5B,EAAKuC,UACc,mBAAZL,GACTA,EAAQI,MAchB,OATEN,EAAA3B,UAAAmC,YAAA,WACEvD,KAAKsD,UAAW,EAChBtD,KAAKxB,QAAQmC,UAAUC,IAAI,aAG7BmC,EAAA3B,UAAAoC,WAAA,WACExD,KAAKsD,UAAW,EAChBtD,KAAKxB,QAAQmC,UAAUlC,OAAO,aAEjCsE,KCrCDU,EAAA,WAQE,SAAYA,EAAA9D,EAA4BC,GAAxC,IAeCmB,EAAAf,KAjBMA,KAAO0D,QAAoB,GAGxB,IAAAC,EAAwC/D,EAAO+D,MAAxCC,EAAiChE,EAAOgE,mBAApBC,EAAajE,WAChDI,KAAKxB,QAAUT,EAAmB,MAAO,kBAAmB4B,GAC5DK,KAAK8D,YAAc/F,EAAmB,MAAO,4BAA6BiC,KAAKxB,SAC/EwB,KAAK+D,eAAiBhG,EAAmB,MAAO,6BAA8BiC,KAAKxB,SACnFmF,EAAMK,SAAQ,SAACC,EAAMC,GACnB,IAAM/F,EAAKJ,EAAmB,SAAU,sBAAuBgD,EAAKgD,gBACpE5F,EAAG8B,UAAYgE,EAAKxC,MACpBV,EAAK2C,QAAQS,KAAK,CAAEC,SAAUH,EAAM9F,GAAEA,EAAE+F,MAAKA,IAC7C/F,EAAG8C,iBAAiB,SAAS,WAC3BF,EAAKsD,UAAUH,GACS,mBAAbL,GAAyBA,EAASI,EAAMC,SAGvDlE,KAAKqE,UAAwC,iBAAvBT,EAAkCA,EAAqB,GAuCjF,OApCEH,EAASrC,UAAAiD,UAAT,SAAUH,GACJlE,KAAKsE,cAAgBJ,IACS,iBAArBlE,KAAKsE,aACdtE,KAAK0D,QAAQ1D,KAAKsE,aAAanG,GAAGwC,UAAUlC,OAAO,UAErDuB,KAAKsE,YAAcJ,EACnBlE,KAAK0D,QAAQQ,GAAO/F,GAAGwC,UAAUC,IAAI,UACrCZ,KAAKuE,uBAITd,EAAArC,UAAAmD,mBAAA,WACE,IAAMC,EAAgBxE,KAAK+D,eAAepC,wBACpC8C,EAAOzE,KAAK0D,QAAQ1D,KAAKsE,aAAanG,GAAGwD,wBAC/ChD,EAAUqB,KAAK8D,YAAa,CAC1BvD,MAAOkE,EAAKlE,MAAQ,KAIpBsB,KAAM4C,EAAK5C,KAAO2C,EAAc3C,KAAO,EAAI,QAQ/C4B,EAAArC,UAAAmC,YAAA,WACEvD,KAAKsD,UAAW,EAChBtD,KAAKxB,QAAQmC,UAAUC,IAAI,aAG7B6C,EAAArC,UAAAoC,WAAA,WACExD,KAAKsD,UAAW,EAChBtD,KAAKxB,QAAQmC,UAAUlC,OAAO,aAEjCgF,KC5DDiB,EAAA,WASE,SAAAA,EAAY9E,GAAZ,IAYCmB,EAAAf,KAXCA,KAAK2E,MAAQ/E,EAAQ+E,MACrB3E,KAAKc,cAAgBlB,EAAQkB,cACzBlB,EAAQkB,cACR1C,SAASwG,qBAAqB,QAAQ,GAC1C5E,KAAKxB,QAAUT,EAAmB,MAAO,iBAAkBiC,KAAKc,eAChEd,KAAK6E,YAAc9G,EAAmB,MAAO,sBAAuBiC,KAAKxB,SACzEwB,KAAKgC,WAAajE,EAAmB,MAAO,qBAAsBiC,KAAKxB,SACvEwB,KAAK8E,iBACL9E,KAAKgC,WAAW1D,YAAYsB,EAAQmF,gBACpC/E,KAAKc,cAAcH,UAAUC,IAAI,mBACjCZ,KAAK6E,YAAY5D,iBAAiB,SAAS,WAAM,OAAAF,EAAKiE,WAsB1D,OAnBEN,EAAAtD,UAAA0D,eAAA,WAAA,IAWC/D,EAAAf,KAVCA,KAAKiF,gBAAkBlH,EAAmB,MAAO,qBAAsBiC,KAAKgC,YAC5DjE,EAAmB,MAAO,2BAA4BiC,KAAKiF,iBACnEC,UAAYlF,KAAK2E,MACzB3E,KAAKmF,gBAAkBpH,EACrB,MACA,yBACAiC,KAAKiF,iBAEP,IAAIvF,EAAKM,KAAKmF,gBAAiB,CAAEpF,KAAM,KAAMK,KAAM,KACnDJ,KAAKmF,gBAAgBlE,iBAAiB,SAAS,WAAM,OAAAF,EAAKiE,YAGrDN,EAAAtD,UAAA4D,MAAP,WAAA,IAKCjE,EAAAf,KAJCA,KAAKmF,gBAAgBvC,oBAAoB,SAAS,WAAM,OAAA7B,EAAKiE,WAC7DhF,KAAK6E,YAAYjC,oBAAoB,SAAS,WAAM,OAAA7B,EAAKiE,WACzDzG,EAAcyB,KAAKxB,SACnBwB,KAAKc,cAAcH,UAAUlC,OAAO,oBAEvCiG,KC1CDU,EAAA,WAWE,SAAYA,EAAAC,EAA+BC,GACzCtF,KAAKqF,cAAgBA,EACrBrF,KAAKuF,OAAS,KACdvF,KAAKsF,iBAAmBA,EACxBtF,KAAKwF,YACLxF,KAAKyF,gBAyET,OAtEEL,EAAAhE,UAAAoE,UAAA,WACMxF,KAAKsF,kBACPtF,KAAK2E,MAAQ3E,KAAKsF,iBAAiBI,WAAWf,MAC9C3E,KAAK2F,QAAS,IAEd3F,KAAK2E,MAAQ,GACb3E,KAAK2F,QAAS,GAEZ3F,KAAK4F,UAAS5F,KAAK4F,QAAQC,MAAQ7F,KAAK2E,QAG9CS,EAAAhE,UAAAqE,cAAA,WAAA,IAgDC1E,EAAAf,KA/CCA,KAAK+E,eAAiBhH,EAAmB,MAAO,mCAChDiC,KAAK4F,QAAU7H,EAAmB,QAAS,gBAAiBiC,KAAK+E,gBACjE/E,KAAK4F,QAAQlF,aAAa,cAAeV,KAAKqF,cAAczF,QAAQkG,OAAOC,iBAC3E,IAAMC,EAAejI,EACnB,MACA,+CACAiC,KAAK+E,gBAEP/E,KAAKiG,UAAY,IAAIlD,EAAOiD,EAAc,CACxCvE,MAAOzB,KAAKqF,cAAczF,QAAQkG,OAAOI,OACzClD,KAAM,UACN/E,UAAW,QACXgF,QAAS,WACPlC,EAAKwE,OAAOP,WAGhBhF,KAAKmG,WAAa,IAAIpD,EAAOiD,EAAc,CACzCvE,MAAOzB,KAAKqF,cAAczF,QAAQkG,OAAOM,QACzCpD,KAAM,UACNC,QAAS,WACP,GAAIlC,EAAK6E,QAAQC,MACf,GAAI9E,EAAK4D,QAAU5D,EAAK6E,QAAQC,MAC9B,GAAI9E,EAAK4E,OACP5E,EAAKuE,iBAAiBI,WAAWf,MAAQ5D,EAAK6E,QAAQC,MACtD9E,EAAKwE,OAAOP,QACZjE,EAAKsE,cAAcgB,UACoC,mBAA5CtF,EAAKsE,cAAczF,QAAQ0G,cACpCvF,EAAKsE,cAAczF,QAAQ0G,aAAavF,EAAKuE,iBAAiBI,gBAE3D,CACL,IAAMa,EAAyB,CAC7BC,GAAI,qBAAczF,EAAKsE,cAAczF,QAAQ6G,cAC7C9B,MAAO5D,EAAK6E,QAAQC,OAEtB9E,EAAKsE,cAAczF,QAAQ8G,QAAQvC,KAAKoC,GACxCxF,EAAKwE,OAAOP,QACZjE,EAAKsE,cAAcgB,UACmC,mBAA3CtF,EAAKsE,cAAczF,QAAQ+G,aACpC5F,EAAKsE,cAAczF,QAAQ+G,YAAYJ,QAI3CxF,EAAKwE,OAAOP,YAOfI,EAAAhE,UAAAwF,KAAP,WACE5G,KAAKwF,YACLxF,KAAKuF,OAAS,IAAIb,EAAO,CACvBC,MAAO3E,KAAK2F,OACR3F,KAAKqF,cAAczF,QAAQkG,OAAOe,WAClC7G,KAAKqF,cAAczF,QAAQkG,OAAOgB,UACtC/B,eAAgB/E,KAAK+E,kBAG1BK,KC7FD2B,EAAA,WAKE,SAAYA,EAAAC,EAAuB3B,GACjCrF,KAAKgH,SAAWA,EAChBhH,KAAKqF,cAAgBA,EACrBrF,KAAKiH,iBAAmB,OACxBjH,KAAKgH,SAAS9B,UAAY,GA6B9B,OA1BE6B,EAAO3F,UAAA8F,QAAP,SAAQC,GAEN,OADAnH,KAAKiH,iBAAmBE,EAChBnH,KAAKiH,kBACX,IAAK,OAkBL,QACEjH,KAAKgH,SAAS9B,UAAY,GAC1B,MAjBF,IAAK,WACHlF,KAAKgH,SAAS9B,UAAYlF,KAAKqF,cAAczF,QAAQkG,OAAOsB,cAC5D,MACF,IAAK,YACHpH,KAAKgH,SAAS9B,UAAYlF,KAAKqF,cAAczF,QAAQkG,OAAOuB,eAC5D,MACF,IAAK,cACHrH,KAAKgH,SAAS9B,UAAYlF,KAAKqF,cAAczF,QAAQkG,OAAOwB,iBAC5D,MACF,IAAK,WACHtH,KAAKgH,SAAS9B,UAAYlF,KAAKqF,cAAczF,QAAQkG,OAAOyB,cAC5D,MACF,IAAK,aACHvH,KAAKgH,SAAS9B,UAAYlF,KAAKqF,cAAczF,QAAQkG,OAAO0B,kBAOnET,KC7BDU,EAAA,WAUE,SAAYA,EAAA9H,EAA4B0F,GAAxC,IA6CCtE,EAAAf,KA5CCA,KAAKqF,cAAgBA,EACrBrF,KAAKxB,QAAUT,EAAmB,MAAO,kBAAmB4B,GAC5DK,KAAK0H,YAAc,IAAIjE,EAAQzD,KAAKxB,QAAS,CAC3CmF,MAAO,CACL,CAAElC,MAAOzB,KAAKqF,cAAczF,QAAQkG,OAAO6B,SAAUnB,GAAI,QACzD,CAAE/E,MAAOzB,KAAKqF,cAAczF,QAAQkG,OAAO8B,YAAapB,GAAI,YAE9D3C,SAAU,SAACI,GACToB,EAAcwC,WAAW5D,EAAKuC,IAC9BzF,EAAK+G,qBAGT9H,KAAK+H,OAAShK,EAAmB,MAAO,uBAAwBiC,KAAKxB,SACrEwB,KAAKgI,QAAU,IAAIjB,EAAY/G,KAAK+H,OAAQ/H,KAAKqF,eAKjD,IAAM4C,EAAYlK,EAAmB,MAAO,wBAAyBiC,KAAKxB,SAC1EwB,KAAKkI,aAAe,IAAInF,EAAOkF,EAAW,CACxC/E,KAAM,OACNzB,MAAOzB,KAAKqF,cAAczF,QAAQkG,OAAOgB,UACzC9D,KAAM,UACNC,QAAS,WAAM,OAAAlC,EAAK+F,eAGtB9G,KAAKmI,aAAepK,EAAmB,MAAO,8BAA+BiC,KAAKxB,SAgBlFwB,KAAK8H,kBACL9H,KAAKoI,aAAe,IAAIhD,EAAiBpF,KAAKqF,eA0ClD,OAvCEoC,EAAArG,UAAA0F,UAAA,WACsD,mBAAzC9G,KAAKqF,cAAczF,QAAQkH,UACpC9G,KAAKqF,cAAczF,QAAQkH,YAEvB9G,KAAKqF,cAAcgD,eAErBrI,KAAKoI,aAAaxB,QAElB5G,KAAKqF,cAAcgB,QACjBiC,OAAOC,OAAO,GAAIvI,KAAKqF,cAAczF,QAAS,CAC5C8G,QAAS,KACTD,aAAczG,KAAKqF,cAAczF,QAAQ6G,aAAe,KAGN,mBAA3CzG,KAAKqF,cAAczF,QAAQ+G,aACpC3G,KAAKqF,cAAczF,QAAQ+G,gBAMnCc,EAAArG,UAAAoH,QAAA,WACExI,KAAKmI,aAAaxH,UAAUlC,OAAO,WAGrCgJ,EAAArG,UAAAqH,OAAA,WACEzI,KAAKmI,aAAaxH,UAAUC,IAAI,WAGlC6G,EAAArG,UAAA0G,gBAAA,WAEI9H,KAAKqF,cAAczF,QAAQ6G,cAAgBzG,KAAKqF,cAAczF,QAAQ8I,YAC1C,YAA5B1I,KAAKqF,cAAcsD,KAEnB3I,KAAKkI,aAAa1J,QAAQmC,UAAUC,IAAI,UAExCZ,KAAKkI,aAAa1J,QAAQmC,UAAUlC,OAAO,WAGhDgJ,KCtGDmB,EAAA,WAWE,SAAYA,EAAA9H,EAA4BlB,GAAxC,IAMCmB,EAAAf,KALCA,KAAKc,cAAgBA,EACrBd,KAAKJ,QAAUA,EACfI,KAAKgB,UAAW,EAChBhB,KAAKc,cAAcG,iBAAiB,cAAc,WAAM,OAAAF,EAAKG,gBAC7DlB,KAAKc,cAAcG,iBAAiB,cAAc,WAAM,OAAAF,EAAKI,gBAyEjE,OAtESyH,EAAAxH,UAAAC,OAAP,WAAA,IAiDCN,EAAAf,KAhDOsB,EAAwCtB,KAAKJ,QAA3C2B,EAAiBD,EAAAE,UAAjBA,OAAS,IAAAD,EAAG,MAAKA,EAAEwD,mBAErBrD,EAAa1B,KAAKc,cAAca,wBACtC3B,KAAKxB,QAAUT,EAAmB,MAAO,gBAAiBK,SAASwD,MACnEjD,EAAUqB,KAAKxB,QAAS,CACtBqD,KAAMH,EAAWG,KAAO,GAAMH,EAAWnB,MAAQ,KACjDuB,IAAKJ,EAAWI,IAAM,GAAMJ,EAAWlB,OAAS,OAGlDR,KAAK+B,YAAchE,EAAmB,MAAO,sBAAsBgB,OAAAyC,GAAaxB,KAAKxB,SACrFwB,KAAKgC,WAAajE,EAAmB,MAAO,oBAAqBiC,KAAK+B,aACtE/B,KAAKiC,aAAelE,EAAmB,MAAO,sBAAuBiC,KAAK+B,aACtEgD,GAAgB/E,KAAKgC,WAAW1D,YAAYyG,GAEhD,IAAM7C,EAAWlC,KAAK+B,YAAYJ,wBAC5BQ,EAAYnC,KAAKiC,aAAaN,wBAC9BS,EAA6C,GAC7CC,EAA8C,GACpD,OAAQb,GACN,IAAK,MACHY,EAAaP,MAAQ,GAAMK,EAAS3B,MAAQ,KAC5C6B,EAAaE,OAAS,GAAMZ,EAAWlB,OAAS,KAChD6B,EAAcR,KAAO,IAAOK,EAAS3B,MAAQ4B,EAAU5B,OAAS,KAChE,MACF,IAAK,QACH6B,EAAaP,KAAO,GAAMH,EAAWnB,MAAQ,KAC7C6B,EAAaN,KAAO,GAAMI,EAAS1B,OAAS,KAC5C6B,EAAcP,IAAM,IAAOI,EAAS1B,OAAS2B,EAAU3B,QAAU,KACjE,MACF,IAAK,SACH4B,EAAaP,MAAQ,GAAMK,EAAS3B,MAAQ,KAC5C6B,EAAaN,IAAM,GAAMJ,EAAWlB,OAAS,KAC7C6B,EAAcR,KAAO,IAAOK,EAAS3B,MAAQ4B,EAAU5B,OAAS,KAChE,MACF,IAAK,OACH6B,EAAaG,MAAQ,GAAMb,EAAWnB,MAAQ,KAC9C6B,EAAaN,KAAO,GAAMI,EAAS1B,OAAS,KAC5C6B,EAAcP,IAAM,IAAOI,EAAS1B,OAAS2B,EAAU3B,QAAU,KAKrE7B,EAAUqB,KAAK+B,YAAaK,GAC5BzD,EAAUqB,KAAKiC,aAAcI,GAE7BrC,KAAK+B,YAAYd,iBAAiB,cAAc,WAAM,OAAAF,EAAKG,gBAC3DlB,KAAK+B,YAAYd,iBAAiB,cAAc,WAAM,OAAAF,EAAKI,gBAC3DnB,KAAKgB,UAAW,GAGX4H,EAAAxH,UAAAuB,QAAP,WAAA,IAKC5B,EAAAf,KAJCA,KAAKgB,UAAW,EAChBhB,KAAK+B,YAAYa,oBAAoB,cAAc,WAAM,OAAA7B,EAAKG,gBAC9DlB,KAAK+B,YAAYa,oBAAoB,cAAc,WAAM,OAAA7B,EAAKI,gBAC9D5C,EAAcyB,KAAKxB,UAGdoK,EAAAxH,UAAAF,WAAP,WACOlB,KAAKgB,UAAUhB,KAAKqB,SACrBrB,KAAK6I,WACPpG,OAAOC,aAAa1C,KAAK6I,YAItBD,EAAAxH,UAAAD,WAAP,WAAA,IAICJ,EAAAf,KAHCA,KAAK6I,UAAYpG,OAAOI,YAAW,WACjC9B,EAAK4B,YACJ,MAENiG,KCxFDE,EAAA,WAWE,SAAYA,EAAAzD,EAA+B0D,GACzC/I,KAAKqF,cAAgBA,EACrBrF,KAAK+I,WAAaA,EAClB/I,KAAKuF,OAAS,KACVwD,EAAWC,UACbhJ,KAAK2E,MAAQoE,EAAWC,SAASrE,MACjC3E,KAAK2F,QAAS,IAEd3F,KAAK2E,MAAQ,GACb3E,KAAK2F,QAAS,GAEhB3F,KAAKyF,gBA6ET,OA1EEqD,EAAA1H,UAAAoE,UAAA,WACMxF,KAAK+I,WAAWC,UAClBhJ,KAAK2E,MAAQ3E,KAAK+I,WAAWC,SAASrE,MACtC3E,KAAK2F,QAAS,IAEd3F,KAAK2E,MAAQ,GACb3E,KAAK2F,QAAS,GAEZ3F,KAAKiJ,gBAAejJ,KAAKiJ,cAAcpD,MAAQ7F,KAAK2E,QAG1DmE,EAAA1H,UAAAqE,cAAA,WAAA,IAoDC1E,EAAAf,KAnDCA,KAAK+E,eAAiBhH,EAAmB,MAAO,mCAChDiC,KAAKiJ,cAAgBlL,EAAmB,QAAS,gBAAiBiC,KAAK+E,gBACvE/E,KAAKiJ,cAAcvI,aAAa,cAAeV,KAAKqF,cAAczF,QAAQkG,OAAOoD,eACjF,IAAMlD,EAAejI,EACnB,MACA,+CACAiC,KAAK+E,gBAEP/E,KAAKiG,UAAY,IAAIlD,EAAOiD,EAAc,CACxCvE,MAAOzB,KAAKqF,cAAczF,QAAQkG,OAAOI,OACzClD,KAAM,UACN/E,UAAW,QACXgF,QAAS,WACPlC,EAAKwE,OAAOP,WAGhBhF,KAAKmG,WAAa,IAAIpD,EAAOiD,EAAc,CACzCvE,MAAOzB,KAAKqF,cAAczF,QAAQkG,OAAOM,QACzCpD,KAAM,UACNC,QAAS,WACP,GAAIlC,EAAKkI,cAAcpD,MACrB,GAAI9E,EAAK4D,QAAU5D,EAAKkI,cAAcpD,MACpC,GAAI9E,EAAK4E,OACP5E,EAAKgI,WAAWC,SAASrE,MAAQ5D,EAAKkI,cAAcpD,MACpD9E,EAAKwE,OAAOP,QACZjE,EAAKsE,cAAcgB,UACkC,mBAA1CtF,EAAKsE,cAAczF,QAAQuJ,YACpCpI,EAAKsE,cAAczF,QAAQuJ,WAAWpI,EAAKgI,WAAWC,cAEnD,CACL,IAAMA,EAAwB,CAC5BxC,GAAI,QAAAzH,OAAQgC,EAAKgI,WAAWK,IAAG,KAAArK,OAAIgC,EAAKgI,WAAWM,QACnDD,IAAKrI,EAAKgI,WAAWK,IACrBC,OAAQtI,EAAKgI,WAAWM,OACxBC,QAAS,EACTC,QAAS,EACT5E,MAAO5D,EAAKkI,cAAcpD,OAE5B9E,EAAKsE,cAAczF,QAAQ4J,MAAMrF,KAAK6E,GACtCjI,EAAKwE,OAAOP,QACZjE,EAAKsE,cAAcgB,UACiC,mBAAzCtF,EAAKsE,cAAczF,QAAQ6J,WACpC1I,EAAKsE,cAAczF,QAAQ6J,UAAUT,QAIzCjI,EAAKwE,OAAOP,YAOf8D,EAAA1H,UAAAwF,KAAP,WACE5G,KAAKwF,YACLxF,KAAKuF,OAAS,IAAIb,EAAO,CACvBC,MAAO3E,KAAK2F,OACR3F,KAAKqF,cAAczF,QAAQkG,OAAO4D,SAClC1J,KAAKqF,cAAczF,QAAQkG,OAAO6D,QACtC5E,eAAgB/E,KAAK+E,kBAG1B+D,KC/FDc,EAAA,WAiBE,SACEA,EAAAjK,EACAkK,EACAT,EACAC,EACAhE,GAEArF,KAAKqF,cAAgBA,EACrBrF,KAAKoJ,IAAMA,EACXpJ,KAAKqJ,OAASA,EACdrJ,KAAKxB,QAAUwB,KAAK8J,gBAAgBD,EAAMT,EAAKC,EAAQrJ,KAAKqF,eAC5D1F,EAAcrB,YAAY0B,KAAKxB,SAkPnC,OA/OEoL,EAAexI,UAAA0I,gBAAf,SACED,EACAT,EACAC,EACAhE,GAEA,IAAMlH,EAAKJ,EAAmB,MAAO,gBAErC,GADAI,EAAGuC,aAAa,KAAM,GAAG3B,OAAAsG,EAAcmB,oBAAW4C,EAAG,KAAArK,OAAIsK,IACrDQ,EAAM,CACR,IAAME,EAAOhM,EAAmB,MAAO,gBACnC8L,EAAK7G,MAAM+G,EAAKpJ,UAAUC,IAAIiJ,EAAK7G,MACnC6G,EAAKG,OAAqC,SAA5BhK,KAAKqF,cAAcsD,MAAiBoB,EAAKpJ,UAAUC,IAAI,SACpB,mBAA1CZ,KAAKqF,cAAczF,QAAQqK,WACpCF,EAAKzL,YAAY0B,KAAKqF,cAAczF,QAAQqK,WAAWJ,IAEvDE,EAAK7E,UAAY2E,EAAKlF,MAIxBxG,EAAGG,YAAYyL,GACf/J,KAAKkK,SAAU,EACflK,KAAKmK,OAASJ,EACd/J,KAAKgJ,SAAWa,EAChB7J,KAAKsJ,QAAUO,EAAKP,QACpBtJ,KAAKuJ,QAAUM,EAAKN,aAEpBvJ,KAAKsJ,QAAU,EACftJ,KAAKuJ,QAAU,EACfvJ,KAAKkK,SAAU,EAIjB,OADA/L,EAAGa,MAAMoL,UAAY,GAAKpK,KAAKsJ,QAAU,KAClCnL,GAITyL,EAAAxI,UAAAiJ,gBAAA,WAAA,IA0ICtJ,EAAAf,KAzICA,KAAKsK,aAAevM,EAClB,MACA,oCACAiC,KAAKxB,SAOPwB,KAAKuK,WAAa,IAAIzB,EAAe9I,KAAKqF,cAAerF,MACrDA,KAAKgJ,UACP,IAAIjG,EAAO/C,KAAKsK,aAAc,CAC5BpH,KAAM,OACNF,KAAM,UACNG,QAASnD,KAAKqF,cAAczF,QAAQkG,OAAO0E,SAC3CvM,UAAW,2CACXgF,QAAS,WACPlC,EAAKsE,cAAcoF,gBAAgBC,YAAY3J,MAGnD,IAAIgC,EAAO/C,KAAKsK,aAAc,CAC5BpH,KAAM,OACNF,KAAM,UACNG,QAASnD,KAAKqF,cAAczF,QAAQkG,OAAO4D,SAC3CzL,UAAW,8CACXgF,QAAS,WAC4C,mBAAxClC,EAAKsE,cAAczF,QAAQ8J,SACpC3I,EAAKsE,cAAczF,QAAQ8J,SAAS3I,EAAKiI,UAEzCjI,EAAKwJ,WAAW3D,UAItB,IAAI7D,EAAO/C,KAAKsK,aAAc,CAC5BpH,KAAM,SACNF,KAAM,SACNG,QAASnD,KAAKqF,cAAczF,QAAQkG,OAAO6E,WAC3C1M,UAAW,4CACXgF,QAAS,WAEgD,mBAA5ClC,EAAKsE,cAAczF,QAAQgL,cACpC7J,EAAKsE,cAAczF,QAAQgL,aAAa7J,EAAKiI,aAInD,IAAIjG,EAAO/C,KAAKsK,aAAc,CAC5BpH,KAAM,SACNF,KAAM,UACNG,QAASnD,KAAKqF,cAAczF,QAAQkG,OAAO+E,eAC3C5M,UAAW,+CACXgF,QAAS,WACPlC,EAAKsE,cAAcoF,gBAAgBK,cAAc/J,QAIrD,IAAIgC,EAAO/C,KAAKsK,aAAc,CAC5BpH,KAAM,OACNF,KAAM,UACN/E,UAAW,2CACXkF,QAASnD,KAAKqF,cAAczF,QAAQkG,OAAO6D,QAC3C1G,QAAS,WAC2C,mBAAvClC,EAAKsE,cAAczF,QAAQ+J,QACpC5I,EAAKsE,cAAczF,QAAQ+J,QAAQ5I,EAAKqI,IAAKrI,EAAKsI,QAElDtI,EAAKwJ,WAAW3D,UAKpB5G,KAAKqF,cAAczF,QAAQmL,UAAY,GACvC/K,KAAKoJ,MAAQpJ,KAAKqF,cAAczF,QAAQmL,UAAY,IAEpD/K,KAAKgL,aAAe,IAAIjI,EAAO/C,KAAKsK,aAAc,CAChDpH,KAAM,aACNF,KAAM,SACN/E,UAAW,4CACXkF,QAASnD,KAAKqF,cAAczF,QAAQkG,OAAOmF,UAC3ChI,QAAS,WAC6C,mBAAzClC,EAAKsE,cAAczF,QAAQqL,UACpClK,EAAKsE,cAAczF,QAAQqL,aAE3BlK,EAAKsE,cAAcgB,QACjBiC,OAAOC,OAAO,GAAIxH,EAAKsE,cAAczF,QAAS,CAC5CmL,UAAWhK,EAAKsE,cAAczF,QAAQmL,UAAY,KAGA,mBAA3ChK,EAAKsE,cAAczF,QAAQsL,aACpCnK,EAAKsE,cAAczF,QAAQsL,mBAOnClL,KAAKqF,cAAczF,QAAQ6G,aAAe,GAC1CzG,KAAKqJ,SAAWrJ,KAAKqF,cAAczF,QAAQ6G,aAAe,IAE1DzG,KAAKmL,aAAe,IAAIpI,EAAO/C,KAAKsK,aAAc,CAChDpH,KAAM,aACNF,KAAM,SACN/E,UAAW,+CACXkF,QAASnD,KAAKqF,cAAczF,QAAQkG,OAAOsF,aAC3CnI,QAAS,WACP,GAAuD,mBAA5ClC,EAAKsE,cAAczF,QAAQwL,aAEpCrK,EAAKsE,cAAczF,QAAQwL,oBAG3B,GAAIrK,EAAKsE,cAAcgD,eAAgB,CAErC,GAAyD,mBAA9CtH,EAAKsE,cAAczF,QAAQyL,eAA+B,CACnE,IAAMC,EACJvK,EAAKsE,cAAczF,QAAQ8G,QAAQ3F,EAAKsE,cAAczF,QAAQ6G,aAAe,GAC/E1F,EAAKsE,cAAczF,QAAQyL,eAAeC,GAE5CvK,EAAKsE,cAAczF,QAAQ8G,QAAQ6E,MACnCxK,EAAKsE,cAAcgB,QAAQiC,OAAOC,OAAO,GAAIxH,EAAKsE,cAAczF,eAGhEmB,EAAKsE,cAAcgB,QACjBiC,OAAOC,OAAO,GAAIxH,EAAKsE,cAAczF,QAAS,CAC5C8G,QAAS,KACTD,aAAc1F,EAAKsE,cAAczF,QAAQ6G,aAAe,KAGH,mBAA9C1F,EAAKsE,cAAczF,QAAQyL,gBACpCtK,EAAKsE,cAAczF,QAAQyL,sBAQzCrL,KAAKxB,QAAQyC,iBAAiB,cAAc,WAAM,OAAAF,EAAKyK,kBACvDxL,KAAKxB,QAAQyC,iBAAiB,cAAc,WAAM,OAAAF,EAAK0K,mBAGlD7B,EAAAxI,UAAAsK,oBAAP,WAAA,IAkBC3K,EAAAf,KAjBC,GAAIA,KAAKgJ,WACPhJ,KAAKxB,QAAQyC,iBAAiB,SAAS,WAAM,OAAAF,EAAK4K,iBAC9C3L,KAAKgJ,SAAS4C,WAAW,CAC3B,IAAIC,SAC2D,mBAApD7L,KAAKqF,cAAczF,QAAQkM,qBACpCD,EAAY7L,KAAKqF,cAAczF,QAAQkM,qBAAqB9L,KAAKgJ,WAEjE6C,EAAY9N,EAAmB,MAAO,oCAC5BkC,UAAYD,KAAKgJ,SAASrE,MAGtC3E,KAAK+L,MAAQ,IAAInD,EAAM5I,KAAKmK,OAAQ,CAClC3I,UAAW,MACXuD,eAAgB8G,MAMxBjC,EAAAxI,UAAAoK,aAAA,WACExL,KAAKsK,aAAa3J,UAAUlC,OAAO,UAC/BuB,KAAKgL,eAELhL,KAAKqF,cAAcoF,gBAAgBuB,cACnChM,KAAKqF,cAAc4G,eAAeD,aAElChM,KAAKgL,aAAaxM,QAAQmC,UAAUlC,OAAO,UAE3CuB,KAAKgL,aAAaxM,QAAQmC,UAAUC,IAAI,WAGxCZ,KAAKmL,eAELnL,KAAKqF,cAAcoF,gBAAgByB,iBACnClM,KAAKqF,cAAc4G,eAAeC,gBAElClM,KAAKmL,aAAa3M,QAAQmC,UAAUlC,OAAO,UAE3CuB,KAAKmL,aAAa3M,QAAQmC,UAAUC,IAAI,YAK9CgJ,EAAAxI,UAAAqK,aAAA,WACEzL,KAAKsK,aAAa3J,UAAUC,IAAI,WAGlCgJ,EAAAxI,UAAAuK,YAAA,WACwD,mBAA3C3L,KAAKqF,cAAczF,QAAQ+L,aACpC3L,KAAKqF,cAAczF,QAAQ+L,YAAY3L,KAAKgJ,SAAUhJ,KAAKmK,SAIxDP,EAAWxI,UAAA+K,YAAlB,SAAmBC,GACbA,IAAapM,KAAKoM,UACpBpM,KAAKoM,UAAW,EAChBpM,KAAKxB,QAAQQ,MAAMqN,QAAU,QACnBD,GAAYpM,KAAKoM,WAC3BpM,KAAKoM,UAAW,EAChBpM,KAAKxB,QAAQQ,MAAMqN,QAAU,MAGlCzC,KC9QD0C,EAAA,WAaE,SAAAA,EACE3M,EACA+F,EACA6G,EACAlH,GAEArF,KAAKqF,cAAgBA,EACrBrF,KAAKuM,YAAcA,EACnBvM,KAAK0F,WAAaA,EAClB1F,KAAKwM,OAASxM,KAAKuM,cAAgBvM,KAAKqF,cAAczF,QAAQ6G,aAAe,EAC7EzG,KAAKxB,QAAUwB,KAAK3B,cAAcsB,GA4FtC,OAzFE2M,EAAalL,UAAA/C,cAAb,SAAcsB,GACZ,IAAMxB,EAAKJ,EAAmB,KAAM,aAAc4B,GAMlD,GALIK,KAAK0F,WAAWf,MAClBxG,EAAG8B,UAAYD,KAAK0F,WAAWf,MAE/BxG,EAAGwC,UAAUC,IAAI,SAEfZ,KAAK0F,WAAWnF,MAAO,CAEzB,IAAIA,EAAQP,KAAK0F,WAAWnF,MAC5B,OAAQP,KAAK0F,WAAWnF,OACtB,IAAK,QACHA,EAAQ,MACR,MACF,IAAK,KACHA,EAAQ,MACR,MACF,IAAK,KACHA,EAAQ,MACR,MACF,IAAK,KACHA,EAAQ,MACR,MACF,QACEA,EAAQP,KAAK0F,WAAWnF,MAG5BpC,EAAGuC,aAAa,QAASH,QAEzBpC,EAAGuC,aAAa,QAAS,QAG3B,OADAvC,EAAGuC,aAAa,KAAM,UAAGV,KAAKqF,cAAcmB,GAAU,SAAAzH,OAAAiB,KAAKuM,cACpDpO,GAIFmO,EAAAlL,UAAAiJ,gBAAP,WAAA,IA4CCtJ,EAAAf,KA3CCA,KAAKsK,aAAevM,EAClB,MACA,oCACAiC,KAAKxB,SAEPwB,KAAKyM,cAAgB,IAAIrH,EAAiBpF,KAAKqF,cAAerF,MAC9D,IAAI+C,EAAO/C,KAAKsK,aAAc,CAC5BpH,KAAM,OACNF,KAAM,UACN/E,UAAW,2CACXkF,QAASnD,KAAKqF,cAAczF,QAAQkG,OAAOe,WAC3C5D,QAAS,WAC8C,mBAA1ClC,EAAKsE,cAAczF,QAAQiH,WACpC9F,EAAKsE,cAAczF,QAAQiH,WAAW9F,EAAK2E,YAE3C3E,EAAK0L,cAAc7F,UAIrB5G,KAAKwM,QAAUxM,KAAKqF,cAAcoF,gBAAgByB,iBACpD,IAAInJ,EAAO/C,KAAKsK,aAAc,CAC5BpH,KAAM,aACNF,KAAM,SACN/E,UAAW,4CACXkF,QAASnD,KAAKqF,cAAczF,QAAQkG,OAAOsF,aAC3CnI,QAAS,WACP,GAAuD,mBAA5ClC,EAAKsE,cAAczF,QAAQwL,aAEpCrK,EAAKsE,cAAczF,QAAQwL,mBACtB,CACL,GAAyD,mBAA9CrK,EAAKsE,cAAczF,QAAQyL,eAA+B,CACnE,IAAMC,EACJvK,EAAKsE,cAAczF,QAAQ8G,QAAQ3F,EAAKsE,cAAczF,QAAQ6G,aAAe,GAC/E1F,EAAKsE,cAAczF,QAAQyL,eAAeC,GAE5CvK,EAAKsE,cAAczF,QAAQ8G,QAAQ6E,MACnCxK,EAAKsE,cAAcgB,QAAQiC,OAAOC,OAAO,GAAIxH,EAAKsE,cAAczF,cAKxEI,KAAKxB,QAAQyC,iBAAiB,cAAc,WAAM,OAAAF,EAAKyK,kBACvDxL,KAAKxB,QAAQyC,iBAAiB,cAAc,WAAM,OAAAF,EAAK0K,mBAGzDa,EAAAlL,UAAAoK,aAAA,WACExL,KAAKsK,aAAa3J,UAAUlC,OAAO,WAGrC6N,EAAAlL,UAAAqK,aAAA,WACEzL,KAAKsK,aAAa3J,UAAUC,IAAI,WAEnC0L,KCtHDI,EAAA,WAKE,SAAAA,EAAYC,EAAuB5D,EAAuB1D,GAA1D,IAeCtE,EAAAf,KAdCA,KAAKqF,cAAgBA,EACrBrF,KAAKsD,UAAW,EAChBtD,KAAKxB,QAAUT,EAAmB,MAAO,0BAA2B4O,GACrD5O,EAAmB,MAAO,0BAA2BiC,KAAKxB,SAClE0G,UAAY6D,EAAWC,SAASrE,MAOvC3E,KAAKxB,QAAQyC,iBAAiB,SAAS,WAChCF,EAAKuC,UAAUvC,EAAKsE,cAAcoF,gBAAgBmC,sBA4B7D,OAxBEF,EAAiBtL,UAAAyL,kBAAjB,SAAkBC,GAChBnO,EAAUqB,KAAKxB,QAAS,CACtBsD,IAAKgL,EAAShL,IAAM,KACpBD,KAAMiL,EAASjL,KAAO,KACtBtB,MAAOuM,EAASvM,MAAQ,KACxBC,OAAQsM,EAAStM,OAAS,QAI9BkM,EAAAtL,UAAAoH,QAAA,WAEOxI,KAAKsD,WACRtD,KAAKsD,UAAW,EAChBtD,KAAKxB,QAAQmC,UAAUC,IAAI,cAI/B8L,EAAAtL,UAAAqH,OAAA,WAEMzI,KAAKsD,WACPtD,KAAKsD,UAAW,EAChBtD,KAAKxB,QAAQmC,UAAUlC,OAAO,cAGnCiO,KC5CDK,EAAA,WAWE,SAAYA,EAAAC,EAAoC3H,GAC9CrF,KAAKqF,cAAgBA,EACrBrF,KAAKxB,QAAUT,EACb,MACA,iCACAsH,EAAc7G,SAEhBwB,KAAKgN,kBAAoBA,EA0K7B,OAvKUD,EAAQ3L,UAAA6L,SAAhB,SAAiBC,GACflN,KAAK+I,WAAamE,EAClBlN,KAAK+I,WAAWoD,aAAY,GAC5BnM,KAAKmN,0BACLnN,KAAKoN,QAAU,IAAIV,EAAa1M,KAAKxB,QAASwB,KAAK+I,WAAY/I,KAAKqF,eACpErF,KAAKqN,cAAgBrN,KAAKsN,eAC1BtN,KAAKuN,eAAiBvN,KAAKwN,sBAAsBxN,KAAK+I,WAAWK,IAAKpJ,KAAK+I,WAAWM,QACtFrJ,KAAKyN,oBAICV,EAAA3L,UAAA+L,wBAAR,WACEnN,KAAK0N,qBAAuBC,YAAU3N,KAAKqF,cAAcoF,gBAAgBmD,cACzE,IAAK,IAAIC,EAAI7N,KAAK+I,WAAWK,IAAKyE,EAAI7N,KAAK+I,WAAWK,IAAMpJ,KAAK+I,WAAWO,QAASuE,IACnF,IACE,IAAIC,EAAI9N,KAAK+I,WAAWM,OACxByE,EAAI9N,KAAK+I,WAAWM,OAASrJ,KAAK+I,WAAWQ,QAC7CuE,IAEA9N,KAAK0N,qBAAqBG,GAAGC,GAAK,GAMhCf,EAAA3L,UAAAqM,iBAAR,WACMzN,KAAKqF,cAAcoF,gBAAgBsD,aACrC/N,KAAKgO,0BAA4B,CAC/B5E,IACEpJ,KAAKqN,cAAcY,SAAWjO,KAAK+I,WAAWO,QAC9CtJ,KAAKqF,cAAczF,QAAQmL,UACvB/K,KAAKqF,cAAczF,QAAQmL,UAAY/K,KAAK+I,WAAWO,QACvDtJ,KAAKqN,cAAcY,SACzB5E,OACErJ,KAAKqN,cAAcd,YAAcvM,KAAK+I,WAAWQ,QACjDvJ,KAAKqF,cAAczF,QAAQ6G,aACvBzG,KAAKqF,cAAczF,QAAQ6G,aAAezG,KAAK+I,WAAWQ,QAC1DvJ,KAAKqN,cAAcd,YACzBjD,QAAStJ,KAAK+I,WAAWO,QACzBC,QAASvJ,KAAK+I,WAAWQ,SAG3BvJ,KAAKgO,0BAA4B,CAC/B5E,IAAK8E,KAAKC,IAAInO,KAAKuN,eAAeU,SAAUjO,KAAKqN,cAAcY,UAC/D5E,OAAQ6E,KAAKC,IAAInO,KAAKuN,eAAehB,YAAavM,KAAKqN,cAAcd,aACrEjD,QAAS4E,KAAKE,IAAIpO,KAAKuN,eAAeU,SAAWjO,KAAKqN,cAAcY,UAAY,EAChF1E,QAAS2E,KAAKE,IAAIpO,KAAKuN,eAAehB,YAAcvM,KAAKqN,cAAcd,aAAe,GAG1F,IAAM8B,EAAcrO,KAAKwN,sBACvBxN,KAAKgO,0BAA0B5E,IAC/BpJ,KAAKgO,0BAA0B3E,QAE3BiF,EAAkBtO,KAAKwN,sBAC3BxN,KAAKgO,0BAA0B5E,IAAMpJ,KAAKgO,0BAA0B1E,QAAU,EAC9EtJ,KAAKgO,0BAA0B3E,OAASrJ,KAAKgO,0BAA0BzE,QAAU,GAE/E+E,GAAmBD,GACrBrO,KAAKoN,QAAQP,kBAAkB,CAC7BhL,KAAMwM,EAAYxM,KAClBC,IAAKuM,EAAYvM,IACjBvB,MAAO+N,EAAgBzM,KAAOwM,EAAYxM,KAAOyM,EAAgB/N,MAAQ,EACzEC,OAAQ8N,EAAgBxM,IAAMuM,EAAYvM,IAAMwM,EAAgB9N,OAAS,IAM7E,IADA,IAAI+N,GAAS,EAEPV,EAAI7N,KAAKgO,0BAA0B5E,IACvCyE,EACAK,KAAKC,IACHnO,KAAKgO,0BAA0B5E,IAAMpJ,KAAKgO,0BAA0B1E,QACpEtJ,KAAKqF,cAAczF,QAAQmL,WAE7B8C,IAEA,IACE,IAAIC,EAAI9N,KAAKgO,0BAA0B3E,OACvCyE,EACAI,KAAKC,IACHnO,KAAKgO,0BAA0B3E,OAASrJ,KAAKgO,0BAA0BzE,QACvEvJ,KAAKqF,cAAczF,QAAQ6G,cAE7BqH,MAEK9N,KAAK0N,qBAAqBG,IAAM7N,KAAK0N,qBAAqBG,GAAGC,GAAK,KACrES,GAAS,GAIXA,EACFvO,KAAKoN,QAAQ3E,SAEbzI,KAAKoN,QAAQ5E,WAIVuE,EAAS3L,UAAAoN,UAAhB,SAAiBtB,GACflN,KAAKxB,QAAQmC,UAAUlC,OAAO,UAC9BuB,KAAKiN,SAASC,IAGTH,EAAA3L,UAAAqN,SAAP,WACEzO,KAAKxB,QAAQmC,UAAUC,IAAI,UAC3BrC,EAAcyB,KAAKoN,QAAQ5O,SAC3BwB,KAAK+I,WAAWoD,aAAY,GAC5BnM,KAAKoN,QAAU,MAGVL,EAAA3L,UAAAsN,aAAP,WACE1O,KAAKyO,WACL,IAAME,EAAiD,CACrDvF,IAAKpJ,KAAK+I,WAAWK,IACrBC,OAAQrJ,KAAK+I,WAAWM,OACxBC,QAAStJ,KAAK+I,WAAWO,QACzBC,QAASvJ,KAAK+I,WAAWQ,SAEtBqF,EAAAA,QAAQ5O,KAAKgO,0BAA2BW,KAE3C3O,KAAK+I,WAAWC,SAASI,IAAMpJ,KAAKgO,0BAA0B5E,IAC9DpJ,KAAK+I,WAAWC,SAASK,OAASrJ,KAAKgO,0BAA0B3E,OACjErJ,KAAK+I,WAAWC,SAASM,QAAUtJ,KAAKgO,0BAA0B1E,QAClEtJ,KAAK+I,WAAWC,SAASO,QAAUvJ,KAAKgO,0BAA0BzE,QAEb,mBAA1CvJ,KAAKqF,cAAczF,QAAQuJ,YACpCnJ,KAAKqF,cAAczF,QAAQuJ,WAAWnJ,KAAK+I,WAAWC,UAExDhJ,KAAKqF,cAAcgB,YAKf0G,EAAA3L,UAAAkM,aAAR,WACE,IAEIuB,EAFEC,EAAS9O,KAAKqF,cAAc0J,cAAc3P,EAC1C4P,EAAShP,KAAKqF,cAAc0J,cAAcE,EAYhD,OAVAjP,KAAKgN,kBAAkBhJ,SAAQ,SAACkL,GAE5BF,EAASE,EAASpN,KAClBkN,EAASE,EAASpN,IAAMoN,EAAS1O,QACjCsO,EAASI,EAASrN,MAClBiN,EAASI,EAASrN,KAAOqN,EAAS3O,QAElCsO,EAAiBK,MAGdL,GAGD9B,EAAA3L,UAAAoM,sBAAR,SAA8BpE,EAAKC,GAGjC,OAAOrJ,KAAKgN,kBAAkBmC,MAAK,SAACD,GAClC,OAAOA,EAASjB,WAAa7E,GAAO8F,EAAS3C,cAAgBlD,MAI1D0D,EAAA3L,UAAAgO,YAAP,WACE,IAAMC,EAAUrP,KAAKsN,eAChBsB,EAAAA,QAAQS,EAASrP,KAAKqN,gBACrBgC,IACFrP,KAAKqN,cAAgBgC,EACrBrP,KAAKyN,qBAIZV,KC1LDuC,EAAA,WAaE,SAAAA,EAAYjK,GACVrF,KAAKqF,cAAgBA,EACrBrF,KAAKxB,QAAUT,EAAmB,QAAS,gBAAiBiC,KAAKqF,cAAc7G,SAC/EwB,KAAKuP,kBAwQT,OArQUD,EAAAlO,UAAAmO,gBAAR,WACEvP,KAAKwP,YAAc,GACnBxP,KAAKyP,MAAQ,GACbzP,KAAKkM,iBAAkB,EACvBlM,KAAKgM,cAAe,EACpBhM,KAAK4N,aAAe,GACpB5N,KAAK+N,cAAe,EACpB/N,KAAK0P,gBAAiB,GAIjBJ,EAAAlO,UAAAuO,YAAP,WACE3P,KAAKuP,kBACLvP,KAAKxB,QAAQyB,UAAY,GACzBD,KAAK4P,eACL5P,KAAK6P,YACL7P,KAAK8P,cACL9P,KAAK+P,eAGAT,EAAAlO,UAAA2O,YAAP,WAAA,IAmEChP,EAAAf,KAjEC,GAD+C,SAA5BA,KAAKqF,cAAcsD,KACtB,CACd,IAAMqH,EhB/B4B,SACtCpC,EACA7C,EACAtE,GAIA,IAFA,IAAIyF,GAAkB,EAClBF,GAAe,EACV6B,EAAI,EAAGA,EAAI9C,EAAY,EAAG8C,IACS,IAAtCD,EAAaC,GAAGpH,EAAe,KACjCyF,GAAkB,GAGtB,IAAS2B,EAAI,EAAGA,EAAIpH,EAAe,EAAGoH,IACG,IAAnCD,EAAa7C,EAAY,GAAG8C,KAC9B7B,GAAe,GAGnB,MAAO,CAAEA,aAAYA,EAAEE,gBAAeA,GgBcZ+D,CACpBjQ,KAAK4N,aACL5N,KAAKqF,cAAczF,QAAQmL,UAC3B/K,KAAKqF,cAAczF,QAAQ6G,cAE7BzG,KAAKkM,gBAAkB8D,EAAc9D,gBACrClM,KAAKgM,aAAegE,EAAchE,aAElChM,KAAKyP,MAAMzL,SAAQ,SAACkM,GAElBA,EAAK7F,qBAIPxH,YAAW,WACT,IAAMsN,EAA4B,GAC5BC,EAAsB,GAE5BrP,EAAKyO,YAAYxL,SAAQ,SAACqM,GAExBA,EAAWhG,kBAEX8F,EAAYhM,KAAK,CACf5D,MAAO8P,EAAW7R,QAAQmD,wBAAwBpB,MAAQ,EAC1DsB,KAAMwO,EAAW7R,QAAQ8R,WAAa,EACtC/D,YAAa8D,EAAW9D,iBAK5B,IAAK,IAAIsB,EAAI,EAAGA,EAAI9M,EAAKsE,cAAczF,QAAQmL,UAAW8C,IAAK,CAC7D,IAAM9E,EAAahI,EAAKwP,kBAAkB1C,EAAG,GAEvC2C,EADmBzH,EAAWvK,QAAQmD,wBAAwBnB,OACrBuI,EAAWO,QAC1D8G,EAASjM,KAAK,CACZrC,IAAKiH,EAAWvK,QAAQiS,UAAY,GAAK5C,EAAI9E,EAAWK,KAAOoH,EAC/DhQ,OAAQgQ,EAAsB,EAC9BvC,SAAUJ,IAId,IAAMb,EAAqC,GAC3CoD,EAASpM,SAAQ,SAAC0M,GAChBP,EAAYnM,SAAQ,SAAC2M,GACnB3D,EAAkB7I,KAAKmE,OAAOC,OAAO,GAAImI,EAASC,UAGtD5P,EAAK6P,UAAY,IAAI7D,EAAUC,EAAmBjM,EAAKsE,iBACtD,QAGHrF,KAAKyP,MAAMzL,SAAQ,SAACkM,GAElBA,EAAKxE,yBAGT1L,KAAK6Q,oBAWPvB,EAAAlO,UAAAmP,kBAAA,SAAkBnH,EAAa0H,QAAA,IAAAA,IAAAA,EAAc,GAC3C,IAAIC,EAAkC,KAChCC,EAAWhR,KAAKyP,MAAMwB,QAAO,SAACf,GAAS,OAAAA,EAAK9G,MAAQA,KAC1D,GAAwB,IAApB4H,EAASE,OACP9H,EAAM,IACR2H,EAAgB/Q,KAAKuQ,kBAAkBnH,EAAM,EAAG0H,EAAa,QAE1D,CACL,IAAIK,EAAU,GACdH,EAAShN,SAAQ,SAACkM,GACZA,EAAK5G,QAAU6H,GAAWjB,EAAK5G,SAAWwH,IAC5CK,EAAUjB,EAAK5G,QACfyH,EAAgBb,MAItB,OAAOa,GAGFzB,EAAAlO,UAAAgO,YAAP,YACMpP,KAAK+N,cAAgB/N,KAAK0P,iBAC5B1P,KAAK4Q,UAAUxB,eAIZE,EAAWlO,UAAAsJ,YAAlB,SAAmB3B,GACjB/I,KAAK+N,cAAe,EACpB/N,KAAKqF,cAAc+L,QAAQpJ,QAAQd,QAAQ,YAC3ClH,KAAKqF,cAAc+L,QAAQ5I,UAC3BxI,KAAK4Q,UAAUpC,UAAUzF,IAGpBuG,EAAAlO,UAAAiQ,WAAP,WACErR,KAAK+N,cAAe,EACpB/N,KAAKqF,cAAc+L,QAAQpJ,QAAQd,QAAQ,QAC3ClH,KAAKqF,cAAc+L,QAAQ3I,SAC3BzI,KAAK4Q,UAAUnC,YAGVa,EAAalO,UAAA0J,cAApB,SAAqB/B,GACnB/I,KAAK0P,gBAAiB,EACtB1P,KAAKqF,cAAc+L,QAAQpJ,QAAQd,QAAQ,cAC3ClH,KAAKqF,cAAc+L,QAAQ5I,UAC3BxI,KAAK4Q,UAAUpC,UAAUzF,IAGpBuG,EAAAlO,UAAAkQ,aAAP,WACEtR,KAAK0P,gBAAiB,EACtB1P,KAAKqF,cAAc+L,QAAQpJ,QAAQd,QAAQ,QAC3ClH,KAAKqF,cAAc+L,QAAQ3I,SAC3BzI,KAAK4Q,UAAUnC,YAIVa,EAAAlO,UAAAwL,iBAAP,WACE5M,KAAK+N,cAAe,EACpB/N,KAAK0P,gBAAiB,EACtB1P,KAAKqF,cAAc+L,QAAQ3I,SAC3BzI,KAAK4Q,UAAUlC,gBAGVY,EAAAlO,UAAAyP,iBAAP,WAAA,IAqCC9P,EAAAf,KAnC+B,SAA5BA,KAAKqF,cAAcsD,OAClB3I,KAAKuR,iBACNvR,KAAKqF,cAAczF,QAAQmL,UAAY/K,KAAKqF,cAAczF,QAAQ4R,SAElExR,KAAKuR,gBAAkBxT,EACrB,MACA,mDACAiC,KAAKqF,cAAc7G,SAGrB,IAAIuE,EAAO/C,KAAKuR,gBAAiB,CAC/BrO,KAAM,OACNzB,MAAOzB,KAAKqF,cAAczF,QAAQkG,OAAO2L,OACzCxT,UAAW,SACXgF,QAAS,WAC0C,mBAAtClC,EAAKsE,cAAczF,QAAQ6R,OACpC1Q,EAAKsE,cAAczF,QAAQ6R,UAE3B1Q,EAAKsE,cAAcgB,QACjBiC,OAAOC,OAAO,GAAIxH,EAAKsE,cAAczF,QAAS,CAC5CmL,UAAWhK,EAAKsE,cAAczF,QAAQmL,UAAY,KAGH,mBAAxChK,EAAKsE,cAAczF,QAAQ8R,UACpC3Q,EAAKsE,cAAczF,QAAQ8R,gBAM/B1R,KAAKuR,kBACPhT,EAAcyB,KAAKuR,iBACnBvR,KAAKuR,gBAAkB,OAM7BjC,EAAAlO,UAAAwO,aAAA,WAAA,IASC7O,EAAAf,KARC,GAAIA,KAAKqF,cAAczF,QAAQ8G,SAAW1G,KAAKqF,cAAczF,QAAQ8G,QAAQwK,OAAS,EAAG,CACvF,IAAMS,EAAK5T,EAAmB,KAAM,cACpCiC,KAAKqF,cAAczF,QAAQ8G,QAAQ1C,SAAQ,SAACqF,EAAQnF,GAClD,IAAMmM,EAAa,IAAI/D,EAAgBqF,EAAItI,EAAQnF,EAAOnD,EAAKsE,eAC/DtE,EAAKyO,YAAYrL,KAAKkM,MAExBrQ,KAAKxB,QAAQF,YAAYqT,KAK7BrC,EAAAlO,UAAAyO,UAAA,WACE,IAAK,IAAIhC,EAAI,EAAGA,EAAI7N,KAAKqF,cAAczF,QAAQmL,UAAW8C,IAAK,CAC7D,IAAM+D,EAAK7T,EAAmB,KAAM,cACpC6T,EAAGlR,aAAa,KAAM,GAAG3B,OAAAiB,KAAKqF,cAAcmB,GAAE,QAAAzH,OAAO8O,IACrD,IAAMgE,EAAwB,GAC9B7R,KAAK4N,aAAazJ,KAAK0N,GACvB,IAAK,IAAI/D,EAAI,EAAGA,EAAI9N,KAAKqF,cAAczF,QAAQ6G,aAAcqH,IAAK,CACrD/P,EAAmB,KAAM,aAAc6T,GAC/ClR,aAAa,KAAM,UAAGV,KAAKqF,cAAcmB,GAAS,QAAAzH,OAAA8O,cAAKC,IAC1D+D,EAAY1N,KAAK,GAEnBnE,KAAKxB,QAAQF,YAAYsT,KAK7BtC,EAAAlO,UAAA0O,YAAA,WAAA,IAyCC/O,EAAAf,KAvCO8R,EAAc,GACdtI,EAAQxJ,KAAKqF,cAAczF,QAAQ4J,MACrCA,GAASA,EAAM0H,OAAS,GAC1B1H,EAAMxF,SAAQ,SAAC+F,GAEb,GAAIA,EAAKR,QAAU,GAAKQ,EAAKT,QAAU,EACrC,IAAK,IAAIuE,EAAI9D,EAAKV,OAAQwE,EAAI9D,EAAKV,OAASU,EAAKR,QAASsE,IACxD,IAAK,IAAIC,EAAI/D,EAAKX,IAAK0E,EAAI/D,EAAKX,IAAMW,EAAKT,QAASwE,IAC5CD,IAAM9D,EAAKV,QAAUyE,IAAM/D,EAAKX,MACpC0I,EAAY3N,KAAK,GAAApF,OAAGgC,EAAKsE,cAAcmB,kBAASsH,EAAC,KAAA/O,OAAI8O,IACrD9M,EAAK6M,aAAaE,GAAGD,GAAK,MAStCiE,EAAY9N,SAAQ,SAACwC,GAAO,OAAAjI,EAAcH,SAAS2T,eAAevL,OAGlE,mBAASqH,GACP,mBAASC,GACP,IAAKgE,EAAYE,SAAS,UAAGC,EAAK5M,cAAcmB,kBAASqH,EAAC,KAAA9O,OAAI+O,IAAM,CAClE,IAAMoE,EACJ1I,GAASA,EAAM0H,OAAS,EACpB1H,EAAM2F,MAAK,SAACpF,GAAS,OAAAA,EAAKX,MAAQyE,GAAK9D,EAAKV,SAAWyE,KACvD,KACAqE,EAAW/T,SAAS2T,eAAe,GAAGhT,OAAAkT,EAAK5M,cAAcmB,GAAS,QAAAzH,OAAA8O,cAAKC,IACzEoE,IACFC,EAASzR,aAAa,UAAWwR,EAAW3I,QAAQ6I,YACpDD,EAASzR,aAAa,UAAWwR,EAAW5I,QAAQ8I,YACpDH,EAAKrE,aAAaC,GAAGC,GAAK,GAE5BmE,EAAKxC,MAAMtL,KAAK,IAAIyF,EAAUuI,EAAUD,EAAYrE,EAAGC,EAAGmE,EAAK5M,kBAZ1DyI,EAAI,EAAGA,EAAImE,EAAK5M,cAAczF,QAAQ6G,aAAcqH,MAApDA,WADFD,EAAI,EAAGA,EAAI7N,KAAKqF,cAAczF,QAAQmL,UAAW8C,MAAjDA,IAkBZyB,KC5RD+C,EAAA,WAME,SAAYA,EAAAC,EAAmB1S,GAC7BI,KAAKxB,QAAUT,EAAmB,MAAO,eAAgBuU,EAAO9T,SACxD,IAAA+T,EAAsE3S,EAA7D2S,UAAEC,EAA2D5S,EAAlD4S,UAAElR,EAAgD1B,EAAO6S,UAAvDA,aAAY,EAACnR,EAAEC,EAAiC3B,EAAnB8S,QAAdA,OAAO,IAAAnR,GAAOA,EAAEoR,EAAiB/S,QAAjBgT,OAAQ,IAAAD,KACrE3S,KAAKyS,UAAYA,EACbC,GAAS1S,KAAK6S,mBACdD,GAAO5S,KAAK8S,iBAChB9S,KAAK+S,SAASR,EAAWC,GACzBxS,KAAKxB,QAAQyC,iBAAiB,cAAc,WAAM,OAAAqR,EAAOU,YAAW,MACpEhT,KAAKxB,QAAQyC,iBAAiB,cAAc,WAAM,OAAAqR,EAAOU,YAAW,MACpEhT,KAAKxB,QAAQyC,iBAAiB,YAAY,WAAM,OAAAqR,EAAOW,mBAmD3D,OAhDSZ,EAASjR,UAAA8R,UAAhB,SAAiBC,QAAA,IAAAA,IAAAA,GAAc,GACzBA,EACFnT,KAAKxB,QAAQmC,UAAUC,IAAI,WAE3BZ,KAAKxB,QAAQmC,UAAUlC,OAAO,YAI3B4T,EAAAjR,UAAA2R,SAAP,SAAgBR,EAAqBC,GAEnC,IAAMY,EAAKb,EAAUnT,EACfiU,EAAKd,EAAUtD,EAEf5P,EAAKmT,EAAUpT,EACfkU,EAAKd,EAAUvD,EAGfiC,EAAShD,KAAKqF,MAAMlU,EAAK+T,IAAO/T,EAAK+T,IAAOE,EAAKD,IAAOC,EAAKD,IAG7DG,GAAMJ,EAAK/T,GAAM,EAAI6R,EAAS,EAC9BuC,GAAMJ,EAAKC,GAAM,EAAItT,KAAKyS,UAAY,EAEtCiB,EAAQxF,KAAKyF,MAAML,EAAKD,EAAIhU,EAAK+T,IAAO,IAAMlF,KAAK0F,IAEzD5T,KAAKxB,QAAQQ,MAAMuB,MAAQ2Q,EAASlR,KAAKyS,UAAY,KACrDzS,KAAKxB,QAAQQ,MAAMwB,OAASR,KAAKyS,UAAY,KAC7CzS,KAAKxB,QAAQQ,MAAM6C,KAAO2R,EAAK,GAAMxT,KAAKyS,UAAY,KACtDzS,KAAKxB,QAAQQ,MAAM8C,IAAM2R,EAAK,KAC9BzT,KAAKxB,QAAQQ,MAAM6U,aAAe7T,KAAKyS,UAAY,KACnDzS,KAAKxB,QAAQQ,MAAM8U,UAAY,UAAA/U,OAAU2U,EAAK,SAGzCrB,EAAAjR,UAAAyR,iBAAP,WACM7S,KAAK+T,aACPxV,EAAcyB,KAAK+T,cAEnB/T,KAAK+T,aAAehW,EAAmB,MAAO,cAAeiC,KAAKxB,UAI/D6T,EAAAjR,UAAA0R,eAAP,WACM9S,KAAKgU,WACPzV,EAAcyB,KAAKgU,YAEnBhU,KAAKgU,WAAajW,EAAmB,MAAO,QAASiC,KAAKxB,UAG/D6T,KCjED4B,EAAA,WAWE,SAAAA,EACEtU,EACAC,EACAyF,GAEArF,KAAKxB,QAAUT,EAAmB,MAAO,qBAAsB4B,GAC/DK,KAAKkU,gBAAkBtU,EAAQsU,gBAC/BlU,KAAKmU,UAAYvU,EAAQuU,UACzBnU,KAAKqF,cAAgBA,EACrBrF,KAAKoU,YAqHT,OAlHSH,EAAc7S,UAAAiT,eAArB,SAAsBC,GACftU,KAAKmU,UAAUnC,SAASsC,KAC3BtU,KAAKmU,UAAUhQ,KAAKmQ,GACpBtU,KAAKoU,cAIFH,EAAA7S,UAAA6R,cAAP,WACMjT,KAAKmT,UACHnT,KAAKkU,gBACPlU,KAAKqF,cAAc4G,eAAesI,cAElCvU,KAAKqF,cAAc4G,eAAeuI,gBAAgBxU,QAKjDiU,EAAA7S,UAAAgT,UAAP,WAAA,IA0CCrT,EAAAf,KAvCC,GAFAA,KAAKyU,QAAU,GACfzU,KAAK0U,MAAQ,GACiB,IAA1B1U,KAAKmU,UAAUjD,OAAnB,CACAlR,KAAKmU,UAAUnQ,SAAQ,SAACsQ,GACtB,IAAMK,EAAe5T,EAAKsE,cAAcuP,iBAAiBH,QAAQtF,MAC/D,SAAC0F,GAAW,OAAAA,EAAOrO,KAAO8N,KAExBK,GACF5T,EAAK0T,QAAQtQ,KAAKwQ,MAGtB3U,KAAKxB,QAAQyB,UAAY,GACzB,IAAM6U,EAAwB9U,KAAKyU,QAAQM,KAAI,SAACF,GAAW,MAAC,CAC1DzV,EAAGyV,EAAOG,KACV/F,EAAG4F,EAAOI,SAEZ,GAAIH,EAAU5D,OAAS,EACrB,IAAK,IAAIrD,EAAI,EAAGA,EAAIiH,EAAU5D,OAAS,EAAGrD,IAAK,CAC7C,IAAMqH,EAAO,IAAI7C,EAAYrS,KAAM,CACjCuS,UAAWuC,EAAUjH,GACrB2E,UAAWsC,EAAUjH,EAAI,GACzB4E,UAAW,EACXC,QAAe,IAAN7E,EACT+E,MAAO/E,IAAMiH,EAAU5D,OAAS,IAAMlR,KAAKkU,kBAE7ClU,KAAK0U,MAAMvQ,KAAK+Q,GAIhBlV,KAAKkU,kBACPlU,KAAKmV,wBAA0BL,EAAUA,EAAU5D,OAAS,GAE5DlR,KAAKoV,WAAa,IAAI/C,EAAYrS,KAAM,CACtCuS,UAAWvS,KAAKmV,wBAChB3C,UAAWxS,KAAKqF,cAAc0J,cAC9B0D,UAAW,EACXC,QAA8B,IAArBoC,EAAU5D,OACnB0B,OAAO,IAET5S,KAAK0U,MAAMvQ,KAAKnE,KAAKoV,eAIlBnB,EAAU7S,UAAA4R,WAAjB,SAAkBG,QAAA,IAAAA,IAAAA,GAAc,GACE,SAA5BnT,KAAKqF,cAAcsD,OACrB3I,KAAKmT,QAAUA,EACfnT,KAAK0U,MAAM1Q,SAAQ,SAACkR,GAClBA,EAAKhC,UAAUC,MAEZnT,KAAKkU,iBACRlU,KAAKqF,cAAc+L,QAAQpJ,QAAQd,QAAQiM,EAAU,YAAc,UAKlEc,EAAA7S,UAAAiU,WAAP,WAEErV,KAAKkU,iBAAkB,EACvBlU,KAAKoU,aAGAH,EAAA7S,UAAAkU,cAAP,WACMtV,KAAKoV,YACHpV,KAAKmU,UAAUjD,OAAS,IAC1BlR,KAAKmU,UAAU5I,MACe,IAA1BvL,KAAKmU,UAAUjD,QACjB3S,EAAcyB,KAAKxB,SAEnBwB,KAAKqF,cAAc4G,eAAesJ,cAChCvV,KAAKqF,cAAc4G,eAAesJ,cAActE,QAC9C,SAACuE,GAAc,OAAAA,EAAUtE,OAAS,KAEtClR,KAAKqF,cAAc4G,eAAesI,eAElCvU,KAAKoU,cAMNH,EAAW7S,UAAAgO,YAAlB,SAAmB/J,GACjB,GAAIrF,KAAKoV,WAAY,CACnB,IAAIK,EAAiBpQ,EAAc0J,cAGjC1J,EAAcuP,iBAAiBc,gBAC9B1V,KAAKmU,UAAUnC,SAAS3M,EAAcuP,iBAAiBc,cAAclP,MAEtEiP,EAAiB,CACfrW,EAAGiG,EAAcuP,iBAAiBc,cAAcV,KAChD/F,EAAG5J,EAAcuP,iBAAiBc,cAAcT,OAGpDjV,KAAKoV,WAAWrC,SAAS/S,KAAKmV,wBAAyBM,KAG5DxB,KC1ID0B,EAAA,WAUE,SAAAA,EAAYtQ,GACVrF,KAAKqF,cAAgBA,EACrBrF,KAAKxB,QAAUT,EAAmB,MAAO,qBAAsBiC,KAAKqF,cAAc7G,SAC1E,IAAAoB,EAAYI,KAAKqF,sBAErBzF,EAAQ8U,OAASkB,MAAMC,QAAQjW,EAAQ8U,OACzC1U,KAAKuV,cAAgB3V,EAAQ8U,MAE7B1U,KAAKuV,cAAgB,GAEvBvV,KAAK8V,oBAAsBnI,EAAAA,UAAU3N,KAAKuV,eA6G9C,OA1GSI,EAAAvU,UAAA2U,YAAP,WAAA,IAUChV,EAAAf,KATCA,KAAKxB,QAAQyB,UAAY,GACzBD,KAAKuV,cAAcvR,SAAQ,SAACgS,GAC1B,IAAI/B,EACFlT,EAAKvC,QACL,CAAE2V,UAAW6B,EAAW9B,iBAAiB,GACzCnT,EAAKsE,kBAGTrF,KAAKiW,yBAGAN,EAAAvU,UAAA8U,cAAP,WACElW,KAAKmW,eAAgB,EACrBnW,KAAKqF,cAAc+L,QAAQ5I,UAC3BxI,KAAKqF,cAAc+L,QAAQpJ,QAAQd,QAAQ,YAE3CvI,EAAUqB,KAAKxB,QAAS,CAAE4X,OAAQ,MAClCzX,EAAUqB,KAAKqF,cAAcuP,iBAAiBpW,QAAS,CAAE4X,OAAQ,MAEjEpW,KAAK8V,oBAAsBnI,EAAAA,UAAU3N,KAAKuV,gBAGrCI,EAAAvU,UAAAmT,YAAP,WACEvU,KAAKmW,eAAgB,EACrBnW,KAAKqF,cAAc+L,QAAQ3I,SAE3B9J,EAAUqB,KAAKxB,QAAS,CAAE4X,OAAQ,MAClCzX,EAAUqB,KAAKqF,cAAcuP,iBAAiBpW,QAAS,CAAE4X,OAAQ,MAE7DpW,KAAKqW,qBACPrW,KAAKqW,mBAAmBhB,aACpBrV,KAAKqW,mBAAmBlC,UAAUjD,QAAU,GAC9ClR,KAAKwU,gBAAgBxU,KAAKqW,oBAE5BrW,KAAKqW,wBAAqBC,GAEvB1H,EAAOA,QAAC5O,KAAK8V,oBAAqB9V,KAAKuV,iBAC1CvV,KAAK8V,oBAAsBnI,EAAAA,UAAU3N,KAAKuV,eAE1CvV,KAAKuW,kBAITZ,EAAAvU,UAAA6U,sBAAA,WAAA,IAkBClV,EAAAf,KAjBO+K,EAAY/K,KAAKqF,cAAczF,QAAQmL,UACvCtE,EAAezG,KAAKqF,cAAczF,QAAQ6G,aAChDzG,KAAKkM,iBAAkB,EACvBlM,KAAKgM,cAAe,EACpBhM,KAAKuV,cAAcvR,SAAQ,SAACkR,GAC1BA,EAAKlR,SAAQ,SAACwC,GACZ,IAAMgQ,EAAUhQ,EAAGiQ,MAAM,KACnBrN,EAAMoN,EAAQ,GACdE,EAAMF,EAAQ,GAChBG,SAASD,KAASjQ,EAAe,IACnC1F,EAAKmL,iBAAkB,GAErByK,SAASvN,KAAS2B,EAAY,IAChChK,EAAKiL,cAAe,UAMrB2J,EAAAvU,UAAAmV,cAAP,WACEvW,KAAKiW,wBACLjW,KAAKqF,cAAczF,QAAU0I,OAAOC,OAAO,GAAIvI,KAAKqF,cAAczF,QAAS,CACzE8U,MAAO1U,KAAKuV,gBAEdvV,KAAKqF,cAAc+L,QAAQpJ,QAAQd,QAAQ,QACa,mBAA7ClH,KAAKqF,cAAczF,QAAQ2W,eACpCvW,KAAKqF,cAAczF,QAAQ2W,cAAcvW,KAAKuV,gBAI3CI,EAAevU,UAAAoT,gBAAtB,SAAuBU,GACrB3W,EAAc2W,EAAK1W,SACnBwB,KAAKuV,cAAgBvV,KAAKuV,cAActE,QAAO,SAACyD,GAAU,OAAC9F,EAAAA,QAAQ8F,EAAOQ,EAAKf,cAC1EvF,EAAOA,QAAC5O,KAAKuV,cAAevV,KAAK8V,uBACpC9V,KAAK8V,oBAAsBnI,EAAAA,UAAU3N,KAAKuV,eAE1CvV,KAAKuW,kBAIFZ,EAAevU,UAAAwV,gBAAtB,SAAuBtC,GACrBtU,KAAKkW,gBACLlW,KAAKuV,cAAcpR,KAAK,CAACmQ,IACzBtU,KAAKqW,mBAAqB,IAAIpC,EAC5BjU,KAAKxB,QACL,CAAE2V,UAAWnU,KAAKuV,cAAcvV,KAAKuV,cAAcrE,OAAS,GAAIgD,iBAAiB,GACjFlU,KAAKqF,gBAIFsQ,EAAcvU,UAAAiT,eAArB,SAAsBC,GAChBtU,KAAKmW,eAAiBnW,KAAKqW,oBAC7BrW,KAAKqW,mBAAmBhC,eAAeC,IAIpCqB,EAAAvU,UAAAgO,YAAP,WACMpP,KAAKmW,eAAiBnW,KAAKqW,oBAC7BrW,KAAKqW,mBAAmBjH,YAAYpP,KAAKqF,gBAG9CsQ,KClIDkB,EAAA,WAqBE,SACEA,EAAAC,EACA1N,EACAC,EACAhE,EACA0R,EACAC,QADA,IAAAD,IAAAA,GAAiB,QACjB,IAAAC,IAAAA,GAAiB,GANnB,IA2DCjW,EAAAf,KA5CC,GAxBKA,KAAEwG,GAAG,GAELxG,KAAIgV,KAAG,EAEPhV,KAAIiV,KAAG,EAGPjV,KAAMiX,QAAG,EAUdjX,KAAK8W,QAAUA,EACf9W,KAAK+W,UAAYA,EACjB/W,KAAKgX,UAAYA,EACjBhX,KAAKoJ,IAAMA,EACXpJ,KAAKqJ,OAASA,EACdrJ,KAAKkX,UAAY9Y,SAAS2T,eAAe,GAAGhT,OAAAsG,EAAcmB,GAAE,QAAAzH,OAAOqK,IACnEpJ,KAAKmX,WAAa/Y,SAAS2T,eAAe,GAAGhT,OAAAsG,EAAcmB,GAAE,SAAAzH,OAAQsK,IACjErJ,KAAKkX,WAAalX,KAAKmX,WAAY,CAErCnX,KAAKxB,QAAUT,EACb,MACA,iBACAsH,EAAcuP,iBAAiBpW,SAEjCT,EAAmB,MAAO,uBAAwBiC,KAAKxB,SACvD,IAAM4Y,EAAOrZ,EAAmB,MAAO,sBAAuBiC,KAAKxB,SACnET,EAAmB,MAAO,wBAAyBqZ,GAGnDpX,KAAKwG,GAAK,UAAAzH,OAAUqK,EAAG,KAAArK,OAAIsK,EAAM,KAAAtK,OAAI+X,EAAO,KAAA/X,OAAIgY,EAAY,UAAY,UACtE,KAAAhY,OAAAiY,EAAY,UAAY,WAG1BhX,KAAKxB,QAAQkC,aAAa,KAAM,GAAA3B,OAAGsG,EAAcmB,GAAM,KAAAzH,OAAAiB,KAAKwG,KAE5DnB,EAAcuP,iBAAiBH,QAAQtQ,KAAKnE,MAC5CA,KAAKqX,WAAkC,SAAvBhS,EAAcsD,MAE9B3I,KAAKsX,cACLtX,KAAKxB,QAAQyC,iBAAiB,SAAS,WAChCoE,EAAc4G,eAAekK,cAGhC9Q,EAAc4G,eAAeoI,eAAetT,EAAKyF,IAFjDnB,EAAc4G,eAAe2K,gBAAgB7V,EAAKyF,OAKtDxG,KAAKxB,QAAQyC,iBAAiB,cAAc,WAC1CoE,EAAcuP,iBAAiB2C,iBAAiBxW,MAElDf,KAAKxB,QAAQyC,iBAAiB,cAAc,WACtCoE,EAAcuP,iBAAiBc,cAAclP,KAAOzF,EAAKyF,IAC3DnB,EAAcuP,iBAAiB2C,iBAAiB,SAIpDvX,KAAKxB,QAAQyC,iBAAiB,YAAY,WACpCoE,EAAc4G,eAAekK,eAC/B9Q,EAAc4G,eAAesI,kBAgEvC,OA1DEsC,EAAAzV,UAAAoW,eAAA,SAAepY,EAAG6P,GAChBjP,KAAKgV,KAAO5V,EACZY,KAAKiV,KAAOhG,EACZjP,KAAKxB,QAAQQ,MAAM6C,KAAOzC,EAAI,KAC9BY,KAAKxB,QAAQQ,MAAM8C,IAAMmN,EAAI,KAC7BjP,KAAKxB,QAAQkC,aAAa,QAAS,eAAA3B,OAAeK,EAAC,KAAAL,OAAIkQ,KAGlD4H,EAAUzV,UAAAiW,WAAjB,SAAkBI,GACZA,EACFzX,KAAKxB,QAAQmC,UAAUlC,OAAO,UAE9BuB,KAAKxB,QAAQmC,UAAUC,IAAI,WAIxBiW,EAAAzV,UAAAkW,YAAP,WACE,IAAMI,EAAS1X,KAAKmX,WAAW7G,YAActQ,KAAK+W,UAAY,GAAK,GAC7DY,EAAW3X,KAAKmX,WAAW7G,WAAa,GAAMtQ,KAAKmX,WAAWS,YAC9DC,EACJ7X,KAAKmX,WAAW7G,WAAatQ,KAAKmX,WAAWS,aAAe5X,KAAK+W,UAAY,GAAK,GAC9Ee,EAAQ9X,KAAKkX,UAAUzG,WAAazQ,KAAKgX,UAAY,GAAK,GAC1De,EAAW/X,KAAKkX,UAAUzG,UAAY,GAAMzQ,KAAKkX,UAAUc,aAC3DC,EACJjY,KAAKkX,UAAUzG,UAAYzQ,KAAKkX,UAAUc,cAAgBhY,KAAKgX,UAAY,GAAK,GAElF,OAAQhX,KAAK8W,SACX,IAAK,UACH9W,KAAKwX,eAAeE,EAAQI,GAC5B,MACF,IAAK,MACH9X,KAAKwX,eAAeG,EAAUG,GAC9B,MACF,IAAK,WACH9X,KAAKwX,eAAeK,EAASC,GAC7B,MACF,IAAK,QACH9X,KAAKwX,eAAeK,EAASE,GAC7B,MACF,IAAK,cACH/X,KAAKwX,eAAeK,EAASI,GAC7B,MACF,IAAK,SACHjY,KAAKwX,eAAeG,EAAUM,GAC9B,MACF,IAAK,aACHjY,KAAKwX,eAAeE,EAAQO,GAC5B,MACF,IAAK,OACHjY,KAAKwX,eAAeE,EAAQK,GAC5B,MACF,IAAK,SACH/X,KAAKwX,eAAeG,EAAUI,KAMrClB,KC3IDqB,EAAA,WAME,SAAAA,EAAY7S,GACVrF,KAAKqF,cAAgBA,EACrBrF,KAAKyU,QAAU,GACfzU,KAAKxB,QAAUT,EAAmB,MAAO,uBAAwBsH,EAAc7G,SA+FnF,OA5FS0Z,EAAA9W,UAAA+W,cAAP,WAAA,IAOCpX,EAAAf,KANCA,KAAKxB,QAAQyB,UAAY,GACzBD,KAAKyU,QAAU,GACfzU,KAAKqF,cAAcoF,gBAAgBgF,MAAMzL,SAAQ,SAACkM,GAEhDnP,EAAKqX,cAAclI,OAIhBgI,EAAgB9W,UAAAmW,iBAAvB,SAAwB1C,GACtB7U,KAAK0V,cAAgBb,EAChB7U,KAAKqF,cAAc4G,eAAekK,gBACjCtB,EACF7U,KAAKqF,cAAc+L,QAAQpJ,QAAQd,QAAQ,eAE3ClH,KAAKqF,cAAc+L,QAAQpJ,QAAQd,QAAQ,UAK1CgR,EAAA9W,UAAAiX,cAAP,WACMrY,KAAKyU,SAAWzU,KAAKyU,QAAQvD,OAAS,GACxClR,KAAKyU,QAAQzQ,SAAQ,SAAC6Q,GACpBA,EAAOyC,kBAKNY,EAAiB9W,UAAAkX,kBAAxB,SAAyBb,GACnBzX,KAAKyU,SAAWzU,KAAKyU,QAAQvD,OAAS,GACxClR,KAAKyU,QAAQzQ,SAAQ,SAAC6Q,GACpBA,EAAOwC,WAAWI,OAMxBS,EAAa9W,UAAAgX,cAAb,SAAclI,GACZ,IAAK,IAAI9G,EAAM8G,EAAK9G,IAAKA,EAAM8G,EAAK9G,IAAM8G,EAAK5G,QAASF,IACtD,IAAK,IAAIsN,EAAMxG,EAAK7G,OAAQqN,EAAMxG,EAAK7G,OAAS6G,EAAK3G,QAASmN,IAChD,IAARtN,IACF,IAAIyN,EAAO,MAAOzN,EAAKsN,EAAK1W,KAAKqF,eACjC,IAAIwR,EAAO,WAAYzN,EAAKsN,EAAK1W,KAAKqF,eAClB,IAAhB6K,EAAK7G,QACP,IAAIwN,EAAO,UAAWzN,EAAKsN,EAAK1W,KAAKqF,gBAG7B,IAARqR,IACF,IAAIG,EAAO,OAAQzN,EAAKsN,EAAK1W,KAAKqF,eAClC,IAAIwR,EAAO,aAAczN,EAAKsN,EAAK1W,KAAKqF,gBAEtCqR,IAAQxG,EAAK7G,OAAS6G,EAAK3G,QAAU,GACvC,IAAIsN,EAAO,QAASzN,EAAKsN,EAAK1W,KAAKqF,eAEjC+D,IAAQ8G,EAAK9G,IAAM8G,EAAK5G,QAAU,GACpC,IAAIuN,EAAO,SAAUzN,EAAKsN,EAAK1W,KAAKqF,eAElCqR,IAAQxG,EAAK7G,OAAS6G,EAAK3G,QAAU,GAAKH,IAAQ8G,EAAK9G,IAAM8G,EAAK5G,QAAU,GAC9E,IAAIuN,EAAO,cAAezN,EAAKsN,EAAK1W,KAAKqF,eAEvC6K,EAAKhG,UACHwM,IAAQxG,EAAK7G,SACf,IAAIwN,EAAO,OAAQzN,EAAKsN,EAAK1W,KAAKqF,eAAe,GAAM,GACnD+D,EAAM8G,EAAK9G,IAAM8G,EAAK5G,QAAU,GAClC,IAAIuN,EAAO,aAAczN,EAAKsN,EAAK1W,KAAKqF,eAAe,GAAM,IAG7DqR,IAAQxG,EAAK7G,OAAS6G,EAAK3G,QAAU,IACvC,IAAIsN,EAAO,QAASzN,EAAKsN,EAAK1W,KAAKqF,eAAe,GAAM,GACpD+D,EAAM8G,EAAK9G,IAAM8G,EAAK5G,QAAU,GAClC,IAAIuN,EAAO,cAAezN,EAAKsN,EAAK1W,KAAKqF,eAAe,GAAM,IAG9D+D,IAAQ8G,EAAK9G,MACf,IAAIyN,EAAO,MAAOzN,EAAKsN,EAAK1W,KAAKqF,eAAe,GAAO,GACnDqR,EAAMxG,EAAK7G,OAAS6G,EAAK3G,QAAU,GACrC,IAAIsN,EAAO,WAAYzN,EAAKsN,EAAK1W,KAAKqF,eAAe,GAAO,IAG5D+D,IAAQ8G,EAAK9G,IAAM8G,EAAK5G,QAAU,IACpC,IAAIuN,EAAO,SAAUzN,EAAKsN,EAAK1W,KAAKqF,eAAe,GAAO,GACtDqR,EAAMxG,EAAK7G,OAAS6G,EAAK3G,QAAU,GACrC,IAAIsN,EAAO,cAAezN,EAAKsN,EAAK1W,KAAKqF,eAAe,GAAO,KAMpE6K,EAAKhG,SACR,IAAI2M,EAAO,SAAU3G,EAAK9G,IAAK8G,EAAK7G,OAAQrJ,KAAKqF,gBAGtD6S,KCtGKK,EAAiC,CACrC9R,aAAc,EACdsE,UAAW,EACXrC,WAAY,GACZ8I,QAAS,GACT1L,OAAQ,CACN6B,SAAU,YACVC,YAAa,eACbf,WAAY,cACZC,UAAW,aACXsE,aAAc,gBACdqG,OAAQ,UACRxG,UAAW,aACXvB,SAAU,YACVC,QAAS,WACTgB,WAAY,cACZE,eAAgB,mBAChBL,SAAU,YACVgO,QAAS,WACTtP,cAAe,kBACfnD,gBAAiB,oBACjBK,QAAS,UACTF,OAAQ,SACRkB,cACE,mJACFC,eAAgB,mCAChBC,iBAAkB,+BAClBC,cAAe,oEACfC,gBAAiB,0EAIrBiR,EAAA,WAcE,SAAYA,EAAAta,EAAiByB,GAA7B,ItBvD2C8Y,EAASC,EAChDC,EsB2EH7X,EAAAf,KApBC,GAoFFA,KAAA6Y,aAAe,WAGb9X,EAAKsF,WAEPrG,KAAqB8Y,uBtBjJsBJ,EsBiJV1Y,KAAK6Y,atBjJcF,EsBiJA,ItB9I/CI,OAAOC,UAAUL,KACpBM,QAAQC,KAAK,wCACbP,EAAO,KAKG,eAAqB,IAAcQ,EAAA,GAAAC,EAAA,EAAdA,EAAcC,UAAAnI,OAAdkI,IAAAD,EAAcC,GAAAC,UAAAD,GAC7C1W,aAAakW,GAEb,IAAMU,EAAUtZ,KAEhB4Y,EAAYnW,OAAOI,YAAW,WAC5B6V,EAAKa,MAAMD,EAASH,KACnBR,KsB4JL3Y,KAASwZ,UAAG,SAACnW,GACI,UAAXA,EAAEoW,KAEA1Y,EAAKkL,eAAekK,eACtBpV,EAAKkL,eAAesI,cAEF,WAAXlR,EAAEoW,OAEP1Y,EAAKkL,eAAekK,eACtBpV,EAAKkL,eAAeoK,mBAAmBf,gBAErCvU,EAAK0J,gBAAgBsD,cACvBhN,EAAK0J,gBAAgB4G,aAEnBtQ,EAAK0J,gBAAgBiF,gBACvB3O,EAAK0J,gBAAgB6G,kBApIpBnT,EACH,MAAM,IAAIub,MAAM,wDAEhB1Z,KAAK2Z,YAAcxb,EAIjB6B,KAAK2Z,YAAYC,aAAa,MAChC5Z,KAAKwG,GAAKxG,KAAK2Z,YAAYC,aAAa,MAExC5Z,KAAKwG,GAAK,MAAwB,IAAhB0H,KAAK2L,UAAmBC,QAAQ,GAGpD9Z,KAAK+Z,KAAKna,GAEV6C,OAAOxB,iBAAiB,SAAUjB,MAAM,GACxCyC,OAAOxB,iBAAiB,UAAWjB,MAAM,GACzCyC,OAAOxB,iBAAiB,YAAajB,MAAM,GAE3CA,KAAKga,SAAU,EA4JnB,OAzJSvB,EAAIrX,UAAA2Y,KAAX,SAAYna,GAaV,GAZAI,KAAK2Z,YAAY1Z,UAAY,GAE7BD,KAAKJ,QAAU0I,OAAOC,OAAO,GAAIgQ,EAAgB3Y,GAC7CA,EAAQkG,SACV9F,KAAKJ,QAAQkG,OAASwC,OAAOC,OAAO,GAAIgQ,EAAezS,OAAQlG,EAAQkG,cAExC,IAAtB9F,KAAKJ,QAAQqa,OACtBja,KAAKJ,QAAQmL,UAAY/K,KAAKJ,QAAQqa,KAAK/I,QAEzClR,KAAKJ,QAAQ8G,SAAW1G,KAAKJ,QAAQ8G,QAAQwK,OAAS,IACxDlR,KAAKJ,QAAQ6G,aAAezG,KAAKJ,QAAQ8G,QAAQwK,QAE9ClR,KAAKJ,QAAQ8G,SAA2C,IAAhC1G,KAAKJ,QAAQ8G,QAAQwK,OAShDlR,KAAKqI,gBAAiB,MATwC,CAC9DrI,KAAKJ,QAAQ8G,QAAU,GACvB1G,KAAKqI,gBAAiB,EACtB,IAAK,IAAIwF,EAAI,EAAGA,EAAI7N,KAAKJ,QAAQ6G,aAAcoH,IAC7C7N,KAAKJ,QAAQ8G,QAAQvC,KAAK,CACxB5D,MAAO,SAMTP,KAAKJ,QAAQmL,UAAY/K,KAAKJ,QAAQ4R,UACxCxR,KAAKJ,QAAQmL,UAAY/K,KAAKJ,QAAQ4R,SAEpCxR,KAAKJ,QAAQ6G,aAAezG,KAAKJ,QAAQ8I,aAC3C1I,KAAKJ,QAAQ6G,aAAezG,KAAKJ,QAAQ8I,YAIvC1I,KAAKJ,QAAQsa,UACfla,KAAK2I,KAAO,OACZ3I,KAAKoR,QAAU,IAAI3J,EAAQzH,KAAK2Z,YAAa3Z,OAE7CA,KAAK2I,KAAO,UAId3I,KAAKxB,QAAUT,EAAmB,MAAO,UAAWiC,KAAK2Z,aACvC,SAAd3Z,KAAK2I,MAAiB3I,KAAKxB,QAAQmC,UAAUC,IAAI,QACrDZ,KAAKiM,eAAiB,IAAI0J,EAAe3V,MACzCA,KAAK4U,iBAAmB,IAAIsD,EAAiBlY,MAC7CA,KAAKyK,gBAAkB,IAAI0P,EAAgBna,MAE3CA,KAAKqB,UAGAoX,EAAArX,UAAAC,OAAP,WAAA,IAWCN,EAAAf,KATCA,KAAKyK,gBAAgBkF,cAGrB9M,YAAW,WAET9B,EAAK6T,iBAAiBuD,gBAEtBpX,EAAKkL,eAAe8J,gBACnB,IAWL0C,EAAWrX,UAAAgZ,YAAX,SAAYC,GACV,OAAQA,EAAMrX,MACZ,IAAK,SACHhD,KAAK8Y,wBACL,MACF,IAAK,YACH9Y,KAAKsa,aAAaD,GAClB,MACF,IAAK,UACHra,KAAKwZ,UAAUa,KAOrB5B,EAAYrX,UAAAkZ,aAAZ,SAAaD,GACX,IAAM5V,EAAOzE,KAAKxB,QAAQmD,wBACpB4Y,EAAUF,EAAMG,QAAU/V,EAAK5C,KAC/B4Y,EAAUJ,EAAMK,QAAUjW,EAAK3C,IACrC9B,KAAK+O,cAAgB,CAAE3P,EAAGmb,EAAStL,EAAGwL,GACtCza,KAAKiM,eAAemD,cACpBpP,KAAKyK,gBAAgB2E,eAuBhBqJ,EAAOrX,UAAAiF,QAAd,SAAezG,GAAf,IAYCmB,EAAAf,KAXMA,KAAKga,SAGRnX,YAAW,WACT,IAAMrC,EAASO,EAAK4Y,YAAYhY,wBAAwBnB,OAExD7B,EAAUoC,EAAK4Y,YAAa,CAAEnZ,OAAQA,EAAS,OAC/CO,EAAKgZ,KAAKna,GAAoBmB,EAAKnB,SACnCjB,EAAUoC,EAAK4Y,YAAa,CAAEnZ,OAAQ,aAKrCiY,EAAArX,UAAAuZ,QAAP,WACO3a,KAAKga,UAIVvX,OAAOG,oBAAoB,SAAU5C,MAAM,GAC3CyC,OAAOG,oBAAoB,UAAW5C,MAAM,GAC5CyC,OAAOG,oBAAoB,YAAa5C,MAAM,GAE9CA,KAAKga,SAAU,IAGVvB,EAAUrX,UAAAyG,WAAjB,SAAkBc,GACZ3I,KAAK2I,OAASA,IAChB3I,KAAK2I,KAAOA,EACC,SAATA,EACF3I,KAAKxB,QAAQmC,UAAUC,IAAI,QAE3BZ,KAAKxB,QAAQmC,UAAUlC,OAAO,QAEhCuB,KAAK4U,iBAAiB0D,kBAA2B,SAAT3P,GACxC3I,KAAKyK,gBAAgBkF,gBAG1B8I"}