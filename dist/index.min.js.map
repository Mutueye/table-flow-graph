{"version":3,"file":"index.min.js","sources":["../src/lib/dom.ts","../src/lib/utils.ts","../src/components/ui/icon/svgIconList.ts","../src/components/ui/icon/Icon.ts","../src/components/ui/tooltip/Tooltip.ts","../src/components/ui/button/Button.ts","../src/components/ui/toggler/Toggler.ts","../src/components/ui/dialog/Dialog.ts","../src/components/table/EditColumnDialog.ts","../src/components/toolbar/HintManager.ts","../src/components/toolbar/Toolbar.ts","../src/components/table/node/EditNodeDialog.ts","../src/components/ui/popup/Popup.ts","../src/components/table/node/nodeUtils.ts","../src/components/table/node/Node.ts","../src/components/table/TableCell.ts","../src/components/table/TableHeaderCell.ts","../src/components/table/TableMaskBox.ts","../src/components/table/TableMask.ts","../src/components/table/TableController.ts","../src/components/line/LineSegment.ts","../src/components/line/LineGroup.ts","../src/components/line/LineController.ts","../src/components/anchor/Anchor.ts","../src/components/anchor/AnchorController.ts","../src/index.ts"],"sourcesContent":["// HTMLElementTagNameMap from lib.dom.d.ts\ninterface HTMLElementTagNameMap {\n  a: HTMLAnchorElement;\n  abbr: HTMLElement;\n  address: HTMLElement;\n  area: HTMLAreaElement;\n  article: HTMLElement;\n  aside: HTMLElement;\n  audio: HTMLAudioElement;\n  b: HTMLElement;\n  base: HTMLBaseElement;\n  bdi: HTMLElement;\n  bdo: HTMLElement;\n  blockquote: HTMLQuoteElement;\n  body: HTMLBodyElement;\n  br: HTMLBRElement;\n  button: HTMLButtonElement;\n  canvas: HTMLCanvasElement;\n  caption: HTMLTableCaptionElement;\n  cite: HTMLElement;\n  code: HTMLElement;\n  col: HTMLTableColElement;\n  colgroup: HTMLTableColElement;\n  data: HTMLDataElement;\n  datalist: HTMLDataListElement;\n  dd: HTMLElement;\n  del: HTMLModElement;\n  details: HTMLDetailsElement;\n  dfn: HTMLElement;\n  dialog: HTMLDialogElement;\n  dir: HTMLDirectoryElement;\n  div: HTMLDivElement;\n  dl: HTMLDListElement;\n  dt: HTMLElement;\n  em: HTMLElement;\n  embed: HTMLEmbedElement;\n  fieldset: HTMLFieldSetElement;\n  figcaption: HTMLElement;\n  figure: HTMLElement;\n  font: HTMLFontElement;\n  footer: HTMLElement;\n  form: HTMLFormElement;\n  frame: HTMLFrameElement;\n  frameset: HTMLFrameSetElement;\n  h1: HTMLHeadingElement;\n  h2: HTMLHeadingElement;\n  h3: HTMLHeadingElement;\n  h4: HTMLHeadingElement;\n  h5: HTMLHeadingElement;\n  h6: HTMLHeadingElement;\n  head: HTMLHeadElement;\n  header: HTMLElement;\n  hgroup: HTMLElement;\n  hr: HTMLHRElement;\n  html: HTMLHtmlElement;\n  i: HTMLElement;\n  iframe: HTMLIFrameElement;\n  img: HTMLImageElement;\n  input: HTMLInputElement;\n  ins: HTMLModElement;\n  kbd: HTMLElement;\n  label: HTMLLabelElement;\n  legend: HTMLLegendElement;\n  li: HTMLLIElement;\n  link: HTMLLinkElement;\n  main: HTMLElement;\n  map: HTMLMapElement;\n  mark: HTMLElement;\n  marquee: HTMLMarqueeElement;\n  menu: HTMLMenuElement;\n  meta: HTMLMetaElement;\n  meter: HTMLMeterElement;\n  nav: HTMLElement;\n  noscript: HTMLElement;\n  object: HTMLObjectElement;\n  ol: HTMLOListElement;\n  optgroup: HTMLOptGroupElement;\n  option: HTMLOptionElement;\n  output: HTMLOutputElement;\n  p: HTMLParagraphElement;\n  param: HTMLParamElement;\n  picture: HTMLPictureElement;\n  pre: HTMLPreElement;\n  progress: HTMLProgressElement;\n  q: HTMLQuoteElement;\n  rp: HTMLElement;\n  rt: HTMLElement;\n  ruby: HTMLElement;\n  s: HTMLElement;\n  samp: HTMLElement;\n  script: HTMLScriptElement;\n  section: HTMLElement;\n  select: HTMLSelectElement;\n  slot: HTMLSlotElement;\n  small: HTMLElement;\n  source: HTMLSourceElement;\n  span: HTMLSpanElement;\n  strong: HTMLElement;\n  style: HTMLStyleElement;\n  sub: HTMLElement;\n  summary: HTMLElement;\n  sup: HTMLElement;\n  table: HTMLTableElement;\n  tbody: HTMLTableSectionElement;\n  td: HTMLTableCellElement;\n  template: HTMLTemplateElement;\n  textarea: HTMLTextAreaElement;\n  tfoot: HTMLTableSectionElement;\n  th: HTMLTableCellElement;\n  thead: HTMLTableSectionElement;\n  time: HTMLTimeElement;\n  title: HTMLTitleElement;\n  tr: HTMLTableRowElement;\n  track: HTMLTrackElement;\n  u: HTMLElement;\n  ul: HTMLUListElement;\n  var: HTMLElement;\n  video: HTMLVideoElement;\n  wbr: HTMLElement;\n}\n\n/**\n * Create an element with designated tagName，and add a className to it,\n * then append to parentNode if has one.\n * @param tagName\n * @param className\n * @param parentNode\n * @returns\n */\nexport function createClassElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  className: string,\n  parentNode: HTMLElement = null,\n): HTMLElementTagNameMap[K] {\n  const el = document.createElement(tagName);\n  if (className) el.className = className;\n  if (parentNode) parentNode.appendChild(el);\n  return el;\n}\n\nconst elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches || Element.prototype.webkitMatchesSelector);\n\nexport function matches(element: HTMLElement, query: string): boolean {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\n/**\n * Delete a dom element\n * @param {HTMLElement} element\n */\nexport function removeElement(element: HTMLElement) {\n  if (element) {\n    if (element.remove) {\n      element.remove();\n    } else {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    }\n  }\n}\n\nexport function queryChildren(element: HTMLElement, selector: string): HTMLElement[] {\n  return Array.prototype.filter.call(element.children, (child: HTMLElement) =>\n    matches(child, selector),\n  );\n}\n\nexport function getStyles(element: HTMLElement): CSSStyleDeclaration {\n  return getComputedStyle(element);\n}\n\nexport function setStyles(element: HTMLElement, obj: Partial<CSSStyleDeclaration>) {\n  for (const key in obj) {\n    let val = obj[key];\n    if (typeof val === 'number') {\n      val = `${val}px`;\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nexport const createElementFromHtmlString = (htmlString: string) => {\n  const div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  // Change this to div.childNodes to support multiple top-level nodes.\n  return div.firstChild as HTMLElement;\n};\n","import { FunctionalColor, ColorValue, Color } from '..';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function debounce<F extends Function>(func: F, wait: number): F {\n  let timeoutID: number;\n\n  if (!Number.isInteger(wait)) {\n    console.warn('Call debounce without a valid number');\n    wait = 300;\n  }\n\n  // conversion through any necessary as it wont satisfy criteria otherwise\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return <any>function (this: any, ...args: any[]) {\n    clearTimeout(timeoutID);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const context = this;\n\n    timeoutID = window.setTimeout(function () {\n      func.apply(context, args);\n    }, wait);\n  };\n}\n\n// check if last column/row deleteable by occupiedList\nexport const setColumnAndRowDeletable = (\n  occupiedList: number[][],\n  totalRows: number,\n  totalColumns: number,\n) => {\n  let canDeleteColumn = true;\n  let canDeleteRow = true;\n  for (let i = 0; i < totalRows - 1; i++) {\n    if (occupiedList[i][totalColumns - 1] !== 0) {\n      canDeleteColumn = false;\n    }\n  }\n  for (let i = 0; i < totalColumns - 1; i++) {\n    if (occupiedList[totalRows - 1][i] !== 0) {\n      canDeleteRow = false;\n    }\n  }\n  return { canDeleteRow, canDeleteColumn };\n};\n\nexport const uniqId = () => {\n  const eles = window.document.getElementsByTagName('body');\n  const bodyObj = eles.item(0);\n  const c = bodyObj.innerHTML.length;\n  const t = new Date().getTime();\n  const n = Math.floor(Math.random() * 100 + 1);\n  return c.toString() + t.toString() + n.toString();\n};\n\nexport const ColorPlate: Record<Color, ColorValue> = {\n  red: '#FA5151',\n  orange: '#F96400',\n  yellow: '#FCB42C',\n  green: '#68DE4D',\n  cyan: '#28E1F0',\n  blue: '#3366FF',\n  purple: '#8433FF',\n  gray: '#9398A5',\n  black: '#000000',\n  white: '#FFFFFF',\n};\n\nexport const FunctionalColors: Record<FunctionalColor, ColorValue> = {\n  primary: ColorPlate.blue,\n  success: ColorPlate.green,\n  info: ColorPlate.gray,\n  warning: ColorPlate.orange,\n  danger: ColorPlate.red,\n};\n","const svgIconList = {\n  edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n  plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n  x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n  x2: '<svg t=\"1660284061189\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"59188\" width=\"200\" height=\"200\"><path d=\"M755.626667 695.04c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333L512 572.16 328.96 755.2c-8.533333 8.533333-19.2 12.373333-30.293333 12.373333s-21.76-4.266667-30.293334-12.373333c-16.64-16.64-16.64-43.52 0-60.16l183.04-183.04-183.04-183.04C251.733333 312.32 251.733333 285.44 268.373333 268.8c16.64-16.64 43.52-16.64 60.16 0l183.04 183.04L694.613333 268.8c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l183.466667 183.04z\" p-id=\"59189\"></path></svg>',\n  expand:\n    '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n  move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n  remove:\n    '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n  delete_row:\n    '<svg t=\"1659516333894\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12036\" width=\"200\" height=\"200\"><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.106667-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.586667l-90.453333 90.453333c-8.106667 8.106667-19.2 12.373333-30.293334 12.373333-11.093333 0-21.76-4.266667-30.293333-12.373333-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.88c-16.64-16.64-16.64-43.52 0-60.586667 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.586667L572.16 512l90.88 90.453333zM896 170.666667c0 23.466667-19.2 42.666667-42.666667 42.666666H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666667zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"12037\"></path></svg>',\n  delete_col:\n    '<svg t=\"1659516365239\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12171\" width=\"200\" height=\"200\"><path d=\"M421.546667 663.04c-16.64 16.64-43.52 16.64-60.16 0-8.106667-8.533333-12.373333-19.2-12.373334-30.293333 0-11.093333 4.266667-21.76 12.373334-30.293334l90.453333-90.453333-90.88-90.453333c-8.106667-8.106667-12.373333-19.2-12.373333-30.293334 0-11.093333 4.266667-21.76 12.373333-30.293333 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.586666 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l90.453333 90.453333c16.64 16.64 16.64 43.52 0 60.16-16.64 16.64-43.52 16.64-60.586666 0L512 572.16l-90.453333 90.88zM853.333333 896c-23.466667 0-42.666667-19.2-42.666666-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666667 42.666667zM128 853.333333V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666666 42.666667s-42.666667-19.2-42.666667-42.666667z\" p-id=\"12172\"></path></svg>',\n  check:\n    '<svg t=\"1661393057943\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"13190\" width=\"200\" height=\"200\"><path d=\"M426.666667 746.666667c-11.093333 0-21.76-4.266667-30.293334-12.373334l-213.333333-213.333333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l183.04 183.04L779.946667 290.133333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-384 384c-7.68 8.106667-18.346667 12.373333-29.44 12.373334z\" p-id=\"13191\"></path></svg>',\n};\n\nexport default svgIconList;\n","import { createElementFromHtmlString, setStyles } from '../../../lib/dom';\nimport svgIconList from './svgIconList';\n\n// const svgIconList = {\n//   edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n//   plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n//   x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n//   expand:\n//     '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n//   move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n//   remove:\n//     '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n// };\n\nexport class Icon {\n  public element: HTMLElement;\n  constructor(\n    parentElement: HTMLElement | null,\n    options: {\n      name: string;\n      size?: number;\n      color?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    },\n  ) {\n    const targetIcon = svgIconList[options.name];\n    if (targetIcon) {\n      this.element = createElementFromHtmlString(svgIconList[options.name]);\n      const size = options.size ? options.size : 16;\n      const color = options.color ? options.color : '#333333';\n      const styleObj: Partial<CSSStyleDeclaration> = {\n        width: size + 'px',\n        height: size + 'px',\n      };\n      if (options.color) {\n        styleObj.fill = color;\n        styleObj.color = color;\n      }\n      setStyles(this.element, styleObj);\n      if (options.style) {\n        setStyles(this.element, options.style);\n      }\n      if (options.className) this.element.setAttribute('class', options.className);\n      this.element.classList.add('tfgraph-icon');\n      parentElement.appendChild(this.element);\n    }\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { TooltipOptoins } from '../../../index';\n\n/**\n * table-flow-graph popup\n */\nexport default class Tooltip {\n  targetElement: HTMLElement;\n  options: TooltipOptoins;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public dismissTimeoutId: number | null;\n  public showTimeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: TooltipOptoins) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n    this.targetElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.addEventListener('mouseleave', () => this.mouseLeave());\n  }\n\n  public render() {\n    const { placement = 'top', label } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-tooltip tfgraph-wrapper', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-tooltip-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-tooltip-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-tooltip-arrow', this.areaElement);\n    if (label) this.boxElement.innerHTML = label;\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    document.addEventListener('scroll', () => this.updatePosition());\n    this.rendered = true;\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n  }\n\n  public updatePosition() {\n    const targetRect = this.targetElement.getBoundingClientRect();\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.targetElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    document.removeEventListener('scroll', () => this.updatePosition());\n    if (this.element) removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered && !this.showTimeoutId) {\n      this.showTimeoutId = window.setTimeout(() => {\n        this.render();\n      }, 500);\n    }\n    if (this.dismissTimeoutId) {\n      window.clearTimeout(this.dismissTimeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n    this.dismissTimeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 50);\n  }\n}\n","import { createClassElement } from '../../../lib/dom';\nimport { BtnOptions } from '../../../index';\nimport { Icon } from '../icon/Icon';\nimport Tooltip from '../tooltip/Tooltip';\n\n/**\n * table-flow-graph button\n */\nexport default class Button {\n  public element: HTMLElement;\n  public disabled: boolean;\n  public btnToolTip: Tooltip;\n\n  constructor(parentElement: HTMLElement, options: BtnOptions) {\n    const { label, type, onClick, icon, tooltip } = options;\n    let className = 'tfgraph-button is-hoverable';\n    if (options.className) className += ' ' + options.className;\n    className += ' ' + (type ? type : 'default');\n    this.element = createClassElement('button', className, parentElement);\n    if (icon) new Icon(this.element, { name: icon, size: 16, className: label ? 'mr-5' : '' });\n    if (label) {\n      createClassElement('span', '', this.element).innerHTML = label;\n    }\n    if (tooltip) this.btnToolTip = new Tooltip(this.element, { label: tooltip });\n\n    this.element.addEventListener('click', (e) => {\n      if (this.btnToolTip) this.btnToolTip.dismiss();\n      if (this.disabled) return;\n      if (typeof onClick === 'function') {\n        onClick(e);\n      }\n    });\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { createClassElement, setStyles } from '../../../lib/dom';\nimport { TogglerOptions, TogglerButton } from '../../../index';\n\n/**\n * table-flow-graph toggler btn group\n */\nexport default class Toggler {\n  public element: HTMLElement;\n  public indicatorEl: HTMLElement;\n  public btnContainerEl: HTMLElement;\n  public disabled: boolean;\n  public activeIndex: number;\n  public btnList: TogglerButton[] = [];\n\n  constructor(parentElement: HTMLElement, options: TogglerOptions) {\n    const { items, initialActiveIndex, onChange } = options;\n    this.element = createClassElement('div', 'tfgraph-toggler', parentElement);\n    this.indicatorEl = createClassElement('div', 'tfgraph-toggler-indicator', this.element);\n    this.btnContainerEl = createClassElement('div', 'flex flex-row items-center', this.element);\n    items.forEach((item, index) => {\n      const el = createClassElement('button', 'tfgraph-toggler-btn', this.btnContainerEl);\n      el.innerHTML = item.label;\n      this.btnList.push({ itemData: item, el, index });\n      el.addEventListener('click', () => {\n        this.setActive(index);\n        if (typeof onChange === 'function') onChange(item, index);\n      });\n    });\n    this.setActive(typeof initialActiveIndex === 'number' ? initialActiveIndex : 0);\n  }\n\n  setActive(index: number) {\n    if (this.activeIndex !== index) {\n      if (typeof this.activeIndex === 'number') {\n        this.btnList[this.activeIndex].el.classList.remove('active');\n      }\n      this.activeIndex = index;\n      this.btnList[index].el.classList.add('active');\n      this.setActiveIndicator();\n    }\n  }\n\n  setActiveIndicator() {\n    const containerRect = this.btnContainerEl.getBoundingClientRect();\n    const rect = this.btnList[this.activeIndex].el.getBoundingClientRect();\n    setStyles(this.indicatorEl, {\n      width: rect.width + 'px',\n      // this.activeIndex === 0 || this.activeIndex === this.btnList.length - 1\n      //   ? rect.width - 2 + 'px'\n      //   : rect.width + 4 + 'px',\n      left: rect.left - containerRect.left + 4 + 'px',\n      // this.activeIndex === 0\n      //   ? rect.left - containerRect.left + 4 + 'px'\n      //   : rect.left - containerRect.left - 2 + 'px',\n    });\n    // this.indicatorEl.style.width = rect.width + 2 + 'px';\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { createClassElement, removeElement } from '../../../lib/dom';\nimport { DialogOptions } from '../../../index';\nimport { Icon } from '../icon/Icon';\n\n/**\n * table-flow-graph dialog\n */\nexport default class Dialog {\n  targetElement: HTMLElement;\n  public element: HTMLElement;\n  public maskElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public titleBarElement: HTMLElement;\n  public closeBtnElement: HTMLElement;\n  public title: string;\n\n  constructor(options: DialogOptions) {\n    this.title = options.title;\n    this.targetElement = options.targetElement\n      ? options.targetElement\n      : document.getElementsByTagName('body')[0];\n    this.element = createClassElement('div', 'tfgraph-dialog tfgraph-wrapper', this.targetElement);\n    this.maskElement = createClassElement('div', 'tfgraph-dialog-mask', this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-dialog-box', this.element);\n    this.renderTitleBar();\n    this.boxElement.appendChild(options.contentElement);\n    this.targetElement.classList.add('overflow-hidden');\n    this.maskElement.addEventListener('click', () => this.close());\n  }\n\n  renderTitleBar() {\n    this.titleBarElement = createClassElement('div', 'tfgraph-dialog-bar', this.boxElement);\n    const titleEl = createClassElement('div', 'tfgraph-dialog-bar-title', this.titleBarElement);\n    titleEl.innerText = this.title;\n    this.closeBtnElement = createClassElement(\n      'div',\n      'tfgraph-dialog-bar-btn',\n      this.titleBarElement,\n    );\n    new Icon(this.closeBtnElement, { name: 'x2', size: 18 });\n    this.closeBtnElement.addEventListener('click', () => this.close());\n  }\n\n  public close() {\n    this.closeBtnElement.removeEventListener('click', () => this.close());\n    this.maskElement.removeEventListener('click', () => this.close());\n    removeElement(this.element);\n    this.targetElement.classList.remove('overflow-hidden');\n  }\n}\n","import { TableFlowGraph, TFGraphColumn } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Dialog from '../ui/dialog/Dialog';\nimport TableHeaderCell from './TableHeaderCell';\n\nexport default class EditColumnDialog {\n  public dialog: Dialog | null;\n  public targetHeaderCell: TableHeaderCell;\n  public title: string;\n  public graphInstance: TableFlowGraph;\n  public contentElement: HTMLElement;\n  public inputEl: HTMLInputElement;\n  public btnConfirm: Button;\n  public btnCancel: Button;\n  public isEdit: boolean;\n\n  constructor(graphInstance: TableFlowGraph, targetHeaderCell?: TableHeaderCell) {\n    this.graphInstance = graphInstance;\n    this.dialog = null;\n    this.targetHeaderCell = targetHeaderCell;\n    this.setIsEdit();\n    this.renderContent();\n  }\n\n  setIsEdit() {\n    if (this.targetHeaderCell) {\n      this.title = this.targetHeaderCell.columnData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    if (this.inputEl) this.inputEl.value = this.title;\n  }\n\n  renderContent() {\n    this.contentElement = createClassElement('div', 'flex flex-col w-420 px-15 pb-15');\n    this.inputEl = createClassElement('input', 'tfgraph-input', this.contentElement);\n    this.inputEl.setAttribute('placeholder', this.graphInstance.options.labels.enterColumnName);\n    const btnContainer = createClassElement(\n      'div',\n      'flex flex-row items-center justify-end mt-15',\n      this.contentElement,\n    );\n    this.btnCancel = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.cancel,\n      type: 'default',\n      className: 'mr-10',\n      onClick: () => {\n        this.dialog.close();\n      },\n    });\n    this.btnConfirm = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.confirm,\n      type: 'primary',\n      onClick: () => {\n        if (this.inputEl.value) {\n          if (this.title !== this.inputEl.value) {\n            if (this.isEdit) {\n              this.targetHeaderCell.columnData.title = this.inputEl.value;\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onEditColumn === 'function') {\n                this.graphInstance.options.onEditColumn(this.targetHeaderCell.columnData);\n              }\n            } else {\n              const colData: TFGraphColumn = {\n                id: `header_col_${this.graphInstance.options.totalColumns}`,\n                title: this.inputEl.value,\n              };\n              this.graphInstance.options.columns.push(colData);\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onAddColumn === 'function') {\n                this.graphInstance.options.onAddColumn(colData);\n              }\n            }\n          } else {\n            this.dialog.close();\n          }\n        }\n      },\n    });\n  }\n\n  public show() {\n    this.setIsEdit();\n    this.dialog = new Dialog({\n      title: this.isEdit\n        ? this.graphInstance.options.labels.editColumn\n        : this.graphInstance.options.labels.addColumn,\n      contentElement: this.contentElement,\n    });\n  }\n}\n","import { TableFlowGraph, HintType } from '../../index';\n\nexport default class HintManager {\n  public targetEl: HTMLElement;\n  public currentHintState: HintType;\n  public graphInstance: TableFlowGraph;\n\n  constructor(targetEl: HTMLElement, graphInstance: TableFlowGraph) {\n    this.targetEl = targetEl;\n    this.graphInstance = graphInstance;\n    this.currentHintState = 'idel';\n    this.targetEl.innerText = '';\n  }\n\n  setHint(hintState: HintType) {\n    this.currentHintState = hintState;\n    switch (this.currentHintState) {\n      case 'idel':\n        this.targetEl.innerText = '';\n        break;\n      case 'drawLine':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_drawLine;\n        break;\n      case 'hoverLine':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_hoverLine;\n        break;\n      case 'hoverAnchor':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_hoverAnchor;\n        break;\n      case 'moveNode':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_moveNode;\n        break;\n      case 'resizeNode':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_resizeNode;\n        break;\n      default:\n        this.targetEl.innerText = '';\n        break;\n    }\n  }\n}\n","import { TableFlowGraph, Mode } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Toggler from '../ui/toggler/Toggler';\nimport EditColumnDialog from '../table/EditColumnDialog';\nimport HintManager from './HintManager';\n// import { Icon } from './ui/Icon';\n\n/**\n * table-flow-graph toolbar\n */\nexport default class Toolbar {\n  public element: HTMLElement;\n  public graphInstance: TableFlowGraph;\n  public disabledMask: HTMLElement;\n  public modeToggler: Toggler;\n  public hintEl: HTMLElement;\n  public hintMgr: HintManager;\n  public newColumnBtn: Button;\n  public addColDialog: EditColumnDialog;\n\n  constructor(parentElement: HTMLElement, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-toolbar', parentElement);\n    this.modeToggler = new Toggler(this.element, {\n      items: [\n        { label: this.graphInstance.options.labels.editMode, id: 'edit' },\n        { label: this.graphInstance.options.labels.previewMode, id: 'preview' },\n      ],\n      onChange: (item) => {\n        graphInstance.changeMode(item.id as Mode);\n        this.setToolbarState();\n      },\n    });\n    this.hintEl = createClassElement('div', 'tfgraph-toolbar-hint', this.element);\n    this.hintMgr = new HintManager(this.hintEl, this.graphInstance);\n    // new Icon(this.element, {\n    //   name: 'plus',\n    //   style: { width: '16px', height: '16px' },\n    // });\n    const rightBtns = createClassElement('div', 'flex-row items-center', this.element);\n    this.newColumnBtn = new Button(rightBtns, {\n      icon: 'plus',\n      label: this.graphInstance.options.labels.addColumn,\n      type: 'primary',\n      onClick: () => this.addColumn(),\n    });\n\n    this.disabledMask = createClassElement('div', 'tfgraph-toolbar-mask hidden', this.element);\n    // new Button(rightBtns, { label: '添加行', type: 'primary' });\n\n    // new Button(this.element, { label: 'default' });\n    // new Button(this.element, {\n    //   label: 'clean',\n    //   type: 'clean',\n    //   onClick: () => {\n    //     console.log('clean clicked');\n    //   },\n    // });\n    // new Button(this.element, { label: 'primary', type: 'primary' });\n    // new Button(this.element, { label: 'warning', type: 'warning' });\n    // new Button(this.element, { label: 'danger', type: 'danger' });\n    // new Button(this.element, { label: 'success', type: 'success' });\n    // testBtn.setDisabled();\n    this.setToolbarState();\n    this.addColDialog = new EditColumnDialog(this.graphInstance);\n  }\n\n  addColumn() {\n    if (typeof this.graphInstance.options.addColumn === 'function') {\n      this.graphInstance.options.addColumn();\n    } else {\n      if (this.graphInstance.hasTableHeader) {\n        // add column dialog\n        this.addColDialog.show();\n      } else {\n        this.graphInstance.refresh(\n          Object.assign({}, this.graphInstance.options, {\n            columns: null,\n            totalColumns: this.graphInstance.options.totalColumns + 1,\n          }),\n        );\n        if (typeof this.graphInstance.options.onAddColumn === 'function') {\n          this.graphInstance.options.onAddColumn();\n        }\n      }\n    }\n  }\n\n  disable() {\n    this.disabledMask.classList.remove('hidden');\n  }\n\n  enable() {\n    this.disabledMask.classList.add('hidden');\n  }\n\n  setToolbarState() {\n    if (\n      this.graphInstance.options.totalColumns >= this.graphInstance.options.maxColumns ||\n      this.graphInstance.mode === 'preview'\n    ) {\n      this.newColumnBtn.element.classList.add('hidden');\n    } else {\n      this.newColumnBtn.element.classList.remove('hidden');\n    }\n  }\n}\n","import { TableFlowGraph, TFGraphNode } from '../../../index';\nimport { createClassElement } from '../../../lib/dom';\nimport Button from '../../ui/button/Button';\nimport Dialog from '../../ui/dialog/Dialog';\nimport TableCell from '../TableCell';\n\nexport default class EditNodeDialog {\n  public dialog: Dialog | null;\n  public targetCell: TableCell;\n  public title: string;\n  public graphInstance: TableFlowGraph;\n  public contentElement: HTMLElement;\n  public nodeNameInput: HTMLInputElement;\n  public btnConfirm: Button;\n  public btnCancel: Button;\n  public isEdit: boolean;\n\n  constructor(graphInstance: TableFlowGraph, targetCell: TableCell) {\n    this.graphInstance = graphInstance;\n    this.targetCell = targetCell;\n    this.dialog = null;\n    if (targetCell.nodeData) {\n      this.title = targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    this.renderContent();\n  }\n\n  setIsEdit() {\n    if (this.targetCell.nodeData) {\n      this.title = this.targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    if (this.nodeNameInput) this.nodeNameInput.value = this.title;\n  }\n\n  renderContent() {\n    this.contentElement = createClassElement('div', 'flex flex-col w-420 px-15 pb-15');\n    this.nodeNameInput = createClassElement('input', 'tfgraph-input', this.contentElement);\n    this.nodeNameInput.setAttribute('placeholder', this.graphInstance.options.labels.enterNodeName);\n    const btnContainer = createClassElement(\n      'div',\n      'flex flex-row items-center justify-end mt-15',\n      this.contentElement,\n    );\n    this.btnCancel = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.cancel,\n      type: 'default',\n      className: 'mr-10',\n      onClick: () => {\n        this.dialog.close();\n      },\n    });\n    this.btnConfirm = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.confirm,\n      type: 'primary',\n      onClick: () => {\n        if (this.nodeNameInput.value) {\n          if (this.title !== this.nodeNameInput.value) {\n            if (this.isEdit) {\n              this.targetCell.nodeData.title = this.nodeNameInput.value;\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onEditNode === 'function') {\n                this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n              }\n            } else {\n              const nodeData: TFGraphNode = {\n                id: `node_${this.targetCell.row}_${this.targetCell.column}`,\n                row: this.targetCell.row,\n                column: this.targetCell.column,\n                rowSpan: 1,\n                colSpan: 1,\n                title: this.nodeNameInput.value,\n              };\n              this.graphInstance.options.nodes.push(nodeData);\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onAddNode === 'function') {\n                this.graphInstance.options.onAddNode(nodeData);\n              }\n            }\n          } else {\n            this.dialog.close();\n          }\n        }\n      },\n    });\n  }\n\n  public show() {\n    this.setIsEdit();\n    this.dialog = new Dialog({\n      title: this.isEdit\n        ? this.graphInstance.options.labels.editNode\n        : this.graphInstance.options.labels.addNode,\n      contentElement: this.contentElement,\n    });\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { PopupOptions } from '../../../index';\n\n/**\n * table-flow-graph popup\n */\nexport default class Popup {\n  targetElement: HTMLElement;\n  options: PopupOptions;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public timeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: PopupOptions) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n    this.targetElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.addEventListener('mouseleave', () => this.mouseLeave());\n  }\n\n  public render() {\n    const { placement = 'top', contentElement } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-popup tfgraph-wrapper', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-popup-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-popup-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-popup-arrow', this.areaElement);\n    if (contentElement) this.boxElement.appendChild(contentElement);\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 10 + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 10 + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    this.areaElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.addEventListener('mouseleave', () => this.mouseLeave());\n    document.addEventListener('scroll', () => this.updatePosition());\n    this.rendered = true;\n  }\n\n  public updatePosition() {\n    const targetRect = this.targetElement.getBoundingClientRect();\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.areaElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    document.removeEventListener('scroll', () => this.updatePosition());\n    removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered) this.render();\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    this.timeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 200);\n  }\n}\n","import { NodeStyleType, NodeType } from '../../..';\nimport { ColorPlate, FunctionalColors } from '../../../lib/utils';\n\nexport const NodeTypeList: NodeType[] = [\n  'danger',\n  'primary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n\nexport const NodeStyle: NodeStyleType = {\n  default: {\n    type: 'default',\n    normalStyle: {\n      borderColor: '#dcdcdc',\n      backgroundColor: '#f3f4f7',\n      color: '#333333',\n    },\n    hoverStyle: {\n      borderColor: '#cccccc',\n      backgroundColor: '#f1f2f4',\n      color: '#333333',\n    },\n  },\n  primary: {\n    type: 'primary',\n    normalStyle: {\n      borderColor: FunctionalColors.primary,\n      backgroundColor: FunctionalColors.primary + '10',\n      color: FunctionalColors.primary,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.primary,\n      backgroundColor: FunctionalColors.primary,\n      color: ColorPlate.white,\n    },\n  },\n  success: {\n    type: 'success',\n    normalStyle: {\n      borderColor: FunctionalColors.success,\n      backgroundColor: FunctionalColors.success + '10',\n      color: FunctionalColors.success,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.success,\n      backgroundColor: FunctionalColors.success,\n      color: ColorPlate.white,\n    },\n  },\n  info: {\n    type: 'info',\n    normalStyle: {\n      borderColor: FunctionalColors.info,\n      backgroundColor: FunctionalColors.info + '10',\n      color: '#333333',\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.info,\n      backgroundColor: FunctionalColors.info,\n      color: ColorPlate.white,\n    },\n  },\n  warning: {\n    type: 'warning',\n    normalStyle: {\n      borderColor: FunctionalColors.warning,\n      backgroundColor: FunctionalColors.warning + '10',\n      color: FunctionalColors.warning,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.warning,\n      backgroundColor: FunctionalColors.warning,\n      color: ColorPlate.white,\n    },\n  },\n  danger: {\n    type: 'danger',\n    normalStyle: {\n      borderColor: FunctionalColors.danger,\n      backgroundColor: FunctionalColors.danger + '10',\n      color: FunctionalColors.danger,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.danger,\n      backgroundColor: FunctionalColors.danger,\n      color: ColorPlate.white,\n    },\n  },\n};\n","import { NodeType, TableFlowGraph } from '../../../index';\nimport { createClassElement, setStyles } from '../../../lib/dom';\nimport Popup from '../../ui/popup/Popup';\nimport TableCell from '../TableCell';\nimport { NodeStyle } from './nodeUtils';\n\n/**\n * table-flow-graph node\n */\nexport default class Node {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public tableCell: TableCell;\n  public type: NodeType;\n  private hoverd: boolean;\n\n  constructor(cell: TableCell) {\n    this.tableCell = cell;\n    this.graphInstance = this.tableCell.graphInstance;\n    this.hoverd = false;\n    this.createNode();\n  }\n\n  createNode() {\n    this.element = createClassElement('div', 'tfgraph-node', this.tableCell.element);\n    const data = this.tableCell.nodeData;\n    this.type = data.type ? data.type : 'default';\n    setStyles(this.element, NodeStyle[this.type].normalStyle);\n    // this.element.classList.add(data.type ? data.type : 'default');\n    if (data.isBtn && this.graphInstance.mode !== 'edit') this.element.classList.add('isBtn');\n    if (typeof this.graphInstance.options.renderNode === 'function') {\n      this.element.appendChild(this.graphInstance.options.renderNode(data));\n    } else {\n      this.element.innerText = data.title;\n    }\n  }\n\n  toggleHovered(hovered: boolean) {\n    this.hoverd = hovered;\n    this.element.setAttribute('style', '');\n    if (this.hoverd) {\n      setStyles(this.element, NodeStyle[this.type].hoverStyle);\n    } else {\n      setStyles(this.element, NodeStyle[this.type].normalStyle);\n    }\n  }\n\n  public setViewerControls() {\n    this.element.addEventListener('click', () => this.onClickNode());\n    this.element.addEventListener('mouseenter', () => this.toggleHovered(true));\n    this.element.addEventListener('mouseleave', () => this.toggleHovered(false));\n    if (this.tableCell.nodeData.showPopup) {\n      let contentEl: HTMLElement;\n      if (typeof this.graphInstance.options.renderNodeHoverPopup === 'function') {\n        contentEl = this.graphInstance.options.renderNodeHoverPopup(this.tableCell.nodeData);\n      } else {\n        contentEl = createClassElement('div', 'flex flex-col items-center p-30');\n        contentEl.innerHTML = this.tableCell.nodeData.title;\n      }\n\n      new Popup(this.element, {\n        placement: 'top',\n        contentElement: contentEl,\n      });\n    }\n  }\n\n  onClickNode() {\n    if (typeof this.graphInstance.options.onClickNode === 'function') {\n      this.graphInstance.options.onClickNode(this.tableCell.nodeData, this.element);\n    }\n  }\n}\n","import { TableFlowGraph, TFGraphNode } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport EditNodeDialog from './node/EditNodeDialog';\nimport { remove } from 'lodash-es';\nimport Node from './node/Node';\n\n/**\n * table-flow-graph tabel cell\n */\nexport default class TableCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public controlLayer: HTMLElement;\n  public node: Node;\n  public nodeData?: TFGraphNode;\n  public hasNode: boolean;\n  public row: number;\n  public column: number;\n  public rowSpan: number;\n  public colSpan: number;\n  public isTarget: boolean; // is moving or resizing this cell\n  public deleteRowBtn: Button;\n  public deleteColBtn: Button;\n  public editDialog: EditNodeDialog | null;\n\n  constructor(\n    parentElement: HTMLElement,\n    data: TFGraphNode | null,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.row = row;\n    this.column = column;\n    this.createTabelCell(data, row, column, parentElement);\n  }\n\n  createTabelCell(data: TFGraphNode | null, row, column, parentElement) {\n    this.element = createClassElement('div', 'tfgraph-cell', parentElement);\n    this.element.setAttribute('id', `${this.graphInstance.id}_cell_${row}_${column}`);\n    if (data) {\n      this.hasNode = true;\n      this.nodeData = data;\n      this.rowSpan = data.rowSpan;\n      this.colSpan = data.colSpan;\n      this.node = new Node(this);\n    } else {\n      this.rowSpan = 1;\n      this.colSpan = 1;\n      this.hasNode = false;\n    }\n    // set min height base on row span\n    this.element.style.minHeight = 80 * this.rowSpan + 'px';\n  }\n\n  // cell controls for edit mode\n  setEditorControls() {\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    this.editDialog = new EditNodeDialog(this.graphInstance, this);\n    if (this.nodeData) {\n      // Move node button\n      new Button(this.controlLayer, {\n        icon: 'move',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.moveNode,\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        onClick: () => {\n          this.graphInstance.tableController.startMoving(this);\n        },\n      });\n      // Edit node button\n      new Button(this.controlLayer, {\n        icon: 'edit',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.editNode,\n        className: 'absolute left-6 bottom-6 p-0 sm w-28 btn-bl',\n        onClick: () => {\n          if (typeof this.graphInstance.options.editNode === 'function') {\n            this.graphInstance.options.editNode(this.nodeData);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      // Delete node button\n      new Button(this.controlLayer, {\n        icon: 'x',\n        type: 'danger',\n        tooltip: this.graphInstance.options.labels.deleteNode,\n        className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n        onClick: () => {\n          if (typeof this.graphInstance.options.deleteNode === 'function') {\n            this.graphInstance.options.deleteNode(this.nodeData);\n          } else {\n            // TODO remove cell\n            remove(this.graphInstance.options.nodes, (item) => {\n              return this.nodeData.id === item.id;\n            });\n            this.graphInstance.refresh();\n            if (typeof this.graphInstance.options.onDeleteNode === 'function') {\n              this.graphInstance.options.onDeleteNode(this.nodeData);\n            }\n          }\n        },\n      });\n      // Resize node button\n      new Button(this.controlLayer, {\n        icon: 'expand',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.adjustNodeSize,\n        className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n        onClick: () => {\n          this.graphInstance.tableController.startResizing(this);\n        },\n      });\n    } else {\n      // Add node button\n      new Button(this.controlLayer, {\n        icon: 'plus',\n        type: 'primary',\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        tooltip: this.graphInstance.options.labels.addNode,\n        onClick: () => {\n          if (typeof this.graphInstance.options.addNode === 'function') {\n            this.graphInstance.options.addNode(this.row, this.column);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      if (\n        this.graphInstance.options.totalRows > 1 &&\n        this.row === this.graphInstance.options.totalRows - 1\n      ) {\n        // Delete row button\n        this.deleteRowBtn = new Button(this.controlLayer, {\n          icon: 'delete_row',\n          type: 'danger',\n          className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n          tooltip: this.graphInstance.options.labels.deleteRow,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteRow === 'function') {\n              this.graphInstance.options.deleteRow();\n            } else {\n              this.graphInstance.refresh(\n                Object.assign({}, this.graphInstance.options, {\n                  totalRows: this.graphInstance.options.totalRows - 1,\n                }),\n              );\n              if (typeof this.graphInstance.options.onDeleteRow === 'function') {\n                this.graphInstance.options.onDeleteRow();\n              }\n            }\n          },\n        });\n      }\n      if (\n        this.graphInstance.options.totalColumns > 1 &&\n        this.column === this.graphInstance.options.totalColumns - 1\n      ) {\n        // Delete column button\n        this.deleteColBtn = new Button(this.controlLayer, {\n          icon: 'delete_col',\n          type: 'danger',\n          className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n          tooltip: this.graphInstance.options.labels.deleteColumn,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteColumn === 'function') {\n              // custom delete column method\n              const targetColumn =\n                this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n              this.graphInstance.options.deleteColumn(targetColumn);\n            } else {\n              // auto delete column\n              if (this.graphInstance.hasTableHeader) {\n                // if has options.columns data (table header will be rendered)\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  const targetColumn =\n                    this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n                  this.graphInstance.options.onDeleteColumn(targetColumn);\n                }\n                this.graphInstance.options.columns.pop();\n                this.graphInstance.refresh(Object.assign({}, this.graphInstance.options));\n              } else {\n                // if options.columns data is null or empty\n                this.graphInstance.refresh(\n                  Object.assign({}, this.graphInstance.options, {\n                    columns: null,\n                    totalColumns: this.graphInstance.options.totalColumns - 1,\n                  }),\n                );\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  this.graphInstance.options.onDeleteColumn();\n                }\n              }\n            }\n          },\n        });\n      }\n    }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  public setViewerControls() {\n    if (this.nodeData) {\n      this.node.setViewerControls();\n    }\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n    if (this.deleteRowBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteRow &&\n        this.graphInstance.lineController.canDeleteRow\n      ) {\n        this.deleteRowBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteRowBtn.element.classList.add('hidden');\n      }\n    }\n    if (this.deleteColBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteColumn &&\n        this.graphInstance.lineController.canDeleteColumn\n      ) {\n        this.deleteColBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteColBtn.element.classList.add('hidden');\n      }\n    }\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n\n  public setIsTarget(isTarget: boolean) {\n    if (isTarget && !this.isTarget) {\n      this.isTarget = true;\n      this.element.style.opacity = '0.4';\n    } else if (!isTarget && this.isTarget) {\n      this.isTarget = false;\n      this.element.style.opacity = '1';\n    }\n  }\n}\n","import { TableFlowGraph, TFGraphColumn } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Popup from '../ui/popup/Popup';\n// import TableHeaderCellMenu from './TableHeaderCellMenu';\nimport EditColumnDialog from './EditColumnDialog';\n\n/**\n * table-flow-graph tabel header cell\n */\nexport default class TableHeaderCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public columnIndex: number;\n  public isLast: boolean;\n  public columnData: TFGraphColumn;\n  public canDelete: boolean;\n  public canAdd: boolean;\n  public popMenu: Popup | null;\n  // public menu: TableHeaderCellMenu | null;\n  public controlLayer: HTMLElement;\n  public editColDialog: EditColumnDialog;\n\n  constructor(\n    parentElement: HTMLElement,\n    columnData: TFGraphColumn,\n    columnIndex: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.columnIndex = columnIndex;\n    this.columnData = columnData;\n    this.isLast = this.columnIndex === this.graphInstance.options.totalColumns - 1;\n    this.element = this.createElement(parentElement);\n  }\n\n  createElement(parentElement: HTMLElement): HTMLElement {\n    const el = createClassElement('th', 'tfgraph-th', parentElement);\n    if (this.columnData.title) {\n      el.innerHTML = this.columnData.title;\n    } else {\n      el.classList.add('empty');\n    }\n    if (this.columnData.width) {\n      // TODO load width value from options\n      let width = this.columnData.width;\n      switch (this.columnData.width) {\n        case 'lg':\n          width = '200';\n          break;\n        case 'md':\n          width = '170';\n          break;\n        case 'sm':\n          width = '130';\n          break;\n        case 'xs':\n          width = '105';\n          break;\n        default:\n          width = this.columnData.width;\n          break;\n      }\n      el.setAttribute('width', width);\n    } else {\n      el.setAttribute('width', 'auto');\n    }\n    el.setAttribute('id', `${this.graphInstance.id}_col_${this.columnIndex}`);\n    return el;\n  }\n\n  // header cell controls for edit mode\n  public setEditControls() {\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    this.editColDialog = new EditColumnDialog(this.graphInstance, this);\n    new Button(this.controlLayer, {\n      icon: 'edit',\n      type: 'primary',\n      className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n      tooltip: this.graphInstance.options.labels.editColumn,\n      onClick: () => {\n        if (typeof this.graphInstance.options.editColumn === 'function') {\n          this.graphInstance.options.editColumn(this.columnData);\n        } else {\n          this.editColDialog.show();\n        }\n      },\n    });\n    if (this.isLast && this.graphInstance.tableController.canDeleteColumn) {\n      new Button(this.controlLayer, {\n        icon: 'delete_col',\n        type: 'danger',\n        className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n        tooltip: this.graphInstance.options.labels.deleteColumn,\n        onClick: () => {\n          if (typeof this.graphInstance.options.deleteColumn === 'function') {\n            // custom delete column method\n            this.graphInstance.options.deleteColumn(this.columnData);\n          } else {\n            if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n              // const targetColumn = this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n              this.graphInstance.options.onDeleteColumn(this.columnData);\n            }\n            this.graphInstance.options.columns.pop();\n            this.graphInstance.refresh(Object.assign({}, this.graphInstance.options));\n          }\n        },\n      });\n    }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n}\n","import { TableFlowGraph, PositionAndSize } from '../../index';\nimport { createClassElement, setStyles } from '../../lib/dom';\nimport TableCell from './TableCell';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMaskBox {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public disabled: boolean;\n\n  constructor(parentEl: HTMLElement, targetCell: TableCell, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.disabled = false;\n    this.element = createClassElement('div', 'tfgraph-table-mask-cell', parentEl);\n    const nodeEl = createClassElement('div', 'tfgraph-table-mask-node', this.element);\n    nodeEl.innerText = targetCell.nodeData.title;\n    // setStyles(this.element, {\n    //   top: top + 'px',\n    //   left: left + 'px',\n    //   width: width + 'px',\n    //   height: height + 'px',\n    // });\n    this.element.addEventListener('click', () => {\n      if (!this.disabled) this.graphInstance.tableController.submitCellChange();\n    });\n  }\n\n  setPositinAndSize(pos_size: PositionAndSize) {\n    setStyles(this.element, {\n      top: pos_size.top + 'px',\n      left: pos_size.left + 'px',\n      width: pos_size.width + 'px',\n      height: pos_size.height + 'px',\n    });\n  }\n\n  disable() {\n    // TODO\n    if (!this.disabled) {\n      this.disabled = true;\n      this.element.classList.add('disabled');\n    }\n  }\n\n  enable() {\n    // TODO\n    if (this.disabled) {\n      this.disabled = false;\n      this.element.classList.remove('disabled');\n    }\n  }\n}\n","import { TableFlowGraph, CellPositionAndSize, TableGridRect } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport TableCell from './TableCell';\nimport TableMaskBox from './TableMaskBox';\nimport { isEqual, cloneDeep } from 'lodash-es';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMask {\n  graphInstance: TableFlowGraph;\n  public maskBox: TableMaskBox;\n  public element: HTMLElement;\n  public tableGridRectList: TableGridRect[];\n  public mouseGridRect: TableGridRect;\n  public targetCell: TableCell;\n  public targetCellRect: TableGridRect;\n  public resultCellPositionAndSize: CellPositionAndSize;\n  public filteredOccupiedList: number[][]; // 1: occupied, 0: not occupied\n\n  constructor(tableGridRectList: TableGridRect[], graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement(\n      'div',\n      'tfgraph-cell-mask-layer hidden',\n      graphInstance.element,\n    );\n    this.tableGridRectList = tableGridRectList;\n  }\n\n  private showMask(targetTableCell: TableCell) {\n    this.targetCell = targetTableCell;\n    this.targetCell.setIsTarget(true);\n    this.setFilteredOccupiedList();\n    this.maskBox = new TableMaskBox(this.element, this.targetCell, this.graphInstance);\n    this.mouseGridRect = this.getMouseRect();\n    this.targetCellRect = this.getRectByRowAndColumn(this.targetCell.row, this.targetCell.column);\n    this.setMaskBoxStatus();\n  }\n\n  // occupied list without target tabel cell\n  private setFilteredOccupiedList() {\n    this.filteredOccupiedList = cloneDeep(this.graphInstance.tableController.occupiedList);\n    for (let i = this.targetCell.row; i < this.targetCell.row + this.targetCell.rowSpan; i++) {\n      for (\n        let j = this.targetCell.column;\n        j < this.targetCell.column + this.targetCell.colSpan;\n        j++\n      ) {\n        this.filteredOccupiedList[i][j] = 0;\n      }\n    }\n  }\n\n  // set maskbox position/size/disabled etc.\n  private setMaskBoxStatus() {\n    if (this.graphInstance.tableController.isMovingCell) {\n      this.resultCellPositionAndSize = {\n        row:\n          this.mouseGridRect.rowIndex + this.targetCell.rowSpan >\n          this.graphInstance.options.totalRows\n            ? this.graphInstance.options.totalRows - this.targetCell.rowSpan\n            : this.mouseGridRect.rowIndex,\n        column:\n          this.mouseGridRect.columnIndex + this.targetCell.colSpan >\n          this.graphInstance.options.totalColumns\n            ? this.graphInstance.options.totalColumns - this.targetCell.colSpan\n            : this.mouseGridRect.columnIndex,\n        rowSpan: this.targetCell.rowSpan,\n        colSpan: this.targetCell.colSpan,\n      };\n      this.maskBox.element.classList.add('moving');\n    } else {\n      this.resultCellPositionAndSize = {\n        row: Math.min(this.targetCellRect.rowIndex, this.mouseGridRect.rowIndex),\n        column: Math.min(this.targetCellRect.columnIndex, this.mouseGridRect.columnIndex),\n        rowSpan: Math.abs(this.targetCellRect.rowIndex - this.mouseGridRect.rowIndex) + 1,\n        colSpan: Math.abs(this.targetCellRect.columnIndex - this.mouseGridRect.columnIndex) + 1,\n      };\n      this.maskBox.element.classList.add('resizing');\n    }\n    const topLeftRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row,\n      this.resultCellPositionAndSize.column,\n    );\n    const bottomRightRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan - 1,\n      this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan - 1,\n    );\n    if (bottomRightRect && topLeftRect) {\n      this.maskBox.setPositinAndSize({\n        left: topLeftRect.left,\n        top: topLeftRect.top,\n        width: bottomRightRect.left - topLeftRect.left + bottomRightRect.width + 1,\n        height: bottomRightRect.top - topLeftRect.top + bottomRightRect.height + 1,\n      });\n    }\n\n    // set maskbox disable/enable\n    let doable = true;\n    for (\n      let i = this.resultCellPositionAndSize.row;\n      i <\n      Math.min(\n        this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan,\n        this.graphInstance.options.totalRows,\n      );\n      i++\n    ) {\n      for (\n        let j = this.resultCellPositionAndSize.column;\n        j <\n        Math.min(\n          this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan,\n          this.graphInstance.options.totalColumns,\n        );\n        j++\n      ) {\n        if (!this.filteredOccupiedList[i] || this.filteredOccupiedList[i][j] > 0) {\n          doable = false;\n        }\n      }\n    }\n    if (doable) {\n      this.maskBox.enable();\n    } else {\n      this.maskBox.disable();\n    }\n  }\n\n  public startMask(targetTableCell: TableCell) {\n    this.element.classList.remove('hidden');\n    this.showMask(targetTableCell);\n  }\n\n  public stopMask() {\n    this.element.classList.add('hidden');\n    removeElement(this.maskBox.element);\n    this.targetCell.setIsTarget(false);\n    this.maskBox = null;\n  }\n\n  public submitChange() {\n    this.stopMask();\n    const targetCellPositionAndSize: CellPositionAndSize = {\n      row: this.targetCell.row,\n      column: this.targetCell.column,\n      rowSpan: this.targetCell.rowSpan,\n      colSpan: this.targetCell.colSpan,\n    };\n    if (!isEqual(this.resultCellPositionAndSize, targetCellPositionAndSize)) {\n      // const oldNode = cloneDeep(this.targetCell.nodeData);\n      this.targetCell.nodeData.row = this.resultCellPositionAndSize.row;\n      this.targetCell.nodeData.column = this.resultCellPositionAndSize.column;\n      this.targetCell.nodeData.rowSpan = this.resultCellPositionAndSize.rowSpan;\n      this.targetCell.nodeData.colSpan = this.resultCellPositionAndSize.colSpan;\n      // 提交变更\n      if (typeof this.graphInstance.options.onEditNode === 'function') {\n        this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n      }\n      this.graphInstance.refresh();\n    }\n  }\n\n  // get tableGridRect of current mouse position at\n  private getMouseRect() {\n    const mouseX = this.graphInstance.mousePosition.x;\n    const mouseY = this.graphInstance.mousePosition.y;\n    let targetGridRect: TableGridRect;\n    this.tableGridRectList.forEach((gridRect) => {\n      if (\n        mouseY > gridRect.top &&\n        mouseY < gridRect.top + gridRect.height &&\n        mouseX > gridRect.left &&\n        mouseX < gridRect.left + gridRect.width\n      ) {\n        targetGridRect = gridRect;\n      }\n    });\n    return targetGridRect;\n  }\n\n  private getRectByRowAndColumn(row, column) {\n    // const targetCellRow = this.targetCell.row;\n    // const targetCellColumn = this.targetCell.column;\n    return this.tableGridRectList.find((gridRect) => {\n      return gridRect.rowIndex === row && gridRect.columnIndex === column;\n    });\n  }\n\n  public onMouseMove() {\n    const newRect = this.getMouseRect();\n    if (!isEqual(newRect, this.mouseGridRect)) {\n      if (newRect) {\n        this.mouseGridRect = newRect;\n        this.setMaskBoxStatus();\n      }\n    }\n  }\n}\n","import { TableFlowGraph, ColumnSpec, RowSpec, TableGridRect } from '../../index';\nimport { createClassElement, removeElement, setStyles } from '../../lib/dom';\nimport TableCell from './TableCell';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableMask from './TableMask';\nimport Button from '../ui/button/Button';\nimport { setColumnAndRowDeletable } from '../../lib/utils';\n\n/**\n * table-flow-graph tabel\n */\nexport default class Table {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public bottomControlEL: HTMLElement | null;\n  public cells: TableCell[];\n  public headerCells: TableHeaderCell[];\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n  public occupiedList: number[][]; // 1: occupied, 0: not occupied\n  public tableMask: TableMask;\n  public isMovingCell: boolean;\n  public isResizingCell: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('table', 'tfgraph-table', this.graphInstance.element);\n    this.initTableStatus();\n  }\n\n  private initTableStatus() {\n    this.headerCells = [];\n    this.cells = [];\n    this.canDeleteColumn = false;\n    this.canDeleteRow = false;\n    this.occupiedList = [];\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n  }\n\n  // render table and set table controls\n  public renderTable() {\n    this.initTableStatus();\n    this.element.innerHTML = '';\n    this.createHeader();\n    this.createTds();\n    this.createCells();\n    this.setControls();\n  }\n\n  public setControls() {\n    const isEditMode = this.graphInstance.mode === 'edit';\n    if (isEditMode) {\n      const deleteableObj = setColumnAndRowDeletable(\n        this.occupiedList,\n        this.graphInstance.options.totalRows,\n        this.graphInstance.options.totalColumns,\n      );\n      this.canDeleteColumn = deleteableObj.canDeleteColumn;\n      this.canDeleteRow = deleteableObj.canDeleteRow;\n\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setEditorControls();\n      });\n\n      // wait for table render ready\n      setTimeout(() => {\n        const columnSpecs: ColumnSpec[] = []; // [{left, width, columnIndex}]\n        const rowSpecs: RowSpec[] = []; // [{ top, height, rowIndex}]\n\n        this.headerCells.forEach((headerCell) => {\n          // set headerCell controls\n          headerCell.setEditControls();\n          // get columns's width and position\n          columnSpecs.push({\n            width: headerCell.element.getBoundingClientRect().width + 1,\n            left: headerCell.element.offsetLeft - 1,\n            columnIndex: headerCell.columnIndex,\n          });\n        });\n\n        // get rowSpects(row top position and height)\n        for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n          const targetCell = this.getMinRowSpanCell(i, 1);\n          const targetCellHeight = targetCell.element.getBoundingClientRect().height;\n          const targetCellRowHeight = targetCellHeight / targetCell.rowSpan;\n          rowSpecs.push({\n            top: targetCell.element.offsetTop - 1 + (i - targetCell.row) * targetCellRowHeight,\n            height: targetCellRowHeight + 1,\n            rowIndex: i,\n          });\n        }\n        // each table grid's left, top, width, height without rowspan and colspan\n        const tableGridRectList: TableGridRect[] = [];\n        rowSpecs.forEach((rowSpec) => {\n          columnSpecs.forEach((columnSpec) => {\n            tableGridRectList.push(Object.assign({}, rowSpec, columnSpec));\n          });\n        });\n        this.tableMask = new TableMask(tableGridRectList, this.graphInstance);\n      }, 1);\n    } else {\n      // click node event\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setViewerControls();\n      });\n    }\n    this.setBottomControl();\n\n    // set table cell controls\n    // 1. remove last row ✓\n    // 2. empty cell: add node ✓\n    // 3. node cell: edit node content ✓\n    // 4. node cell: adjust node size ✓\n    // 5. node cell: move node position ✓\n  }\n\n  //  recursively find min rowspan cell for targetRow\n  getMinRowSpanCell(row: number, minRowSpan = 1) {\n    let targetRowCell: TableCell | null = null;\n    const rowCells = this.cells.filter((cell) => cell.row === row);\n    if (rowCells.length === 0) {\n      if (row > 0) {\n        targetRowCell = this.getMinRowSpanCell(row - 1, minRowSpan + 1);\n      }\n    } else {\n      let rowSpan = 20;\n      rowCells.forEach((cell) => {\n        if (cell.rowSpan < rowSpan && cell.rowSpan >= minRowSpan) {\n          rowSpan = cell.rowSpan;\n          targetRowCell = cell;\n        }\n      });\n    }\n    return targetRowCell;\n  }\n\n  public onMouseMove() {\n    if (this.isMovingCell || this.isResizingCell) {\n      this.tableMask.onMouseMove();\n    }\n  }\n\n  public startMoving(targetCell: TableCell) {\n    this.isMovingCell = true;\n    this.graphInstance.toolbar.hintMgr.setHint('moveNode');\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopMoving() {\n    this.isMovingCell = false;\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  public startResizing(targetCell: TableCell) {\n    this.isResizingCell = true;\n    this.graphInstance.toolbar.hintMgr.setHint('resizeNode');\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopResizing() {\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  // sumit cell position / size change\n  public submitCellChange() {\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.enable();\n    this.tableMask.submitChange();\n  }\n\n  public setBottomControl() {\n    if (\n      this.graphInstance.mode === 'edit' &&\n      !this.bottomControlEL &&\n      this.graphInstance.options.totalRows < this.graphInstance.options.maxRows\n    ) {\n      this.bottomControlEL = createClassElement(\n        'div',\n        'flex flex-row items-center justify-between mt-15',\n        this.graphInstance.element,\n      );\n      // add row btn\n      new Button(this.bottomControlEL, {\n        icon: 'plus',\n        label: this.graphInstance.options.labels.addRow,\n        className: 'flex-1',\n        onClick: () => {\n          if (typeof this.graphInstance.options.addRow === 'function') {\n            this.graphInstance.options.addRow();\n          } else {\n            this.graphInstance.refresh(\n              Object.assign({}, this.graphInstance.options, {\n                totalRows: this.graphInstance.options.totalRows + 1,\n              }),\n            );\n            if (typeof this.graphInstance.options.onAddRow === 'function') {\n              this.graphInstance.options.onAddRow();\n            }\n          }\n        },\n      });\n    } else {\n      if (this.bottomControlEL) {\n        removeElement(this.bottomControlEL);\n        this.bottomControlEL = null;\n      }\n    }\n  }\n\n  // render table header\n  createHeader() {\n    if (this.graphInstance.options.tableLayoutFixed) {\n      setStyles(this.element, { tableLayout: 'fixed' });\n    }\n    if (this.graphInstance.options.columns && this.graphInstance.options.columns.length > 0) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      this.graphInstance.options.columns.forEach((column, index) => {\n        const headerCell = new TableHeaderCell(tr, column, index, this.graphInstance);\n        this.headerCells.push(headerCell);\n      });\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render table rows and tds\n  createTds() {\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      tr.setAttribute('id', `${this.graphInstance.id}_tr_${i}`);\n      const occupiedRow: number[] = [];\n      this.occupiedList.push(occupiedRow);\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        const td = createClassElement('td', 'tfgraph-td', tr);\n        td.setAttribute('id', `${this.graphInstance.id}_td_${i}_${j}`);\n        occupiedRow.push(0);\n      }\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render tabel cells\n  createCells() {\n    // spaned table cell id array\n    const spanedTdIds = [];\n    const nodes = this.graphInstance.options.nodes;\n    if (nodes && nodes.length > 0) {\n      nodes.forEach((node) => {\n        // set spanned tabel cell ids\n        if (node.colSpan > 1 || node.rowSpan > 1) {\n          for (let i = node.column; i < node.column + node.colSpan; i++) {\n            for (let j = node.row; j < node.row + node.rowSpan; j++) {\n              if (!(i === node.column && j === node.row)) {\n                spanedTdIds.push(`${this.graphInstance.id}_td_${j}_${i}`);\n                this.occupiedList[j][i] = 1;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    // remove spaned tabell cell element\n    spanedTdIds.forEach((id) => removeElement(document.getElementById(id)));\n\n    // create table cells\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        if (!spanedTdIds.includes(`${this.graphInstance.id}_td_${i}_${j}`)) {\n          const targetNode =\n            nodes && nodes.length > 0\n              ? nodes.find((node) => node.row === i && node.column === j)\n              : null;\n          const targetTd = document.getElementById(`${this.graphInstance.id}_td_${i}_${j}`);\n          if (targetNode) {\n            targetTd.setAttribute('colSpan', targetNode.colSpan.toString());\n            targetTd.setAttribute('rowSpan', targetNode.rowSpan.toString());\n            this.occupiedList[i][j] = 1;\n          }\n          this.cells.push(new TableCell(targetTd, targetNode, i, j, this.graphInstance));\n        }\n      }\n    }\n  }\n}\n","import { createClassElement, removeElement } from '../../lib/dom';\nimport { LineOptions, Position } from '../../index';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph line\n */\nexport default class LineSegment {\n  public element: HTMLElement;\n  public thickness: number;\n  public startPointEl: HTMLElement;\n  public endArrowEl: HTMLElement;\n\n  constructor(parent: LineGroup, options: LineOptions) {\n    this.element = createClassElement('div', 'tfgraph-line', parent.element);\n    const { positionA, positionB, thickness = 2, isStart = true, isEnd = true } = options;\n    this.thickness = thickness;\n    if (isStart) this.toggleStartPoint();\n    if (isEnd) this.toggleEndArrow();\n    this.drawLine(positionA, positionB);\n    this.element.addEventListener('mouseenter', () => parent.setHovered(true));\n    this.element.addEventListener('mouseleave', () => parent.setHovered(false));\n    this.element.addEventListener('dblclick', () => parent.onDoubleClick());\n  }\n\n  public setHoverd(hovered = true) {\n    if (hovered) {\n      this.element.classList.add('hovered');\n    } else {\n      this.element.classList.remove('hovered');\n    }\n  }\n\n  public drawLine(positionA: Position, positionB: Position) {\n    // start point\n    const x1 = positionA.x;\n    const y1 = positionA.y;\n    // end point\n    const x2 = positionB.x;\n    const y2 = positionB.y;\n\n    // distance\n    const length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\n    // center\n    const cx = (x1 + x2) / 2 - length / 2;\n    const cy = (y1 + y2) / 2 - this.thickness / 2;\n    // angle\n    const angle = Math.atan2(y2 - y1, x2 - x1) * (180 / Math.PI);\n\n    this.element.style.width = length + this.thickness + 'px';\n    this.element.style.height = this.thickness + 'px';\n    this.element.style.left = cx - 0.5 * this.thickness + 'px';\n    this.element.style.top = cy + 'px';\n    this.element.style.borderRadius = this.thickness + 'px';\n    this.element.style.transform = `rotate(${angle}deg)`;\n  }\n\n  public toggleStartPoint() {\n    if (this.startPointEl) {\n      removeElement(this.startPointEl);\n    } else {\n      this.startPointEl = createClassElement('div', 'start-point', this.element);\n    }\n  }\n\n  public toggleEndArrow() {\n    if (this.endArrowEl) {\n      removeElement(this.endArrowEl);\n    } else {\n      this.endArrowEl = createClassElement('div', 'arrow', this.element);\n    }\n  }\n}\n","import { TableFlowGraph, LineGroupOptions, Position } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport Anchor from '../anchor/Anchor';\nimport LineSegment from './LineSegment';\n\n/**\n * table-flow-graph line group\n */\nexport default class LineGroup {\n  public element: HTMLElement;\n  public isDrawingActive: boolean;\n  public anchorIds: string[];\n  public anchors: Anchor[];\n  public cursorLine: LineSegment; // line currently drawing at end\n  public lines: LineSegment[];\n  public cursorLineStartPosition: Position;\n  public graphInstance: TableFlowGraph;\n  public hovered: boolean; // is mouse hover\n\n  constructor(\n    parentElement: HTMLElement,\n    options: LineGroupOptions,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.element = createClassElement('div', 'tfgraph-line-group', parentElement);\n    this.isDrawingActive = options.isDrawingActive;\n    this.anchorIds = options.anchorIds;\n    this.graphInstance = graphInstance;\n    this.drawLines();\n  }\n\n  public addLineSegment(anchorId) {\n    if (!this.anchorIds.includes(anchorId)) {\n      this.anchorIds.push(anchorId);\n      this.drawLines();\n    }\n  }\n\n  public onDoubleClick() {\n    if (this.hovered) {\n      if (this.isDrawingActive) {\n        this.graphInstance.lineController.endDrawLine();\n      } else {\n        this.graphInstance.lineController.removeLineGroup(this);\n      }\n    }\n  }\n\n  public drawLines() {\n    this.anchors = [];\n    this.lines = [];\n    if (this.anchorIds.length === 0) return;\n    this.anchorIds.forEach((anchorId) => {\n      const targetAnchor = this.graphInstance.anchorController.anchors.find(\n        (anchor) => anchor.id === anchorId,\n      );\n      if (targetAnchor) {\n        this.anchors.push(targetAnchor);\n      }\n    });\n    this.element.innerHTML = '';\n    const pointList: Position[] = this.anchors.map((anchor) => ({\n      x: anchor.posX,\n      y: anchor.posY,\n    }));\n    if (pointList.length > 1) {\n      for (let i = 0; i < pointList.length - 1; i++) {\n        const line = new LineSegment(this, {\n          positionA: pointList[i],\n          positionB: pointList[i + 1],\n          thickness: 2,\n          isStart: i === 0,\n          isEnd: i === pointList.length - 2 && !this.isDrawingActive,\n        });\n        this.lines.push(line);\n      }\n    }\n    // add line between last anchor position and mouse position when drawing\n    if (this.isDrawingActive) {\n      this.cursorLineStartPosition = pointList[pointList.length - 1];\n      // draw cursor line\n      this.cursorLine = new LineSegment(this, {\n        positionA: this.cursorLineStartPosition,\n        positionB: this.graphInstance.mousePosition,\n        thickness: 2,\n        isStart: pointList.length === 1,\n        isEnd: true,\n      });\n      this.lines.push(this.cursorLine);\n    }\n  }\n\n  public setHovered(hovered = true) {\n    if (this.graphInstance.mode === 'edit') {\n      this.hovered = hovered;\n      this.lines.forEach((line) => {\n        line.setHoverd(hovered);\n      });\n      if (!this.isDrawingActive) {\n        this.graphInstance.toolbar.hintMgr.setHint(hovered ? 'hoverLine' : 'idel');\n      }\n    }\n  }\n\n  public endDrawing() {\n    // removeElement(this.cursorLine.element);\n    this.isDrawingActive = false;\n    this.drawLines();\n  }\n\n  public escapeDrawing() {\n    if (this.cursorLine) {\n      if (this.anchorIds.length > 0) {\n        this.anchorIds.pop();\n        if (this.anchorIds.length === 0) {\n          removeElement(this.element);\n          // remove the last anchor id in this line group\n          this.graphInstance.lineController.lineAnchorIds =\n            this.graphInstance.lineController.lineAnchorIds.filter(\n              (lineArray) => lineArray.length > 1,\n            );\n          this.graphInstance.lineController.endDrawLine();\n        } else {\n          this.drawLines();\n        }\n      }\n    }\n  }\n\n  public onMouseMove(graphInstance: TableFlowGraph) {\n    if (this.cursorLine) {\n      let targetPosition = graphInstance.mousePosition;\n      // snap to hovered anchor\n      if (\n        graphInstance.anchorController.hoveredAnchor &&\n        !this.anchorIds.includes(graphInstance.anchorController.hoveredAnchor.id)\n      ) {\n        targetPosition = {\n          x: graphInstance.anchorController.hoveredAnchor.posX,\n          y: graphInstance.anchorController.hoveredAnchor.posY,\n        };\n      }\n      this.cursorLine.drawLine(this.cursorLineStartPosition, targetPosition);\n    }\n  }\n}\n","import { cloneDeep, isEqual } from 'lodash-es';\nimport { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement, setStyles } from '../../lib/dom';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph lines controller\n */\nexport default class LineController {\n  public element: HTMLElement;\n  public lineAnchorIds: string[][]; // anchor ids to draw lines\n  public originLineAnchorIds: string[][]; // compare to lineAnchorIds to determine if lines are changed\n  public isDrawingLine: boolean;\n  public currentDrawingLine: LineGroup;\n  public graphInstance: TableFlowGraph;\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-line-layer', this.graphInstance.element);\n    const { options } = this.graphInstance;\n    // this.options.mode = options.mode ? options.mode : 'view';\n    if (options.lines && Array.isArray(options.lines)) {\n      this.lineAnchorIds = options.lines;\n    } else {\n      this.lineAnchorIds = [];\n    }\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public renderLines() {\n    this.element.innerHTML = '';\n    this.lineAnchorIds.forEach((lineGroup) => {\n      new LineGroup(\n        this.element,\n        { anchorIds: lineGroup, isDrawingActive: false },\n        this.graphInstance,\n      );\n    });\n    this.setColAndRowDeletable();\n  }\n\n  public startDrawLine() {\n    this.isDrawingLine = true;\n    this.graphInstance.toolbar.disable();\n    this.graphInstance.toolbar.hintMgr.setHint('drawLine');\n    // set lines layer below anchors layer when draing line\n    setStyles(this.element, { zIndex: '1' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '2' });\n\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public endDrawLine() {\n    this.isDrawingLine = false;\n    this.graphInstance.toolbar.enable();\n    // set lines layer above anchors layer when draing line\n    setStyles(this.element, { zIndex: '2' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '1' });\n\n    if (this.currentDrawingLine) {\n      this.currentDrawingLine.endDrawing();\n      if (this.currentDrawingLine.anchorIds.length <= 1) {\n        this.removeLineGroup(this.currentDrawingLine);\n      }\n      this.currentDrawingLine = undefined;\n    }\n    if (!isEqual(this.originLineAnchorIds, this.lineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  setColAndRowDeletable() {\n    const totalRows = this.graphInstance.options.totalRows;\n    const totalColumns = this.graphInstance.options.totalColumns;\n    this.canDeleteColumn = true;\n    this.canDeleteRow = true;\n    this.lineAnchorIds.forEach((line) => {\n      line.forEach((id) => {\n        const idArray = id.split('_');\n        const row = idArray[1];\n        const col = idArray[2];\n        if (parseInt(col) === totalColumns - 1) {\n          this.canDeleteColumn = false;\n        }\n        if (parseInt(row) === totalRows - 1) {\n          this.canDeleteRow = false;\n        }\n      });\n    });\n  }\n\n  public onChangeLines() {\n    this.setColAndRowDeletable();\n    this.graphInstance.options = Object.assign({}, this.graphInstance.options, {\n      lines: this.lineAnchorIds,\n    });\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    if (typeof this.graphInstance.options.onChangeLines === 'function') {\n      this.graphInstance.options.onChangeLines(this.lineAnchorIds);\n    }\n  }\n\n  public removeLineGroup(line: LineGroup) {\n    removeElement(line.element);\n    this.lineAnchorIds = this.lineAnchorIds.filter((lines) => !isEqual(lines, line.anchorIds));\n    if (!isEqual(this.lineAnchorIds, this.originLineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  public createLineGroup(anchorId) {\n    this.startDrawLine();\n    this.lineAnchorIds.push([anchorId]);\n    this.currentDrawingLine = new LineGroup(\n      this.element,\n      { anchorIds: this.lineAnchorIds[this.lineAnchorIds.length - 1], isDrawingActive: true },\n      this.graphInstance,\n    );\n  }\n\n  public addLineSegment(anchorId) {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.addLineSegment(anchorId);\n    }\n  }\n\n  public onMouseMove() {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.onMouseMove(this.graphInstance);\n    }\n  }\n}\n","import { TableFlowGraph, Bearing } from '../../index';\nimport { createClassElement } from '../../lib/dom';\n\n// | 'topleft'\n// | 'top'\n// | 'topright'\n// | 'left'\n// | 'center'\n// | 'right'\n// | 'bottomleft'\n// | 'bottom'\n// | 'bottomright';\n\nconst getBearingShort = (bearing: Bearing) => {\n  let shortBearing = 't';\n  switch (bearing) {\n    case 'topleft':\n      shortBearing = 'tl';\n      break;\n    case 'top':\n      shortBearing = 't';\n      break;\n    case 'topright':\n      shortBearing = 'tr';\n      break;\n    case 'left':\n      shortBearing = 'l';\n      break;\n    case 'center':\n      shortBearing = 'c';\n      break;\n    case 'right':\n      shortBearing = 'r';\n      break;\n    case 'bottomleft':\n      shortBearing = 'bl';\n      break;\n    case 'bottom':\n      shortBearing = 'b';\n      break;\n    case 'bottomright':\n      shortBearing = 'br';\n      break;\n    default:\n      break;\n  }\n  return shortBearing;\n};\n\n/**\n * Anchor point for drawing lines\n */\nexport default class Anchor {\n  // element of this Anchor\n  public element: HTMLElement;\n  // the bearing relative to this anchor's parent table cell\n  public bearing: Bearing;\n  public elementTr: HTMLElement;\n  public elementCol: HTMLElement;\n  // is the anchor on table cell border or on inner block border(top / bottom)\n  public isOffsetX: boolean;\n  // is the anchor on table cell border or on inner block border(left / right)\n  public isOffsetY: boolean;\n  // id for this Anchor class\n  public id = '';\n  // x position relative to table area\n  public posX = 0;\n  // y position relative to table area\n  public posY = 0;\n  public row: number;\n  public column: number;\n  public hidden = false;\n\n  constructor(\n    bearing: Bearing,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n    isOffsetX = false,\n    isOffsetY = false,\n  ) {\n    this.bearing = bearing;\n    this.isOffsetX = isOffsetX;\n    this.isOffsetY = isOffsetY;\n    this.row = row;\n    this.column = column;\n    this.elementTr = document.getElementById(`${graphInstance.id}_tr_${row}`);\n    this.elementCol = document.getElementById(`${graphInstance.id}_col_${column}`);\n    if (this.elementTr && this.elementCol) {\n      // create dom elements\n      this.element = createClassElement(\n        'div',\n        'tfgraph-anchor',\n        graphInstance.anchorController.element,\n      );\n      createClassElement('div', 'tfgraph-anchor-point', this.element);\n      const area = createClassElement('div', 'tfgraph-anchor-area', this.element);\n      createClassElement('div', 'tfgraph-anchor-circle', area);\n\n      // set Anchor instance id; 'ox' meaning offsetX, 'nx' meaning normalX\n      this.id = `a_${row}_${column}_${getBearingShort(bearing)}_${isOffsetX ? 'ox' : 'nx'}_${\n        isOffsetY ? 'oy' : 'ny'\n      }`;\n      // set dom id\n      this.element.setAttribute('id', `${graphInstance.id}_${this.id}`);\n\n      graphInstance.anchorController.anchors.push(this);\n      this.setVisible(graphInstance.mode === 'edit');\n      // setTimeout(() => this.setPosition(), 1);\n      this.setPosition();\n      this.element.addEventListener('click', () => {\n        if (!graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.createLineGroup(this.id);\n        } else {\n          graphInstance.lineController.addLineSegment(this.id);\n        }\n      });\n      this.element.addEventListener('mouseenter', () => {\n        graphInstance.anchorController.setHoveredAnchor(this);\n      });\n      this.element.addEventListener('mouseleave', () => {\n        if (graphInstance.anchorController.hoveredAnchor.id === this.id) {\n          graphInstance.anchorController.setHoveredAnchor(null);\n        }\n      });\n      // dblclick to finish drawing lines\n      this.element.addEventListener('dblclick', () => {\n        if (graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.endDrawLine();\n        }\n      });\n    }\n  }\n\n  setOnePosition(x, y) {\n    this.posX = x;\n    this.posY = y;\n    this.element.style.left = x + 'px';\n    this.element.style.top = y + 'px';\n    this.element.setAttribute('title', `xpos & ypos=${x},${y}`);\n  }\n\n  public setVisible(visible: boolean) {\n    if (visible) {\n      this.element.classList.remove('hidden');\n    } else {\n      this.element.classList.add('hidden');\n    }\n  }\n\n  public setPosition() {\n    const x_left = this.elementCol.offsetLeft + (this.isOffsetX ? 15 : 0);\n    const x_center = this.elementCol.offsetLeft + 0.5 * this.elementCol.offsetWidth;\n    const x_right =\n      this.elementCol.offsetLeft + this.elementCol.offsetWidth - (this.isOffsetX ? 15 : 0);\n    const y_top = this.elementTr.offsetTop + (this.isOffsetY ? 15 : 0);\n    const y_center = this.elementTr.offsetTop + 0.5 * this.elementTr.offsetHeight;\n    const y_bottom =\n      this.elementTr.offsetTop + this.elementTr.offsetHeight - (this.isOffsetY ? 15 : 0);\n\n    switch (this.bearing) {\n      case 'topleft':\n        this.setOnePosition(x_left, y_top);\n        break;\n      case 'top':\n        this.setOnePosition(x_center, y_top);\n        break;\n      case 'topright':\n        this.setOnePosition(x_right, y_top);\n        break;\n      case 'right':\n        this.setOnePosition(x_right, y_center);\n        break;\n      case 'bottomright':\n        this.setOnePosition(x_right, y_bottom);\n        break;\n      case 'bottom':\n        this.setOnePosition(x_center, y_bottom);\n        break;\n      case 'bottomleft':\n        this.setOnePosition(x_left, y_bottom);\n        break;\n      case 'left':\n        this.setOnePosition(x_left, y_center);\n        break;\n      case 'center':\n        this.setOnePosition(x_center, y_center);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport TableCell from '../table/TableCell';\nimport Anchor from './Anchor';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class AnchorController {\n  public element: HTMLElement;\n  public anchors: Anchor[];\n  public hoveredAnchor: Anchor | null; // current Anchor that mouse hoverd\n  graphInstance: TableFlowGraph;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.anchors = [];\n    this.element = createClassElement('div', 'tfgraph-anchor-layer', graphInstance.element);\n  }\n\n  public renderAnchors() {\n    this.element.innerHTML = '';\n    this.anchors = [];\n    this.graphInstance.tableController.cells.forEach((cell) => {\n      // console.log('cell:::::::::::', cell);\n      this.createAnchors(cell);\n    });\n  }\n\n  public setHoveredAnchor(anchor: Anchor | null) {\n    this.hoveredAnchor = anchor;\n    if (!this.graphInstance.lineController.isDrawingLine) {\n      if (anchor) {\n        this.graphInstance.toolbar.hintMgr.setHint('hoverAnchor');\n      } else {\n        this.graphInstance.toolbar.hintMgr.setHint('idel');\n      }\n    }\n  }\n\n  public resetPosition() {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor) => {\n        anchor.setPosition();\n      });\n    }\n  }\n\n  public setAnchorsVisible(visible: boolean) {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor: Anchor) => {\n        anchor.setVisible(visible);\n      });\n    }\n  }\n\n  // create anchors for one cell\n  createAnchors(cell: TableCell) {\n    for (let row = cell.row; row < cell.row + cell.rowSpan; row++) {\n      for (let col = cell.column; col < cell.column + cell.colSpan; col++) {\n        if (row === 0) {\n          new Anchor('top', row, col, this.graphInstance);\n          new Anchor('topright', row, col, this.graphInstance);\n          if (cell.column === 0) {\n            new Anchor('topleft', row, col, this.graphInstance);\n          }\n        }\n        if (col === 0) {\n          new Anchor('left', row, col, this.graphInstance);\n          new Anchor('bottomleft', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1) {\n          new Anchor('right', row, col, this.graphInstance);\n        }\n        if (row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottom', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1 || row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottomright', row, col, this.graphInstance);\n        }\n        if (cell.hasNode) {\n          if (col === cell.column) {\n            new Anchor('left', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomleft', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (col === cell.column + cell.colSpan - 1) {\n            new Anchor('right', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (row === cell.row) {\n            new Anchor('top', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('topright', row, col, this.graphInstance, false, true);\n            }\n          }\n          if (row === cell.row + cell.rowSpan - 1) {\n            new Anchor('bottom', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, false, true);\n            }\n          }\n        }\n      }\n    }\n    if (!cell.hasNode) {\n      new Anchor('center', cell.row, cell.column, this.graphInstance);\n    }\n  }\n}\n","import './styles/index.scss';\nimport { createClassElement, setStyles } from './lib/dom';\nimport { debounce } from './lib/utils';\nimport Toolbar from './components/toolbar/Toolbar';\nimport TableController from './components/table/TableController';\nimport LineController from './components/line/LineController';\nimport AnchorController from './components/anchor/AnchorController';\n\n// default options\nconst defaultOptions: TFGraphOptions = {\n  totalColumns: 8,\n  totalRows: 8,\n  maxColumns: 12,\n  maxRows: 30,\n  labels: {\n    editMode: 'Edit Mode',\n    previewMode: 'Preview Mode',\n    editColumn: 'Edit Column',\n    addColumn: 'Add Column',\n    deleteColumn: 'Delete Column',\n    addRow: 'Add Row',\n    deleteRow: 'Delete Row',\n    editNode: 'Edit Node',\n    addNode: 'Add Node',\n    deleteNode: 'Delete Node',\n    adjustNodeSize: 'Adjust Node Size',\n    moveNode: 'Move Node',\n    newNode: 'New Node',\n    enterNodeName: 'Enter node name',\n    enterColumnName: 'Enter column name',\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n    hint_drawLine:\n      'Click another anchor to draw new line segment; press [ESC] to undo prev line segment; press [ENTER] or double click left mouse to finish drawing',\n    hint_hoverLine: 'Double click to delete this line',\n    hint_hoverAnchor: 'Click to start drawing lines',\n    hint_moveNode: 'Move cursor to move this node, click left mouse to confrim moving',\n    hint_resizeNode: 'Move cursor to resize this node, click left mouse to confrim resizing',\n  },\n};\n\nexport class TableFlowGraph {\n  public element: HTMLElement;\n  public baseElement: HTMLElement;\n  public options: TFGraphOptions;\n  public id: string;\n  public toolbar: Toolbar;\n  public isAlive: boolean;\n  public hasTableHeader: boolean;\n  public mode: Mode;\n  public mousePosition: Position;\n  public tableController: TableController;\n  public lineController: LineController;\n  public anchorController: AnchorController;\n\n  constructor(el: HTMLElement, options: TFGraphOptions) {\n    if (!el) {\n      throw new Error('no element is specified to initialize TableFlowGraph');\n    } else {\n      this.baseElement = el;\n      this.baseElement.classList.add('tfgraph-wrapper');\n    }\n\n    // use id as unique key, to support multiple table-flow-graph instances in one page.\n    if (this.baseElement.getAttribute('id')) {\n      this.id = this.baseElement.getAttribute('id');\n    } else {\n      this.id = 'id' + (Math.random() * 100000).toFixed(0);\n    }\n\n    this.init(options);\n\n    window.addEventListener('resize', this, false);\n    window.addEventListener('keydown', this, false);\n    window.addEventListener('mousemove', this, false);\n\n    this.isAlive = true;\n  }\n\n  public init(options: TFGraphOptions) {\n    this.baseElement.innerHTML = '';\n\n    this.options = Object.assign({}, defaultOptions, options);\n    if (options.labels) {\n      this.options.labels = Object.assign({}, defaultOptions.labels, options.labels);\n    }\n    // set totalRows\n    // if (typeof this.options.rows !== 'undefined') {\n    //   this.options.totalRows = this.options.rows.length;\n    // }\n    // set totalColumns and hasTableHeader\n    if (this.options.columns && this.options.columns.length > 0) {\n      this.options.totalColumns = this.options.columns.length;\n      this.hasTableHeader = true;\n    } else {\n      this.options.columns = [];\n      this.hasTableHeader = false;\n      for (let i = 0; i < this.options.totalColumns; i++) {\n        this.options.columns.push({\n          width: 'auto',\n        });\n      }\n    }\n\n    // restrain totalRows and totalColumns\n    if (this.options.totalRows > this.options.maxRows) {\n      this.options.totalRows = this.options.maxRows;\n    }\n    if (this.options.totalColumns > this.options.maxColumns) {\n      this.options.totalColumns = this.options.maxColumns;\n    }\n\n    // filter nodes that exceeds totalRows and totalColumns\n    if (this.options.nodes && this.options.nodes.length > 0) {\n      this.options.nodes = this.options.nodes.filter(\n        (node) =>\n          node.row + node.rowSpan - 1 <= this.options.totalRows &&\n          node.column + node.colSpan - 1 <= this.options.totalColumns,\n      );\n    }\n\n    // create toolbar and edit state\n    if (this.options.isEditor) {\n      this.mode = 'edit';\n      this.toolbar = new Toolbar(this.baseElement, this);\n    } else {\n      this.mode = 'preview';\n    }\n\n    // create root dom elements and controllers\n    this.element = createClassElement('div', 'tfgraph', this.baseElement);\n    if (this.mode === 'edit') this.element.classList.add('edit');\n    this.lineController = new LineController(this);\n    this.anchorController = new AnchorController(this);\n    this.tableController = new TableController(this);\n\n    this.render();\n  }\n\n  public render() {\n    // render table\n    this.tableController.renderTable();\n\n    // wait for table render ready; TODO set anchor position relative to table cells\n    setTimeout(() => {\n      // render anchors\n      this.anchorController.renderAnchors();\n      // render lines\n      this.lineController.renderLines();\n    }, 1);\n  }\n\n  handleResize = () => {\n    // TODO detailed resize management\n    // this.anchorController.resetPosition();\n    this.refresh();\n  };\n  debouncedHandleResize = debounce(this.handleResize, 500);\n\n  // handle addEventListener events\n  handleEvent(event) {\n    switch (event.type) {\n      case 'resize':\n        this.debouncedHandleResize();\n        break;\n      case 'mousemove':\n        this.onMourseMove(event);\n        break;\n      case 'keydown':\n        this.onKeydown(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onMourseMove(event) {\n    const rect = this.element.getBoundingClientRect();\n    const offsetX = event.clientX - rect.left;\n    const offsetY = event.clientY - rect.top;\n    this.mousePosition = { x: offsetX, y: offsetY };\n    this.lineController.onMouseMove();\n    this.tableController.onMouseMove();\n  }\n\n  onKeydown = (e) => {\n    if (e.code === 'Enter') {\n      // press enter to finish drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.endDrawLine();\n      }\n    } else if (e.code === 'Escape') {\n      // press esc to cancel last anchor point when drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.currentDrawingLine.escapeDrawing();\n      }\n      if (this.tableController.isMovingCell) {\n        this.tableController.stopMoving();\n      }\n      if (this.tableController.isResizingCell) {\n        this.tableController.stopResizing();\n      }\n    }\n  };\n\n  public refresh(options?: TFGraphOptions) {\n    if (!this.isAlive) {\n      return;\n    } else {\n      setTimeout(() => {\n        const height = this.baseElement.getBoundingClientRect().height;\n        // maintain consistent height when rerendering dom elements\n        setStyles(this.baseElement, { height: height + 'px' });\n        this.init(options ? options : this.options);\n        setStyles(this.baseElement, { height: 'auto' });\n      });\n    }\n  }\n\n  public destroy() {\n    if (!this.isAlive) {\n      return;\n    }\n\n    window.removeEventListener('resize', this, false);\n    window.removeEventListener('keydown', this, false);\n    window.removeEventListener('mousemove', this, false);\n\n    this.isAlive = false;\n  }\n\n  public changeMode(mode: Mode) {\n    if (this.mode !== mode) {\n      this.mode = mode;\n      if (mode === 'edit') {\n        this.element.classList.add('edit');\n      } else {\n        this.element.classList.remove('edit');\n      }\n      this.anchorController.setAnchorsVisible(mode === 'edit');\n      this.tableController.renderTable();\n    }\n  }\n}\n\nexport type ColumnWidth = 'auto' | 'lg' | 'md' | 'sm' | 'xs';\n\n// table column header data\nexport interface TFGraphColumn {\n  id?: string;\n  title?: string;\n  width?: ColumnWidth | string;\n}\n\n// table row header data\nexport interface TFGraphRow {\n  id?: string;\n  title: string;\n}\n\ntype RGB = `rgb(${number}, ${number}, ${number})`;\ntype RGBA = `rgba(${number}, ${number}, ${number}, ${number})`;\ntype HEX = `#${string}`;\n\nexport type ColorValue = RGB | RGBA | HEX;\n\nexport type Color =\n  | 'red'\n  | 'orange'\n  | 'yellow'\n  | 'green'\n  | 'cyan'\n  | 'blue'\n  | 'purple'\n  | 'gray'\n  | 'black'\n  | 'white';\n\nexport type FunctionalColor = 'primary' | 'success' | 'info' | 'warning' | 'danger';\n\nexport type NodeType = 'default' | FunctionalColor;\n\nexport type NodeStyleType = {\n  [K in NodeType]: {\n    type: K;\n    normalStyle?: Partial<CSSStyleDeclaration>;\n    hoverStyle?: Partial<CSSStyleDeclaration>;\n  };\n};\n\n// node data\nexport interface TFGraphNode {\n  id: string | number;\n  title: string;\n  row: number;\n  column: number;\n  colSpan: number;\n  rowSpan: number;\n  type?: NodeType;\n  isBtn?: boolean;\n  meta?: Record<string, unknown>;\n  showPopup?: boolean;\n}\n\n// export interface ThemeOption {\n//   borderColor: string;\n//   titleColor: string;\n//   backgroundColor: string;\n// }\n\n// export interface Theme {\n//   default: ThemeOption;\n//   success: ThemeOption;\n//   warning: ThemeOption;\n//   danger: ThemeOption;\n//   primary: ThemeOption;\n// }\n\nexport type Mode = 'edit' | 'preview';\n\n// labels for ui\nexport type Labels = {\n  editMode?: string;\n  previewMode?: string;\n  editColumn?: string;\n  addColumn?: string;\n  deleteColumn?: string;\n  addRow?: string;\n  deleteRow?: string;\n  editNode?: string;\n  addNode?: string;\n  deleteNode?: string;\n  adjustNodeSize?: string;\n  moveNode?: string;\n  newNode?: string;\n  enterNodeName?: string;\n  enterColumnName?: string;\n  confirm?: string;\n  cancel?: string;\n  hint_drawLine?: string;\n  hint_hoverLine?: string;\n  hint_hoverAnchor?: string;\n  hint_moveNode?: string;\n  hint_resizeNode?: string;\n};\n\n// table-flow-graph options\nexport interface TFGraphOptions {\n  nodes?: TFGraphNode[];\n  columns?: TFGraphColumn[];\n  totalColumns?: number;\n  maxColumns?: number;\n  tableLayoutFixed?: boolean;\n  // rows?: TFGraphRow[];\n  totalRows?: number;\n  maxRows?: number;\n  isEditor?: boolean;\n  lines?: string[][]; // 2D array of anchor point ids to draw lines\n  labels?: Labels;\n  onChangeLines?: (lines: string[][]) => void; // lines changed\n  // column methods\n  addColumn?: () => void; // custom add column method\n  onAddColumn?: (columnData?: TFGraphColumn) => void; // add column event\n  editColumn?: (column: TFGraphColumn) => void;\n  onEditColumn?: (column: TFGraphColumn) => void; // on edit column callback\n  deleteColumn?: (column?: TFGraphColumn) => void; // custom delete column method\n  onDeleteColumn?: (column?: TFGraphColumn) => void; // delete column callback\n  // row methods\n  addRow?: () => void; // custom add row method\n  onAddRow?: () => void; // add row\n  deleteRow?: () => void; // custom delete row method\n  onDeleteRow?: () => void; // delete the last row\n  // node methods\n  addNode?: (row: number, column: number) => void; // custom add node method\n  onAddNode?: (node: TFGraphNode) => void; // add node callback\n  editNode?: (node: TFGraphNode) => void; // custom edit node method\n  onEditNode?: (node: TFGraphNode) => void; // edit node callback\n  deleteNode?: (node: TFGraphNode) => void; // custom delete node method\n  onDeleteNode?: (node: TFGraphNode) => void;\n  onClickNode?: (node: TFGraphNode, nodeEl: HTMLElement) => void; // click event on viewer mode\n  // onChangeNode?: (newNode: TFGraphNode, oldNode: TFGraphNode) => void;\n  renderNode?: (node: TFGraphNode) => HTMLElement; // custom render node content\n  renderNodeHoverPopup?: (node: TFGraphNode) => HTMLElement; // custom render node hover popup\n}\n\n// anchor point's relative position to a table cell\nexport type Bearing =\n  | 'topleft'\n  | 'top'\n  | 'topright'\n  | 'left'\n  | 'center'\n  | 'right'\n  | 'bottomleft'\n  | 'bottom'\n  | 'bottomright';\n\nexport type Position = {\n  x: number;\n  y: number;\n};\n\nexport interface ColumnSpec {\n  left: number;\n  width: number;\n  columnIndex: number;\n}\n\nexport interface RowSpec {\n  top: number;\n  height: number;\n  rowIndex: number;\n}\n\nexport type TableGridRect = ColumnSpec & RowSpec;\n\nexport interface LineOptions {\n  positionA: Position; // x and y position relative to table element\n  positionB: Position;\n  thickness: number;\n  isStart: boolean;\n  isEnd: boolean;\n}\n\nexport interface LineGroupOptions {\n  anchorIds: string[];\n  isDrawingActive: boolean; // current line group is drawing\n}\n\nexport type BtnType = 'default' | 'primary' | 'warning' | 'danger' | 'success' | 'clean';\n\nexport interface BtnOptions {\n  label?: string;\n  type?: BtnType;\n  className?: string;\n  icon?: string;\n  onClick?: (e: MouseEvent) => void;\n  tooltip?: string;\n}\n\nexport type TogglerItem = {\n  label: string;\n  id?: string;\n};\n\nexport interface TogglerOptions {\n  items: TogglerItem[];\n  initialActiveIndex?: number;\n  onChange?: (item: TogglerItem, index: number) => void;\n}\n\nexport type TogglerButton = {\n  itemData: TogglerItem;\n  el: HTMLElement;\n  index: number;\n};\n\nexport interface PopupOptions {\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n  contentElement?: HTMLElement;\n}\n\nexport interface TooltipOptoins {\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n  label?: string;\n}\n\nexport interface DialogOptions {\n  title: string;\n  targetElement?: HTMLElement;\n  contentElement: HTMLElement;\n}\n\nexport interface HeaderCellMenuOptions {\n  showAdd?: boolean;\n  showDelete?: boolean;\n}\n\nexport type PositionAndSize = {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\nexport type CellPositionAndSize = {\n  row: number;\n  column: number;\n  rowSpan: number;\n  colSpan: number;\n};\n\nexport type HintType =\n  | 'idel'\n  | 'drawLine'\n  | 'hoverLine'\n  | 'hoverAnchor'\n  | 'moveNode'\n  | 'resizeNode';\n"],"names":["createClassElement","tagName","className","parentNode","el","document","createElement","appendChild","removeElement","element","remove","removeChild","setStyles","obj","key","val","concat","style","ColorPlate","FunctionalColors","primary","success","info","warning","danger","svgIconList","edit","plus","x","x2","expand","move","delete_row","delete_col","check","Icon","parentElement","options","htmlString","div","name","this","innerHTML","trim","firstChild","size","color","styleObj","width","height","fill","setAttribute","classList","add","Tooltip","targetElement","_this","rendered","addEventListener","mouseEnter","mouseLeave","prototype","render","_a","_b","placement","label","targetRect","getBoundingClientRect","body","left","top","areaElement","boxElement","arrowElement","areaRect","arrowRect","areaStyleObj","arrowStyleObj","bottom","right","updatePosition","showTimeoutId","window","clearTimeout","dismiss","removeEventListener","setTimeout","dismissTimeoutId","Button","type","onClick","icon","tooltip","btnToolTip","e","disabled","setDisabled","setEnabled","Toggler","btnList","items","initialActiveIndex","onChange","indicatorEl","btnContainerEl","forEach","item","index","push","itemData","setActive","activeIndex","setActiveIndicator","containerRect","rect","Dialog","title","getElementsByTagName","maskElement","renderTitleBar","contentElement","close","titleBarElement","innerText","closeBtnElement","EditColumnDialog","graphInstance","targetHeaderCell","dialog","setIsEdit","renderContent","columnData","isEdit","inputEl","value","labels","enterColumnName","btnContainer","btnCancel","cancel","btnConfirm","confirm","refresh","onEditColumn","colData","id","totalColumns","columns","onAddColumn","show","editColumn","addColumn","HintManager","targetEl","currentHintState","setHint","hintState","hint_drawLine","hint_hoverLine","hint_hoverAnchor","hint_moveNode","hint_resizeNode","Toolbar","modeToggler","editMode","previewMode","changeMode","setToolbarState","hintEl","hintMgr","rightBtns","newColumnBtn","disabledMask","addColDialog","hasTableHeader","Object","assign","disable","enable","maxColumns","mode","EditNodeDialog","targetCell","nodeData","nodeNameInput","enterNodeName","onEditNode","row","column","rowSpan","colSpan","nodes","onAddNode","editNode","addNode","Popup","timeoutId","NodeStyle","default","normalStyle","borderColor","backgroundColor","hoverStyle","Node","cell","tableCell","hoverd","createNode","data","isBtn","renderNode","toggleHovered","hovered","setViewerControls","onClickNode","showPopup","contentEl","renderNodeHoverPopup","TableCell","createTabelCell","hasNode","node","minHeight","setEditorControls","controlLayer","editDialog","moveNode","tableController","startMoving","deleteNode","onDeleteNode","adjustNodeSize","startResizing","totalRows","deleteRowBtn","deleteRow","onDeleteRow","deleteColBtn","deleteColumn","targetColumn","onDeleteColumn","pop","onMouseEnter","onMouseLeave","canDeleteRow","lineController","canDeleteColumn","setIsTarget","isTarget","opacity","TableHeaderCell","columnIndex","isLast","setEditControls","editColDialog","TableMaskBox","parentEl","submitCellChange","setPositinAndSize","pos_size","TableMask","tableGridRectList","showMask","targetTableCell","setFilteredOccupiedList","maskBox","mouseGridRect","getMouseRect","targetCellRect","getRectByRowAndColumn","setMaskBoxStatus","filteredOccupiedList","cloneDeep","occupiedList","i","j","isMovingCell","resultCellPositionAndSize","rowIndex","Math","min","abs","topLeftRect","bottomRightRect","doable","startMask","stopMask","submitChange","targetCellPositionAndSize","isEqual","targetGridRect","mouseX","mousePosition","mouseY","y","gridRect","find","onMouseMove","newRect","Table","initTableStatus","headerCells","cells","isResizingCell","renderTable","createHeader","createTds","createCells","setControls","deleteableObj","setColumnAndRowDeletable","columnSpecs","rowSpecs","headerCell","offsetLeft","getMinRowSpanCell","targetCellRowHeight","offsetTop","rowSpec","columnSpec","tableMask","setBottomControl","minRowSpan","targetRowCell","rowCells","filter","length","rowSpan_1","toolbar","stopMoving","stopResizing","bottomControlEL","maxRows","addRow","onAddRow","tableLayoutFixed","tableLayout","tr_1","tr","occupiedRow","spanedTdIds","getElementById","includes","this_1","targetNode","targetTd","toString","LineSegment","parent","positionA","positionB","thickness","isStart","_c","isEnd","toggleStartPoint","toggleEndArrow","drawLine","setHovered","onDoubleClick","setHoverd","x1","y1","y2","sqrt","cx","cy","angle","atan2","PI","borderRadius","transform","startPointEl","endArrowEl","LineGroup","isDrawingActive","anchorIds","drawLines","addLineSegment","anchorId","endDrawLine","removeLineGroup","anchors","lines","targetAnchor","anchorController","anchor","pointList","map","posX","posY","line","cursorLineStartPosition","cursorLine","endDrawing","escapeDrawing","lineAnchorIds","lineArray","targetPosition","hoveredAnchor","LineController","Array","isArray","originLineAnchorIds","renderLines","lineGroup","setColAndRowDeletable","startDrawLine","isDrawingLine","zIndex","currentDrawingLine","undefined","onChangeLines","idArray","split","col","parseInt","createLineGroup","Anchor","bearing","isOffsetX","isOffsetY","hidden","elementTr","elementCol","area","shortBearing","getBearingShort","setVisible","setPosition","setHoveredAnchor","setOnePosition","visible","x_left","x_center","offsetWidth","x_right","y_top","y_center","offsetHeight","y_bottom","AnchorController","renderAnchors","createAnchors","resetPosition","setAnchorsVisible","defaultOptions","newNode","TableFlowGraph","func","wait","timeoutID","handleResize","debouncedHandleResize","Number","isInteger","console","warn","args","_i","arguments","context","apply","onKeydown","code","Error","baseElement","getAttribute","random","toFixed","init","isAlive","isEditor","TableController","handleEvent","event","onMourseMove","offsetX","clientX","offsetY","clientY","destroy"],"mappings":"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"}