{"version":3,"file":"index.min.js","sources":["../src/lib/dom.ts","../src/lib/utils.ts","../src/components/ui/icon/svgIconList.ts","../src/components/ui/icon/Icon.ts","../src/components/ui/tooltip/Tooltip.ts","../src/components/ui/button/Button.ts","../src/components/ui/toggler/Toggler.ts","../src/components/toolbar/Toolbar.ts","../src/components/ui/popup/Popup.ts","../src/components/ui/dialog/Dialog.ts","../src/components/table/EditNodeDialog.ts","../src/components/table/TableCell.ts","../src/components/table/TableHeaderCell.ts","../src/components/table/TableMaskBox.ts","../src/components/table/TableMask.ts","../src/components/table/TableController.ts","../src/components/line/LineSegment.ts","../src/components/line/LineGroup.ts","../src/components/line/LineController.ts","../src/components/anchor/Anchor.ts","../src/components/anchor/AnchorController.ts","../src/index.ts"],"sourcesContent":["// HTMLElementTagNameMap from lib.dom.d.ts\ninterface HTMLElementTagNameMap {\n  a: HTMLAnchorElement;\n  abbr: HTMLElement;\n  address: HTMLElement;\n  area: HTMLAreaElement;\n  article: HTMLElement;\n  aside: HTMLElement;\n  audio: HTMLAudioElement;\n  b: HTMLElement;\n  base: HTMLBaseElement;\n  bdi: HTMLElement;\n  bdo: HTMLElement;\n  blockquote: HTMLQuoteElement;\n  body: HTMLBodyElement;\n  br: HTMLBRElement;\n  button: HTMLButtonElement;\n  canvas: HTMLCanvasElement;\n  caption: HTMLTableCaptionElement;\n  cite: HTMLElement;\n  code: HTMLElement;\n  col: HTMLTableColElement;\n  colgroup: HTMLTableColElement;\n  data: HTMLDataElement;\n  datalist: HTMLDataListElement;\n  dd: HTMLElement;\n  del: HTMLModElement;\n  details: HTMLDetailsElement;\n  dfn: HTMLElement;\n  dialog: HTMLDialogElement;\n  dir: HTMLDirectoryElement;\n  div: HTMLDivElement;\n  dl: HTMLDListElement;\n  dt: HTMLElement;\n  em: HTMLElement;\n  embed: HTMLEmbedElement;\n  fieldset: HTMLFieldSetElement;\n  figcaption: HTMLElement;\n  figure: HTMLElement;\n  font: HTMLFontElement;\n  footer: HTMLElement;\n  form: HTMLFormElement;\n  frame: HTMLFrameElement;\n  frameset: HTMLFrameSetElement;\n  h1: HTMLHeadingElement;\n  h2: HTMLHeadingElement;\n  h3: HTMLHeadingElement;\n  h4: HTMLHeadingElement;\n  h5: HTMLHeadingElement;\n  h6: HTMLHeadingElement;\n  head: HTMLHeadElement;\n  header: HTMLElement;\n  hgroup: HTMLElement;\n  hr: HTMLHRElement;\n  html: HTMLHtmlElement;\n  i: HTMLElement;\n  iframe: HTMLIFrameElement;\n  img: HTMLImageElement;\n  input: HTMLInputElement;\n  ins: HTMLModElement;\n  kbd: HTMLElement;\n  label: HTMLLabelElement;\n  legend: HTMLLegendElement;\n  li: HTMLLIElement;\n  link: HTMLLinkElement;\n  main: HTMLElement;\n  map: HTMLMapElement;\n  mark: HTMLElement;\n  marquee: HTMLMarqueeElement;\n  menu: HTMLMenuElement;\n  meta: HTMLMetaElement;\n  meter: HTMLMeterElement;\n  nav: HTMLElement;\n  noscript: HTMLElement;\n  object: HTMLObjectElement;\n  ol: HTMLOListElement;\n  optgroup: HTMLOptGroupElement;\n  option: HTMLOptionElement;\n  output: HTMLOutputElement;\n  p: HTMLParagraphElement;\n  param: HTMLParamElement;\n  picture: HTMLPictureElement;\n  pre: HTMLPreElement;\n  progress: HTMLProgressElement;\n  q: HTMLQuoteElement;\n  rp: HTMLElement;\n  rt: HTMLElement;\n  ruby: HTMLElement;\n  s: HTMLElement;\n  samp: HTMLElement;\n  script: HTMLScriptElement;\n  section: HTMLElement;\n  select: HTMLSelectElement;\n  slot: HTMLSlotElement;\n  small: HTMLElement;\n  source: HTMLSourceElement;\n  span: HTMLSpanElement;\n  strong: HTMLElement;\n  style: HTMLStyleElement;\n  sub: HTMLElement;\n  summary: HTMLElement;\n  sup: HTMLElement;\n  table: HTMLTableElement;\n  tbody: HTMLTableSectionElement;\n  td: HTMLTableCellElement;\n  template: HTMLTemplateElement;\n  textarea: HTMLTextAreaElement;\n  tfoot: HTMLTableSectionElement;\n  th: HTMLTableCellElement;\n  thead: HTMLTableSectionElement;\n  time: HTMLTimeElement;\n  title: HTMLTitleElement;\n  tr: HTMLTableRowElement;\n  track: HTMLTrackElement;\n  u: HTMLElement;\n  ul: HTMLUListElement;\n  var: HTMLElement;\n  video: HTMLVideoElement;\n  wbr: HTMLElement;\n}\n\n/**\n * Create an element with designated tagName，and add a className to it,\n * then append to parentNode if has one.\n * @param tagName\n * @param className\n * @param parentNode\n * @returns\n */\nexport function createClassElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  className: string,\n  parentNode: HTMLElement = null,\n): HTMLElementTagNameMap[K] {\n  const el = document.createElement(tagName);\n  el.className = className;\n  if (parentNode) parentNode.appendChild(el);\n  return el;\n}\n\nconst elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches || Element.prototype.webkitMatchesSelector);\n\nexport function matches(element: HTMLElement, query: string): boolean {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\n/**\n * Delete a dom element\n * @param {HTMLElement} element\n */\nexport function removeElement(element: HTMLElement) {\n  if (element) {\n    if (element.remove) {\n      element.remove();\n    } else {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    }\n  }\n}\n\nexport function queryChildren(element: HTMLElement, selector: string): HTMLElement[] {\n  return Array.prototype.filter.call(element.children, (child: HTMLElement) =>\n    matches(child, selector),\n  );\n}\n\nexport function getStyles(element: HTMLElement): CSSStyleDeclaration {\n  return getComputedStyle(element);\n}\n\nexport function setStyles(element: HTMLElement, obj: Partial<CSSStyleDeclaration>) {\n  for (const key in obj) {\n    let val = obj[key];\n    if (typeof val === 'number') {\n      val = `${val}px`;\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nexport const createElementFromHtmlString = (htmlString: string) => {\n  const div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  // Change this to div.childNodes to support multiple top-level nodes.\n  return div.firstChild as HTMLElement;\n};\n","// eslint-disable-next-line @typescript-eslint/ban-types\nexport function debounce<F extends Function>(func: F, wait: number): F {\n  let timeoutID: number;\n\n  if (!Number.isInteger(wait)) {\n    console.warn('Call debounce without a valid number');\n    wait = 300;\n  }\n\n  // conversion through any necessary as it wont satisfy criteria otherwise\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return <any>function (this: any, ...args: any[]) {\n    clearTimeout(timeoutID);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const context = this;\n\n    timeoutID = window.setTimeout(function () {\n      func.apply(context, args);\n    }, wait);\n  };\n}\n\n// check if last column/row deleteable by occupiedList\nexport const setColumnAndRowDeletable = (\n  occupiedList: number[][],\n  totalRows: number,\n  totalColumns: number,\n) => {\n  let canDeleteColumn = true;\n  let canDeleteRow = true;\n  for (let i = 0; i < totalRows - 1; i++) {\n    if (occupiedList[i][totalColumns - 1] !== 0) {\n      canDeleteColumn = false;\n    }\n  }\n  for (let i = 0; i < totalColumns - 1; i++) {\n    if (occupiedList[totalRows - 1][i] !== 0) {\n      canDeleteRow = false;\n    }\n  }\n  return { canDeleteRow, canDeleteColumn };\n};\n\nexport const uniqId = () => {\n  const eles = window.document.getElementsByTagName('body');\n  const bodyObj = eles.item(0);\n  const c = bodyObj.innerHTML.length;\n  const t = new Date().getTime();\n  const n = Math.floor(Math.random() * 100 + 1);\n  return c.toString() + t.toString() + n.toString();\n};\n","const svgIconList = {\n  edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n  plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n  x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n  x2: '<svg t=\"1660284061189\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"59188\" width=\"200\" height=\"200\"><path d=\"M755.626667 695.04c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333L512 572.16 328.96 755.2c-8.533333 8.533333-19.2 12.373333-30.293333 12.373333s-21.76-4.266667-30.293334-12.373333c-16.64-16.64-16.64-43.52 0-60.16l183.04-183.04-183.04-183.04C251.733333 312.32 251.733333 285.44 268.373333 268.8c16.64-16.64 43.52-16.64 60.16 0l183.04 183.04L694.613333 268.8c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l183.466667 183.04z\" p-id=\"59189\"></path></svg>',\n  expand:\n    '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n  move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n  remove:\n    '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n  delete_row:\n    '<svg t=\"1659516333894\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12036\" width=\"200\" height=\"200\"><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.106667-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.586667l-90.453333 90.453333c-8.106667 8.106667-19.2 12.373333-30.293334 12.373333-11.093333 0-21.76-4.266667-30.293333-12.373333-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.88c-16.64-16.64-16.64-43.52 0-60.586667 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.586667L572.16 512l90.88 90.453333zM896 170.666667c0 23.466667-19.2 42.666667-42.666667 42.666666H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666667zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"12037\"></path></svg>',\n  delete_col:\n    '<svg t=\"1659516365239\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12171\" width=\"200\" height=\"200\"><path d=\"M421.546667 663.04c-16.64 16.64-43.52 16.64-60.16 0-8.106667-8.533333-12.373333-19.2-12.373334-30.293333 0-11.093333 4.266667-21.76 12.373334-30.293334l90.453333-90.453333-90.88-90.453333c-8.106667-8.106667-12.373333-19.2-12.373333-30.293334 0-11.093333 4.266667-21.76 12.373333-30.293333 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.586666 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l90.453333 90.453333c16.64 16.64 16.64 43.52 0 60.16-16.64 16.64-43.52 16.64-60.586666 0L512 572.16l-90.453333 90.88zM853.333333 896c-23.466667 0-42.666667-19.2-42.666666-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666667 42.666667zM128 853.333333V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666666 42.666667s-42.666667-19.2-42.666667-42.666667z\" p-id=\"12172\"></path></svg>',\n};\n\nexport default svgIconList;\n","import { createElementFromHtmlString, setStyles } from '../../../lib/dom';\nimport svgIconList from './svgIconList';\n\n// const svgIconList = {\n//   edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n//   plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n//   x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n//   expand:\n//     '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n//   move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n//   remove:\n//     '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n// };\n\nexport class Icon {\n  public element: HTMLElement;\n  constructor(\n    parentElement: HTMLElement | null,\n    options: {\n      name: string;\n      size?: number;\n      color?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    },\n  ) {\n    const targetIcon = svgIconList[options.name];\n    if (targetIcon) {\n      this.element = createElementFromHtmlString(svgIconList[options.name]);\n      const size = options.size ? options.size : 16;\n      const color = options.color ? options.color : '#333333';\n      const styleObj: Partial<CSSStyleDeclaration> = {\n        width: size + 'px',\n        height: size + 'px',\n      };\n      if (options.color) {\n        styleObj.fill = color;\n        styleObj.color = color;\n      }\n      setStyles(this.element, styleObj);\n      if (options.style) {\n        setStyles(this.element, options.style);\n      }\n      if (options.className) this.element.setAttribute('class', options.className);\n      this.element.classList.add('tfgraph-icon');\n      parentElement.appendChild(this.element);\n    }\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { TooltipOptoins } from '../../../types';\n\n/**\n * table-flow-graph popup\n */\nexport default class Tooltip {\n  targetElement: HTMLElement;\n  options: TooltipOptoins;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public dismissTimeoutId: number | null;\n  public showTimeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: TooltipOptoins) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n    this.targetElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.addEventListener('mouseleave', () => this.mouseLeave());\n  }\n\n  public render() {\n    const { placement = 'top', label } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-tooltip', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-tooltip-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-tooltip-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-tooltip-arrow', this.areaElement);\n    if (label) this.boxElement.innerHTML = label;\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    this.rendered = true;\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.targetElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    if (this.element) removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered && !this.showTimeoutId) {\n      this.showTimeoutId = window.setTimeout(() => {\n        this.render();\n      }, 500);\n    }\n    if (this.dismissTimeoutId) {\n      window.clearTimeout(this.dismissTimeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n    this.dismissTimeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 50);\n  }\n}\n","import { createClassElement } from '../../../lib/dom';\nimport { BtnOptions } from '../../../types';\nimport { Icon } from '../icon/Icon';\nimport Tooltip from '../tooltip/Tooltip';\n\n/**\n * table-flow-graph button\n */\nexport default class Button {\n  public element: HTMLElement;\n  public disabled: boolean;\n  public btnToolTip: Tooltip;\n\n  constructor(parentElement: HTMLElement, options: BtnOptions) {\n    const { label, type, onClick, icon, tooltip } = options;\n    let className = 'tfgraph-button is-hoverable';\n    if (options.className) className += ' ' + options.className;\n    className += ' ' + (type ? type : 'default');\n    this.element = createClassElement('button', className, parentElement);\n    if (icon) new Icon(this.element, { name: icon, size: 16, className: label ? 'mr-5' : '' });\n    if (label) {\n      createClassElement('span', '', this.element).innerHTML = label;\n    }\n    if (tooltip) this.btnToolTip = new Tooltip(this.element, { label: tooltip });\n\n    this.element.addEventListener('click', (e) => {\n      if (this.btnToolTip) this.btnToolTip.dismiss();\n      if (this.disabled) return;\n      if (typeof onClick === 'function') {\n        onClick(e);\n      }\n    });\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { createClassElement, setStyles } from '../../../lib/dom';\nimport { TogglerOptions, TogglerButton } from '../../../types';\n\n/**\n * table-flow-graph toggler btn group\n */\nexport default class Toggler {\n  public element: HTMLElement;\n  public indicatorEl: HTMLElement;\n  public btnContainerEl: HTMLElement;\n  public disabled: boolean;\n  public activeIndex: number;\n  public btnList: TogglerButton[] = [];\n\n  constructor(parentElement: HTMLElement, options: TogglerOptions) {\n    const { items, initialActiveIndex, onChange } = options;\n    this.element = createClassElement('div', 'tfgraph-toggler', parentElement);\n    this.indicatorEl = createClassElement('div', 'tfgraph-toggler-indicator', this.element);\n    this.btnContainerEl = createClassElement('div', 'flex flex-row items-center', this.element);\n    items.forEach((item, index) => {\n      const el = createClassElement('button', 'tfgraph-toggler-btn', this.btnContainerEl);\n      el.innerHTML = item.label;\n      this.btnList.push({ itemData: item, el, index });\n      el.addEventListener('click', () => {\n        this.setActive(index);\n        if (typeof onChange === 'function') onChange(item, index);\n      });\n    });\n    this.setActive(typeof initialActiveIndex === 'number' ? initialActiveIndex : 0);\n  }\n\n  setActive(index: number) {\n    if (this.activeIndex !== index) {\n      if (typeof this.activeIndex === 'number') {\n        this.btnList[this.activeIndex].el.classList.remove('active');\n      }\n      this.activeIndex = index;\n      this.btnList[index].el.classList.add('active');\n      this.setActiveIndicator();\n    }\n  }\n\n  setActiveIndicator() {\n    const containerRect = this.btnContainerEl.getBoundingClientRect();\n    const rect = this.btnList[this.activeIndex].el.getBoundingClientRect();\n    setStyles(this.indicatorEl, {\n      width: rect.width + 'px',\n      // this.activeIndex === 0 || this.activeIndex === this.btnList.length - 1\n      //   ? rect.width - 2 + 'px'\n      //   : rect.width + 4 + 'px',\n      left: rect.left - containerRect.left + 4 + 'px',\n      // this.activeIndex === 0\n      //   ? rect.left - containerRect.left + 4 + 'px'\n      //   : rect.left - containerRect.left - 2 + 'px',\n    });\n    // this.indicatorEl.style.width = rect.width + 2 + 'px';\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Toggler from '../ui/toggler/Toggler';\nimport { Mode } from '../../types';\n// import { Icon } from './ui/Icon';\n\n/**\n * table-flow-graph toolbar\n */\nexport default class Toolbar {\n  public element: HTMLElement;\n  public graphInstance: TableFlowGraph;\n  public disabledMask: HTMLElement;\n  public modeToggler: Toggler;\n  public newColumnBtn: Button;\n\n  constructor(parentElement: HTMLElement, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-toolbar', parentElement);\n    this.modeToggler = new Toggler(this.element, {\n      items: [\n        { label: this.graphInstance.options.labels.editMode, id: 'edit' },\n        { label: this.graphInstance.options.labels.previewMode, id: 'preview' },\n      ],\n      onChange: (item) => {\n        graphInstance.changeMode(item.id as Mode);\n        this.setToolbarState();\n      },\n    });\n    // new Icon(this.element, {\n    //   name: 'plus',\n    //   style: { width: '16px', height: '16px' },\n    // });\n    const rightBtns = createClassElement('div', 'flex-row items-center', this.element);\n    this.newColumnBtn = new Button(rightBtns, {\n      icon: 'plus',\n      label: this.graphInstance.options.labels.addColumn,\n      type: 'primary',\n      onClick: () => this.addColumn(),\n    });\n\n    this.disabledMask = createClassElement('div', 'tfgraph-toolbar-mask hidden', this.element);\n    // new Button(rightBtns, { label: '添加行', type: 'primary' });\n\n    // new Button(this.element, { label: 'default' });\n    // new Button(this.element, {\n    //   label: 'clean',\n    //   type: 'clean',\n    //   onClick: () => {\n    //     console.log('clean clicked');\n    //   },\n    // });\n    // new Button(this.element, { label: 'primary', type: 'primary' });\n    // new Button(this.element, { label: 'warning', type: 'warning' });\n    // new Button(this.element, { label: 'danger', type: 'danger' });\n    // new Button(this.element, { label: 'success', type: 'success' });\n    // testBtn.setDisabled();\n    this.setToolbarState();\n  }\n\n  addColumn() {\n    if (typeof this.graphInstance.options.addColumn === 'function') {\n      this.graphInstance.options.addColumn();\n    } else {\n      if (this.graphInstance.hasTableHeader) {\n        console.log('custom add column:::::::::::');\n        // TODO add column dialog\n        // TOOD onAddColumn(columnData)\n      } else {\n        this.graphInstance.refresh(\n          Object.assign({}, this.graphInstance.options, {\n            columns: null,\n            totalColumns: this.graphInstance.options.totalColumns + 1,\n          }),\n        );\n        if (typeof this.graphInstance.options.onAddColumn === 'function') {\n          this.graphInstance.options.onAddColumn();\n        }\n      }\n    }\n  }\n\n  disable() {\n    this.disabledMask.classList.remove('hidden');\n  }\n\n  enable() {\n    this.disabledMask.classList.add('hidden');\n  }\n\n  setToolbarState() {\n    if (\n      this.graphInstance.options.totalColumns >= this.graphInstance.options.maxColumns ||\n      this.graphInstance.mode === 'preview'\n    ) {\n      this.newColumnBtn.element.classList.add('hidden');\n    } else {\n      this.newColumnBtn.element.classList.remove('hidden');\n    }\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { PopupOptions } from '../../../types';\n\n/**\n * table-flow-graph popup\n */\nexport default class Popup {\n  targetElement: HTMLElement;\n  options: PopupOptions;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public timeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: PopupOptions) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n  }\n\n  public render() {\n    const { placement = 'top', contentElement } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-popup', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-popup-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-popup-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-popup-arrow', this.areaElement);\n    if (contentElement) this.boxElement.appendChild(contentElement);\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    this.areaElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.addEventListener('mouseleave', () => this.mouseLeave());\n    this.rendered = true;\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.areaElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered) this.render();\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    this.timeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 200);\n  }\n}\n","import { createClassElement, removeElement } from '../../../lib/dom';\nimport { DialogOptions } from '../../../types';\nimport { Icon } from '../icon/Icon';\n\n/**\n * table-flow-graph dialog\n */\nexport default class Dialog {\n  targetElement: HTMLElement;\n  public element: HTMLElement;\n  public maskElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public titleBarElement: HTMLElement;\n  public closeBtnElement: HTMLElement;\n  public title: string;\n\n  constructor(options: DialogOptions) {\n    this.title = options.title;\n    this.targetElement = options.targetElement\n      ? options.targetElement\n      : document.getElementsByTagName('body')[0];\n    this.element = createClassElement('div', 'tfgraph-dialog', this.targetElement);\n    this.maskElement = createClassElement('div', 'tfgraph-dialog-mask', this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-dialog-box', this.element);\n    this.renderTitleBar();\n    this.boxElement.appendChild(options.contentElement);\n    this.targetElement.classList.add('overflow-hidden');\n    this.maskElement.addEventListener('click', () => this.close());\n  }\n\n  renderTitleBar() {\n    this.titleBarElement = createClassElement('div', 'tfgraph-dialog-bar', this.boxElement);\n    const titleEl = createClassElement('div', 'tfgraph-dialog-bar-title', this.titleBarElement);\n    titleEl.innerText = this.title;\n    this.closeBtnElement = createClassElement(\n      'div',\n      'tfgraph-dialog-bar-btn',\n      this.titleBarElement,\n    );\n    new Icon(this.closeBtnElement, { name: 'x2', size: 18 });\n    this.closeBtnElement.addEventListener('click', () => this.close());\n  }\n\n  public close() {\n    this.closeBtnElement.removeEventListener('click', () => this.close());\n    this.maskElement.removeEventListener('click', () => this.close());\n    removeElement(this.element);\n    this.targetElement.classList.remove('overflow-hidden');\n  }\n}\n","import { TableFlowGraph } from '../..';\nimport { createClassElement } from '../../lib/dom';\nimport { TFGraphNode } from '../../types';\nimport Button from '../ui/button/Button';\nimport Dialog from '../ui/dialog/Dialog';\nimport TableCell from './TableCell';\n\nexport default class EditNodeDialog {\n  public dialog: Dialog | null;\n  public targetCell: TableCell;\n  public title: string;\n  public graphInstance: TableFlowGraph;\n  public contentElement: HTMLElement;\n  public nodeNameInput: HTMLInputElement;\n  public btnConfirm: Button;\n  public btnCancel: Button;\n  public isEdit: boolean;\n\n  constructor(targetCell: TableCell, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.targetCell = targetCell;\n    this.dialog = null;\n    if (targetCell.nodeData) {\n      this.title = targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    this.renderContent();\n  }\n\n  setIsEdit() {\n    if (this.targetCell.nodeData) {\n      this.title = this.targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    if (this.nodeNameInput) this.nodeNameInput.value = this.title;\n  }\n\n  renderContent() {\n    this.contentElement = createClassElement('div', 'flex flex-col w-420 px-15 pb-15');\n    this.nodeNameInput = createClassElement('input', 'tfgraph-input', this.contentElement);\n    this.nodeNameInput.setAttribute('placeholder', this.graphInstance.options.labels.enterNodeName);\n    const btnContainer = createClassElement(\n      'div',\n      'flex flex-row items-center justify-end mt-15',\n      this.contentElement,\n    );\n    this.btnCancel = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.cancel,\n      type: 'default',\n      className: 'mr-10',\n      onClick: () => {\n        this.dialog.close();\n      },\n    });\n    this.btnConfirm = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.confirm,\n      type: 'primary',\n      onClick: () => {\n        // TODO\n        if (this.nodeNameInput.value) {\n          if (this.title !== this.nodeNameInput.value) {\n            if (this.isEdit) {\n              this.targetCell.nodeData.title = this.nodeNameInput.value;\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onEditNode === 'function') {\n                this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n              }\n            } else {\n              const nodeData: TFGraphNode = {\n                id: `node_${this.targetCell.row}_${this.targetCell.column}`,\n                row: this.targetCell.row,\n                column: this.targetCell.column,\n                rowSpan: 1,\n                colSpan: 1,\n                title: this.nodeNameInput.value,\n              };\n              this.graphInstance.options.nodes.push(nodeData);\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onAddNode === 'function') {\n                this.graphInstance.options.onAddNode(nodeData);\n              }\n            }\n          } else {\n            this.dialog.close();\n          }\n        }\n      },\n    });\n  }\n\n  public show() {\n    this.setIsEdit();\n    this.dialog = new Dialog({\n      title: this.isEdit\n        ? this.graphInstance.options.labels.editNode\n        : this.graphInstance.options.labels.addNode,\n      contentElement: this.contentElement,\n    });\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport { TFGraphNode } from '../../types';\nimport Button from '../ui/button/Button';\nimport Popup from '../ui/popup/Popup';\nimport EditNodeDialog from './EditNodeDialog';\n// import Dialog from '../ui/dialog/Dialog';\n\n/**\n * table-flow-graph tabel cell\n */\nexport default class TableCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public nodeEl: HTMLElement;\n  public controlLayer: HTMLElement;\n  public popup: Popup;\n  public nodeData?: TFGraphNode;\n  public hasNode: boolean;\n  public row: number;\n  public column: number;\n  public rowSpan: number;\n  public colSpan: number;\n  public isTarget: boolean; // is moving or resizing this cell\n  public deleteRowBtn: Button;\n  public deleteColBtn: Button;\n  public editDialog: EditNodeDialog | null;\n\n  constructor(\n    parentElement: HTMLElement,\n    data: TFGraphNode | null,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.row = row;\n    this.column = column;\n    this.element = this.createTabelCell(data, row, column, this.graphInstance);\n    parentElement.appendChild(this.element);\n  }\n\n  createTabelCell(\n    data: TFGraphNode | null,\n    row,\n    column,\n    graphInstance: TableFlowGraph,\n  ): HTMLElement {\n    const el = createClassElement('div', 'tfgraph-cell');\n    el.setAttribute('id', `${graphInstance.id}_cell_${row}_${column}`);\n    if (data) {\n      const node = createClassElement('div', 'tfgraph-node');\n      if (data.type) node.classList.add(data.type);\n      if (data.isBtn && this.graphInstance.mode !== 'edit') node.classList.add('isBtn');\n      if (typeof this.graphInstance.options.renderNode === 'function') {\n        node.appendChild(this.graphInstance.options.renderNode(data));\n      } else {\n        node.innerText = data.title;\n      }\n\n      // node.innerText = data.id;\n      el.appendChild(node);\n      this.hasNode = true;\n      this.nodeEl = node;\n      this.nodeData = data;\n      this.rowSpan = data.rowSpan;\n      this.colSpan = data.colSpan;\n    } else {\n      this.rowSpan = 1;\n      this.colSpan = 1;\n      this.hasNode = false;\n    }\n    // set min height base on row span\n    el.style.minHeight = 80 * this.rowSpan + 'px';\n    return el;\n  }\n\n  // cell controls for edit mode\n  setEditControls() {\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    // const controlRowEl = createClassElement(\n    //   'div',\n    //   'flex flex-row items-center justify-center p-15 flex-wrap',\n    //   this.controlLayer,\n    // );\n    this.editDialog = new EditNodeDialog(this, this.graphInstance);\n    if (this.nodeData) {\n      new Button(this.controlLayer, {\n        icon: 'move',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.moveNode,\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        onClick: () => {\n          this.graphInstance.tableController.startMoving(this);\n        },\n      });\n      new Button(this.controlLayer, {\n        icon: 'edit',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.editNode,\n        className: 'absolute left-6 bottom-6 p-0 sm w-28 btn-bl',\n        onClick: () => {\n          if (typeof this.graphInstance.options.editNode === 'function') {\n            this.graphInstance.options.editNode(this.nodeData);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      new Button(this.controlLayer, {\n        icon: 'remove',\n        type: 'danger',\n        tooltip: this.graphInstance.options.labels.deleteNode,\n        className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n        onClick: () => {\n          if (typeof this.graphInstance.options.onDeleteNode === 'function') {\n            this.graphInstance.options.onDeleteNode(this.nodeData);\n          }\n        },\n      });\n      new Button(this.controlLayer, {\n        icon: 'expand',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.adjustNodeSize,\n        className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n        onClick: () => {\n          this.graphInstance.tableController.startResizing(this);\n        },\n      });\n    } else {\n      new Button(this.controlLayer, {\n        icon: 'plus',\n        type: 'primary',\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        tooltip: this.graphInstance.options.labels.addNode,\n        onClick: () => {\n          if (typeof this.graphInstance.options.addNode === 'function') {\n            this.graphInstance.options.addNode(this.row, this.column);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      if (\n        this.graphInstance.options.totalRows > 1 &&\n        this.row === this.graphInstance.options.totalRows - 1\n      ) {\n        this.deleteRowBtn = new Button(this.controlLayer, {\n          icon: 'delete_row',\n          type: 'danger',\n          className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n          tooltip: this.graphInstance.options.labels.deleteRow,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteRow === 'function') {\n              this.graphInstance.options.deleteRow();\n            } else {\n              this.graphInstance.refresh(\n                Object.assign({}, this.graphInstance.options, {\n                  totalRows: this.graphInstance.options.totalRows - 1,\n                }),\n              );\n              if (typeof this.graphInstance.options.onDeleteRow === 'function') {\n                this.graphInstance.options.onDeleteRow();\n              }\n            }\n          },\n        });\n      }\n      if (\n        this.graphInstance.options.totalColumns > 1 &&\n        this.column === this.graphInstance.options.totalColumns - 1\n      ) {\n        this.deleteColBtn = new Button(this.controlLayer, {\n          icon: 'delete_col',\n          type: 'danger',\n          className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n          tooltip: this.graphInstance.options.labels.deleteColumn,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteColumn === 'function') {\n              // custom delete column method\n              this.graphInstance.options.deleteColumn();\n            } else {\n              // auto delete column\n              if (this.graphInstance.hasTableHeader) {\n                // if has options.columns data (table header will be rendered)\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  const targetColumn =\n                    this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n                  this.graphInstance.options.onDeleteColumn(targetColumn);\n                }\n                this.graphInstance.options.columns.pop();\n                this.graphInstance.refresh(Object.assign({}, this.graphInstance.options));\n              } else {\n                // if options.columns data is null or empty\n                this.graphInstance.refresh(\n                  Object.assign({}, this.graphInstance.options, {\n                    columns: null,\n                    totalColumns: this.graphInstance.options.totalColumns - 1,\n                  }),\n                );\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  this.graphInstance.options.onDeleteColumn();\n                }\n              }\n            }\n          },\n        });\n      }\n    }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  public setViewModeControls() {\n    if (this.nodeData) {\n      this.element.addEventListener('click', () => this.onClickNode());\n      if (this.nodeData.showPopup) {\n        let contentEl: HTMLElement;\n        if (typeof this.graphInstance.options.renderNodeHoverPopup === 'function') {\n          contentEl = this.graphInstance.options.renderNodeHoverPopup(this.nodeData);\n        } else {\n          contentEl = createClassElement('div', 'flex flex-col items-center p-30');\n          contentEl.innerHTML = this.nodeData.title;\n        }\n\n        this.popup = new Popup(this.element, {\n          placement: 'top',\n          contentElement: contentEl,\n        });\n        this.element.addEventListener('mouseenter', () => {\n          if (this.popup) {\n            this.popup.mouseEnter();\n          }\n        });\n        this.element.addEventListener('mouseleave', () => {\n          if (this.popup) {\n            this.popup.mouseLeave();\n          }\n        });\n      }\n    }\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n    if (this.deleteRowBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteRow &&\n        this.graphInstance.lineController.canDeleteRow\n      ) {\n        this.deleteRowBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteRowBtn.element.classList.add('hidden');\n      }\n    }\n    if (this.deleteColBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteColumn &&\n        this.graphInstance.lineController.canDeleteColumn\n      ) {\n        this.deleteColBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteColBtn.element.classList.add('hidden');\n      }\n    }\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n\n  onClickNode() {\n    if (typeof this.graphInstance.options.onClickNode === 'function') {\n      this.graphInstance.options.onClickNode(this.nodeData, this.nodeEl);\n    }\n  }\n\n  public setIsTarget(isTarget: boolean) {\n    if (isTarget && !this.isTarget) {\n      this.isTarget = true;\n      this.element.style.opacity = '0.4';\n    } else if (!isTarget && this.isTarget) {\n      this.isTarget = false;\n      this.element.style.opacity = '1';\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport { TFGraphColumn } from '../../types';\nimport Button from '../ui/button/Button';\nimport Popup from '../ui/popup/Popup';\n// import TableHeaderCellMenu from './TableHeaderCellMenu';\n\n/**\n * table-flow-graph tabel header cell\n */\nexport default class TableHeaderCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public columnIndex: number;\n  public isLast: boolean;\n  public columnData: TFGraphColumn;\n  public canDelete: boolean;\n  public canAdd: boolean;\n  public popMenu: Popup | null;\n  // public menu: TableHeaderCellMenu | null;\n  public controlLayer: HTMLElement;\n\n  constructor(\n    parentElement: HTMLElement,\n    columnData: TFGraphColumn,\n    columnIndex: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.columnIndex = columnIndex;\n    this.columnData = columnData;\n    this.isLast = this.columnIndex === this.graphInstance.options.totalColumns - 1;\n    this.element = this.createElement(parentElement);\n  }\n\n  createElement(parentElement: HTMLElement): HTMLElement {\n    const el = createClassElement('th', 'tfgraph-th', parentElement);\n    if (this.columnData.title) {\n      el.innerHTML = this.columnData.title;\n    } else {\n      el.classList.add('empty');\n    }\n    if (this.columnData.width) {\n      // TODO load width value from options\n      let width = this.columnData.width;\n      switch (this.columnData.width) {\n        case 'large':\n          width = '200';\n          break;\n        case 'md':\n          width = '170';\n          break;\n        case 'sm':\n          width = '130';\n          break;\n        case 'xs':\n          width = '105';\n          break;\n        default:\n          width = this.columnData.width;\n          break;\n      }\n      el.setAttribute('width', width);\n    } else {\n      el.setAttribute('width', 'auto');\n    }\n    el.setAttribute('id', `${this.graphInstance.id}_col_${this.columnIndex}`);\n    return el;\n  }\n\n  // header cell controls for edit mode\n  public setEditControls() {\n    // this.menu = new TableHeaderCellMenu(this, {\n    //   showDelete: this.isLast && this.graphInstance.tableController.canDeleteColumn,\n    //   // showAdd: this.isLast,\n    // });\n    // this.popMenu = new Popup(this.element, { placement: 'top', contentElement: this.menu.element });\n    // this.element.addEventListener('mouseenter', () => {\n    //   if (this.popMenu) {\n    //     this.popMenu.mouseEnter();\n    //   }\n    // });\n    // this.element.addEventListener('mouseleave', () => {\n    //   if (this.popMenu) {\n    //     this.popMenu.mouseLeave();\n    //   }\n    // });\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    new Button(this.controlLayer, {\n      icon: 'edit',\n      type: 'primary',\n      className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n      tooltip: this.graphInstance.options.labels.editColumn,\n      onClick: () => {\n        if (typeof this.graphInstance.options.onEditColumn === 'function') {\n          this.graphInstance.options.onEditColumn(this.columnData);\n        }\n      },\n    });\n    // if (this.isLast && this.graphInstance.tableController.canDeleteColumn) {\n    //   new Button(this.controlLayer, {\n    //     icon: 'x',\n    //     type: 'danger',\n    //     className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n    //     tooltip: this.graphInstance.options.labels.deleteColumn,\n    //     onClick: () => {\n    //       if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n    //         this.graphInstance.options.onDeleteColumn(this.columnData);\n    //       }\n    //     },\n    //   });\n    // }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement, setStyles } from '../../lib/dom';\nimport { PositionAndSize } from '../../types';\nimport TableCell from './TableCell';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMaskBox {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public disabled: boolean;\n\n  constructor(parentEl: HTMLElement, targetCell: TableCell, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.disabled = false;\n    this.element = createClassElement('div', 'tfgraph-table-mask-cell', parentEl);\n    const nodeEl = createClassElement('div', 'tfgraph-table-mask-node', this.element);\n    nodeEl.innerText = targetCell.nodeData.title;\n    // setStyles(this.element, {\n    //   top: top + 'px',\n    //   left: left + 'px',\n    //   width: width + 'px',\n    //   height: height + 'px',\n    // });\n    this.element.addEventListener('click', () => {\n      if (!this.disabled) this.graphInstance.tableController.submitCellChange();\n    });\n  }\n\n  setPositinAndSize(pos_size: PositionAndSize) {\n    setStyles(this.element, {\n      top: pos_size.top + 'px',\n      left: pos_size.left + 'px',\n      width: pos_size.width + 'px',\n      height: pos_size.height + 'px',\n    });\n  }\n\n  disable() {\n    // TODO\n    if (!this.disabled) {\n      this.disabled = true;\n      this.element.classList.add('disabled');\n    }\n  }\n\n  enable() {\n    // TODO\n    if (this.disabled) {\n      this.disabled = false;\n      this.element.classList.remove('disabled');\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport { CellPositionAndSize, TableGridRect } from '../../types';\nimport TableCell from './TableCell';\nimport TableMaskBox from './TableMaskBox';\nimport { isEqual, cloneDeep } from 'lodash-es';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMask {\n  graphInstance: TableFlowGraph;\n  public maskBox: TableMaskBox;\n  public element: HTMLElement;\n  public tableGridRectList: TableGridRect[];\n  public mouseGridRect: TableGridRect;\n  public targetCell: TableCell;\n  public targetCellRect: TableGridRect;\n  public resultCellPositionAndSize: CellPositionAndSize;\n  public filteredOccupiedList: number[][]; // 1: occupied, 0: not occupied\n\n  constructor(tableGridRectList: TableGridRect[], graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement(\n      'div',\n      'tfgraph-cell-mask-layer hidden',\n      graphInstance.element,\n    );\n    this.tableGridRectList = tableGridRectList;\n  }\n\n  private showMask(targetTableCell: TableCell) {\n    this.targetCell = targetTableCell;\n    this.targetCell.setIsTarget(true);\n    this.setFilteredOccupiedList();\n    this.maskBox = new TableMaskBox(this.element, this.targetCell, this.graphInstance);\n    this.mouseGridRect = this.getMouseRect();\n    this.targetCellRect = this.getRectByRowAndColumn(this.targetCell.row, this.targetCell.column);\n    this.setMaskBoxStatus();\n  }\n\n  // occupied list without target tabel cell\n  private setFilteredOccupiedList() {\n    this.filteredOccupiedList = cloneDeep(this.graphInstance.tableController.occupiedList);\n    for (let i = this.targetCell.row; i < this.targetCell.row + this.targetCell.rowSpan; i++) {\n      for (\n        let j = this.targetCell.column;\n        j < this.targetCell.column + this.targetCell.colSpan;\n        j++\n      ) {\n        this.filteredOccupiedList[i][j] = 0;\n      }\n    }\n  }\n\n  // set maskbox position/size/disabled etc.\n  private setMaskBoxStatus() {\n    if (this.graphInstance.tableController.isMovingCell) {\n      this.resultCellPositionAndSize = {\n        row:\n          this.mouseGridRect.rowIndex + this.targetCell.rowSpan >\n          this.graphInstance.options.totalRows\n            ? this.graphInstance.options.totalRows - this.targetCell.rowSpan\n            : this.mouseGridRect.rowIndex,\n        column:\n          this.mouseGridRect.columnIndex + this.targetCell.colSpan >\n          this.graphInstance.options.totalColumns\n            ? this.graphInstance.options.totalColumns - this.targetCell.colSpan\n            : this.mouseGridRect.columnIndex,\n        rowSpan: this.targetCell.rowSpan,\n        colSpan: this.targetCell.colSpan,\n      };\n    } else {\n      this.resultCellPositionAndSize = {\n        row: Math.min(this.targetCellRect.rowIndex, this.mouseGridRect.rowIndex),\n        column: Math.min(this.targetCellRect.columnIndex, this.mouseGridRect.columnIndex),\n        rowSpan: Math.abs(this.targetCellRect.rowIndex - this.mouseGridRect.rowIndex) + 1,\n        colSpan: Math.abs(this.targetCellRect.columnIndex - this.mouseGridRect.columnIndex) + 1,\n      };\n    }\n    const topLeftRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row,\n      this.resultCellPositionAndSize.column,\n    );\n    const bottomRightRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan - 1,\n      this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan - 1,\n    );\n    if (bottomRightRect && topLeftRect) {\n      this.maskBox.setPositinAndSize({\n        left: topLeftRect.left,\n        top: topLeftRect.top,\n        width: bottomRightRect.left - topLeftRect.left + bottomRightRect.width + 1,\n        height: bottomRightRect.top - topLeftRect.top + bottomRightRect.height + 1,\n      });\n    }\n\n    // set maskbox disable/enable\n    let doable = true;\n    for (\n      let i = this.resultCellPositionAndSize.row;\n      i <\n      Math.min(\n        this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan,\n        this.graphInstance.options.totalRows,\n      );\n      i++\n    ) {\n      for (\n        let j = this.resultCellPositionAndSize.column;\n        j <\n        Math.min(\n          this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan,\n          this.graphInstance.options.totalColumns,\n        );\n        j++\n      ) {\n        if (!this.filteredOccupiedList[i] || this.filteredOccupiedList[i][j] > 0) {\n          doable = false;\n        }\n      }\n    }\n    if (doable) {\n      this.maskBox.enable();\n    } else {\n      this.maskBox.disable();\n    }\n  }\n\n  public startMask(targetTableCell: TableCell) {\n    this.element.classList.remove('hidden');\n    this.showMask(targetTableCell);\n  }\n\n  public stopMask() {\n    this.element.classList.add('hidden');\n    removeElement(this.maskBox.element);\n    this.targetCell.setIsTarget(false);\n    this.maskBox = null;\n  }\n\n  public submitChange() {\n    this.stopMask();\n    const targetCellPositionAndSize: CellPositionAndSize = {\n      row: this.targetCell.row,\n      column: this.targetCell.column,\n      rowSpan: this.targetCell.rowSpan,\n      colSpan: this.targetCell.colSpan,\n    };\n    if (!isEqual(this.resultCellPositionAndSize, targetCellPositionAndSize)) {\n      // const oldNode = cloneDeep(this.targetCell.nodeData);\n      this.targetCell.nodeData.row = this.resultCellPositionAndSize.row;\n      this.targetCell.nodeData.column = this.resultCellPositionAndSize.column;\n      this.targetCell.nodeData.rowSpan = this.resultCellPositionAndSize.rowSpan;\n      this.targetCell.nodeData.colSpan = this.resultCellPositionAndSize.colSpan;\n      // 提交变更\n      if (typeof this.graphInstance.options.onEditNode === 'function') {\n        this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n      }\n      this.graphInstance.refresh();\n    }\n  }\n\n  // get tableGridRect of current mouse position at\n  private getMouseRect() {\n    const mouseX = this.graphInstance.mousePosition.x;\n    const mouseY = this.graphInstance.mousePosition.y;\n    let targetGridRect: TableGridRect;\n    this.tableGridRectList.forEach((gridRect) => {\n      if (\n        mouseY > gridRect.top &&\n        mouseY < gridRect.top + gridRect.height &&\n        mouseX > gridRect.left &&\n        mouseX < gridRect.left + gridRect.width\n      ) {\n        targetGridRect = gridRect;\n      }\n    });\n    return targetGridRect;\n  }\n\n  private getRectByRowAndColumn(row, column) {\n    // const targetCellRow = this.targetCell.row;\n    // const targetCellColumn = this.targetCell.column;\n    return this.tableGridRectList.find((gridRect) => {\n      return gridRect.rowIndex === row && gridRect.columnIndex === column;\n    });\n  }\n\n  public onMouseMove() {\n    const newRect = this.getMouseRect();\n    if (!isEqual(newRect, this.mouseGridRect)) {\n      if (newRect) {\n        this.mouseGridRect = newRect;\n        this.setMaskBoxStatus();\n      }\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport TableCell from './TableCell';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableMask from './TableMask';\nimport Button from '../ui/button/Button';\nimport { setColumnAndRowDeletable } from '../../lib/utils';\nimport { ColumnSpec, RowSpec, TableGridRect } from '../../types';\n\n/**\n * table-flow-graph tabel\n */\nexport default class Table {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public bottomControlEL: HTMLElement | null;\n  public cells: TableCell[];\n  public headerCells: TableHeaderCell[];\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n  public occupiedList: number[][]; // 1: occupied, 0: not occupied\n  public tableMask: TableMask;\n  public isMovingCell: boolean;\n  public isResizingCell: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('table', 'tfgraph-table', this.graphInstance.element);\n    this.initTableStatus();\n  }\n\n  private initTableStatus() {\n    this.headerCells = [];\n    this.cells = [];\n    this.canDeleteColumn = false;\n    this.canDeleteRow = false;\n    this.occupiedList = [];\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n  }\n\n  // render table and set table controls\n  public renderTable() {\n    this.initTableStatus();\n    this.element.innerHTML = '';\n    this.createHeader();\n    this.createTds();\n    this.createCells();\n    this.setControls();\n  }\n\n  public setControls() {\n    const isEditMode = this.graphInstance.mode === 'edit';\n    if (isEditMode) {\n      const deleteableObj = setColumnAndRowDeletable(\n        this.occupiedList,\n        this.graphInstance.options.totalRows,\n        this.graphInstance.options.totalColumns,\n      );\n      this.canDeleteColumn = deleteableObj.canDeleteColumn;\n      this.canDeleteRow = deleteableObj.canDeleteRow;\n\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setEditControls();\n      });\n\n      // wait for table render ready\n      setTimeout(() => {\n        const columnSpecs: ColumnSpec[] = []; // [{left, width, columnIndex}]\n        const rowSpecs: RowSpec[] = []; // [{ top, height, rowIndex}]\n\n        this.headerCells.forEach((headerCell) => {\n          // set headerCell controls\n          headerCell.setEditControls();\n          // get columns's width and position\n          columnSpecs.push({\n            width: headerCell.element.getBoundingClientRect().width + 1,\n            left: headerCell.element.offsetLeft - 1,\n            columnIndex: headerCell.columnIndex,\n          });\n        });\n\n        // get rowSpects(row top position and height)\n        for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n          const targetCell = this.getMinRowSpanCell(i, 1);\n          const targetCellHeight = targetCell.element.getBoundingClientRect().height;\n          const targetCellRowHeight = targetCellHeight / targetCell.rowSpan;\n          rowSpecs.push({\n            top: targetCell.element.offsetTop - 1 + (i - targetCell.row) * targetCellRowHeight,\n            height: targetCellRowHeight + 1,\n            rowIndex: i,\n          });\n        }\n        // each table grid's left, top, width, height without rowspan and colspan\n        const tableGridRectList: TableGridRect[] = [];\n        rowSpecs.forEach((rowSpec) => {\n          columnSpecs.forEach((columnSpec) => {\n            tableGridRectList.push(Object.assign({}, rowSpec, columnSpec));\n          });\n        });\n        this.tableMask = new TableMask(tableGridRectList, this.graphInstance);\n      }, 1);\n    } else {\n      // TODO click node event\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setViewModeControls();\n      });\n    }\n    this.setBottomControl();\n\n    // TODO set table cell controls\n    // 1. remove last row ✓\n    // 2. empty cell: add node ✓\n    // 3. node cell: edit node content ✓\n    // 4. node cell: adjust node size\n    // 5. node cell: move node position\n  }\n\n  //  recursively find min rowspan cell for targetRow\n  getMinRowSpanCell(row: number, minRowSpan = 1) {\n    let targetRowCell: TableCell | null = null;\n    const rowCells = this.cells.filter((cell) => cell.row === row);\n    if (rowCells.length === 0) {\n      if (row > 0) {\n        targetRowCell = this.getMinRowSpanCell(row - 1, minRowSpan + 1);\n      }\n    } else {\n      let rowSpan = 20;\n      rowCells.forEach((cell) => {\n        if (cell.rowSpan < rowSpan && cell.rowSpan >= minRowSpan) {\n          rowSpan = cell.rowSpan;\n          targetRowCell = cell;\n        }\n      });\n    }\n    return targetRowCell;\n  }\n\n  public onMouseMove() {\n    if (this.isMovingCell || this.isResizingCell) {\n      this.tableMask.onMouseMove();\n    }\n  }\n\n  public startMoving(targetCell: TableCell) {\n    this.isMovingCell = true;\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopMoving() {\n    this.isMovingCell = false;\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  public startResizing(targetCell: TableCell) {\n    this.isResizingCell = true;\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopResizing() {\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  // sumit cell position / size change\n  public submitCellChange() {\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.enable();\n    this.tableMask.submitChange();\n  }\n\n  public setBottomControl() {\n    if (\n      this.graphInstance.mode === 'edit' &&\n      !this.bottomControlEL &&\n      this.graphInstance.options.totalRows < this.graphInstance.options.maxRows\n    ) {\n      this.bottomControlEL = createClassElement(\n        'div',\n        'flex flex-row items-center justify-between mt-15',\n        this.graphInstance.element,\n      );\n      // add row btn\n      new Button(this.bottomControlEL, {\n        icon: 'plus',\n        label: this.graphInstance.options.labels.addRow,\n        className: 'flex-1',\n        onClick: () => {\n          if (typeof this.graphInstance.options.addRow === 'function') {\n            this.graphInstance.options.addRow();\n          } else {\n            this.graphInstance.refresh(\n              Object.assign({}, this.graphInstance.options, {\n                totalRows: this.graphInstance.options.totalRows + 1,\n              }),\n            );\n            if (typeof this.graphInstance.options.onAddRow === 'function') {\n              this.graphInstance.options.onAddRow();\n            }\n          }\n        },\n      });\n    } else {\n      if (this.bottomControlEL) {\n        removeElement(this.bottomControlEL);\n        this.bottomControlEL = null;\n      }\n    }\n  }\n\n  // render table header\n  createHeader() {\n    if (this.graphInstance.options.columns && this.graphInstance.options.columns.length > 0) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      this.graphInstance.options.columns.forEach((column, index) => {\n        const headerCell = new TableHeaderCell(tr, column, index, this.graphInstance);\n        this.headerCells.push(headerCell);\n      });\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render table rows and tds\n  createTds() {\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      tr.setAttribute('id', `${this.graphInstance.id}_tr_${i}`);\n      const occupiedRow: number[] = [];\n      this.occupiedList.push(occupiedRow);\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        const td = createClassElement('td', 'tfgraph-td', tr);\n        td.setAttribute('id', `${this.graphInstance.id}_td_${i}_${j}`);\n        occupiedRow.push(0);\n      }\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render tabel cells\n  createCells() {\n    // spaned table cell id array\n    const spanedTdIds = [];\n    const nodes = this.graphInstance.options.nodes;\n    if (nodes && nodes.length > 0) {\n      nodes.forEach((node) => {\n        // set spanned tabel cell ids\n        if (node.colSpan > 1 || node.rowSpan > 1) {\n          for (let i = node.column; i < node.column + node.colSpan; i++) {\n            for (let j = node.row; j < node.row + node.rowSpan; j++) {\n              if (!(i === node.column && j === node.row)) {\n                spanedTdIds.push(`${this.graphInstance.id}_td_${j}_${i}`);\n                this.occupiedList[j][i] = 1;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    // remove spaned tabell cell element\n    spanedTdIds.forEach((id) => removeElement(document.getElementById(id)));\n\n    // create table cells\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        if (!spanedTdIds.includes(`${this.graphInstance.id}_td_${i}_${j}`)) {\n          const targetNode =\n            nodes && nodes.length > 0\n              ? nodes.find((node) => node.row === i && node.column === j)\n              : null;\n          const targetTd = document.getElementById(`${this.graphInstance.id}_td_${i}_${j}`);\n          if (targetNode) {\n            targetTd.setAttribute('colSpan', targetNode.colSpan.toString());\n            targetTd.setAttribute('rowSpan', targetNode.rowSpan.toString());\n            this.occupiedList[i][j] = 1;\n          }\n          this.cells.push(new TableCell(targetTd, targetNode, i, j, this.graphInstance));\n        }\n      }\n    }\n  }\n}\n","// import { TableFlowGraph } from '../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport { LineOptions, Position } from '../../types';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph line\n */\nexport default class LineSegment {\n  public element: HTMLElement;\n  public thickness: number;\n  public startPointEl: HTMLElement;\n  public endArrowEl: HTMLElement;\n\n  constructor(parent: LineGroup, options: LineOptions) {\n    this.element = createClassElement('div', 'tfgraph-line', parent.element);\n    const { positionA, positionB, thickness = 2, isStart = true, isEnd = true } = options;\n    this.thickness = thickness;\n    if (isStart) this.toggleStartPoint();\n    if (isEnd) this.toggleEndArrow();\n    this.drawLine(positionA, positionB);\n    this.element.addEventListener('mouseenter', () => parent.setHovered(true));\n    this.element.addEventListener('mouseleave', () => parent.setHovered(false));\n    this.element.addEventListener('dblclick', () => parent.onDoubleClick());\n  }\n\n  public setHoverd(hovered = true) {\n    if (hovered) {\n      this.element.classList.add('hovered');\n    } else {\n      this.element.classList.remove('hovered');\n    }\n  }\n\n  public drawLine(positionA: Position, positionB: Position) {\n    // start point\n    const x1 = positionA.x;\n    const y1 = positionA.y;\n    // end point\n    const x2 = positionB.x;\n    const y2 = positionB.y;\n\n    // distance\n    const length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\n    // center\n    const cx = (x1 + x2) / 2 - length / 2;\n    const cy = (y1 + y2) / 2 - this.thickness / 2;\n    // angle\n    const angle = Math.atan2(y2 - y1, x2 - x1) * (180 / Math.PI);\n\n    this.element.style.width = length + this.thickness + 'px';\n    this.element.style.height = this.thickness + 'px';\n    this.element.style.left = cx - 0.5 * this.thickness + 'px';\n    this.element.style.top = cy + 'px';\n    this.element.style.borderRadius = this.thickness + 'px';\n    this.element.style.transform = `rotate(${angle}deg)`;\n  }\n\n  public toggleStartPoint() {\n    if (this.startPointEl) {\n      removeElement(this.startPointEl);\n    } else {\n      this.startPointEl = createClassElement('div', 'start-point', this.element);\n    }\n  }\n\n  public toggleEndArrow() {\n    if (this.endArrowEl) {\n      removeElement(this.endArrowEl);\n    } else {\n      this.endArrowEl = createClassElement('div', 'arrow', this.element);\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport { LineGroupOptions, Position } from '../../types';\nimport Anchor from '../anchor/Anchor';\nimport LineSegment from './LineSegment';\n\n/**\n * table-flow-graph line group\n */\nexport default class LineGroup {\n  public element: HTMLElement;\n  public isDrawingActive: boolean;\n  public anchorIds: string[];\n  public anchors: Anchor[];\n  public cursorLine: LineSegment; // line currently drawing at end\n  public lines: LineSegment[];\n  public cursorLineStartPosition: Position;\n  public graphInstance: TableFlowGraph;\n  public hovered: boolean; // is mouse hover\n\n  constructor(\n    parentElement: HTMLElement,\n    options: LineGroupOptions,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.element = createClassElement('div', 'tfgraph-line-group', parentElement);\n    this.isDrawingActive = options.isDrawingActive;\n    this.anchorIds = options.anchorIds;\n    this.graphInstance = graphInstance;\n    this.drawLines();\n  }\n\n  public addLineSegment(anchorId) {\n    if (!this.anchorIds.includes(anchorId)) {\n      this.anchorIds.push(anchorId);\n      this.drawLines();\n    }\n  }\n\n  public onDoubleClick() {\n    if (this.hovered) {\n      if (this.isDrawingActive) {\n        this.graphInstance.lineController.endDrawLine();\n      } else {\n        this.graphInstance.lineController.removeLineGroup(this);\n      }\n    }\n  }\n\n  public drawLines() {\n    this.anchors = [];\n    this.lines = [];\n    if (this.anchorIds.length === 0) return;\n    this.anchorIds.forEach((anchorId) => {\n      const targetAnchor = this.graphInstance.anchorController.anchors.find(\n        (anchor) => anchor.id === anchorId,\n      );\n      if (targetAnchor) {\n        this.anchors.push(targetAnchor);\n      }\n    });\n    this.element.innerHTML = '';\n    const pointList: Position[] = this.anchors.map((anchor) => ({\n      x: anchor.posX,\n      y: anchor.posY,\n    }));\n    if (pointList.length > 1) {\n      for (let i = 0; i < pointList.length - 1; i++) {\n        const line = new LineSegment(this, {\n          positionA: pointList[i],\n          positionB: pointList[i + 1],\n          thickness: 2,\n          isStart: i === 0,\n          isEnd: i === pointList.length - 2 && !this.isDrawingActive,\n        });\n        this.lines.push(line);\n      }\n    }\n    // add line between last anchor position and mouse position when drawing\n    if (this.isDrawingActive) {\n      this.cursorLineStartPosition = pointList[pointList.length - 1];\n      // draw cursor line\n      this.cursorLine = new LineSegment(this, {\n        positionA: this.cursorLineStartPosition,\n        positionB: this.graphInstance.mousePosition,\n        thickness: 2,\n        isStart: pointList.length === 0,\n        isEnd: true,\n      });\n      this.lines.push(this.cursorLine);\n    }\n  }\n\n  public setHovered(hovered = true) {\n    if (this.graphInstance.mode === 'edit') {\n      this.hovered = hovered;\n      this.lines.forEach((line) => {\n        line.setHoverd(hovered);\n      });\n    }\n  }\n\n  public endDrawing() {\n    // removeElement(this.cursorLine.element);\n    this.isDrawingActive = false;\n    this.drawLines();\n  }\n\n  public escapeDrawing() {\n    if (this.cursorLine) {\n      if (this.anchorIds.length > 0) {\n        this.anchorIds.pop();\n        if (this.anchorIds.length === 0) {\n          removeElement(this.element);\n          // remove the last anchor id in this line group\n          this.graphInstance.lineController.lineAnchorIds =\n            this.graphInstance.lineController.lineAnchorIds.filter(\n              (lineArray) => lineArray.length > 1,\n            );\n          this.graphInstance.lineController.endDrawLine();\n        } else {\n          this.drawLines();\n        }\n      }\n    }\n  }\n\n  public onMouseMove(graphInstance: TableFlowGraph) {\n    if (this.cursorLine) {\n      let targetPosition = graphInstance.mousePosition;\n      // snap to hovered anchor\n      if (\n        graphInstance.anchorController.hoveredAnchor &&\n        !this.anchorIds.includes(graphInstance.anchorController.hoveredAnchor.id)\n      ) {\n        targetPosition = {\n          x: graphInstance.anchorController.hoveredAnchor.posX,\n          y: graphInstance.anchorController.hoveredAnchor.posY,\n        };\n      }\n      this.cursorLine.drawLine(this.cursorLineStartPosition, targetPosition);\n    }\n  }\n}\n","import { cloneDeep, isEqual } from 'lodash-es';\nimport { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement, setStyles } from '../../lib/dom';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph lines controller\n */\nexport default class LineController {\n  public element: HTMLElement;\n  public lineAnchorIds: string[][]; // anchor ids to draw lines\n  public originLineAnchorIds: string[][]; // compare to lineAnchorIds to determine if lines are changed\n  public isDrawingLine: boolean;\n  public currentDrawingLine: LineGroup;\n  public graphInstance: TableFlowGraph;\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-line-layer', this.graphInstance.element);\n    const { options } = this.graphInstance;\n    // this.options.mode = options.mode ? options.mode : 'view';\n    if (options.lines && Array.isArray(options.lines)) {\n      this.lineAnchorIds = options.lines;\n    } else {\n      this.lineAnchorIds = [];\n    }\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public renderLines() {\n    this.element.innerHTML = '';\n    this.lineAnchorIds.forEach((lineGroup) => {\n      new LineGroup(\n        this.element,\n        { anchorIds: lineGroup, isDrawingActive: false },\n        this.graphInstance,\n      );\n    });\n    this.setColAndRowDeletable();\n  }\n\n  public startDrawLine() {\n    this.isDrawingLine = true;\n    this.graphInstance.toolbar.disable();\n    // set lines layer below anchors layer when draing line\n    setStyles(this.element, { zIndex: '1' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '2' });\n\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public endDrawLine() {\n    this.isDrawingLine = false;\n    this.graphInstance.toolbar.enable();\n    // set lines layer above anchors layer when draing line\n    setStyles(this.element, { zIndex: '2' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '1' });\n\n    if (this.currentDrawingLine) {\n      this.currentDrawingLine.endDrawing();\n      if (this.currentDrawingLine.anchorIds.length <= 1) {\n        this.removeLineGroup(this.currentDrawingLine);\n      }\n      this.currentDrawingLine = undefined;\n    }\n    if (!isEqual(this.originLineAnchorIds, this.lineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  setColAndRowDeletable() {\n    const totalRows = this.graphInstance.options.totalRows;\n    const totalColumns = this.graphInstance.options.totalColumns;\n    this.canDeleteColumn = true;\n    this.canDeleteRow = true;\n    this.lineAnchorIds.forEach((line) => {\n      line.forEach((id) => {\n        const idArray = id.split('_');\n        const row = idArray[1];\n        const col = idArray[2];\n        if (parseInt(col) === totalColumns - 1) {\n          this.canDeleteColumn = false;\n        }\n        if (parseInt(row) === totalRows - 1) {\n          this.canDeleteRow = false;\n        }\n      });\n    });\n  }\n\n  public onChangeLines() {\n    this.setColAndRowDeletable();\n    this.graphInstance.options = Object.assign({}, this.graphInstance.options, {\n      lines: this.lineAnchorIds,\n    });\n    if (typeof this.graphInstance.options.onChangeLines === 'function') {\n      this.graphInstance.options.onChangeLines(this.lineAnchorIds);\n    }\n  }\n\n  public removeLineGroup(line: LineGroup) {\n    removeElement(line.element);\n    this.lineAnchorIds = this.lineAnchorIds.filter((lines) => !isEqual(lines, line.anchorIds));\n    if (!isEqual(this.lineAnchorIds, this.originLineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  public createLineGroup(anchorId) {\n    this.startDrawLine();\n    this.lineAnchorIds.push([anchorId]);\n    this.currentDrawingLine = new LineGroup(\n      this.element,\n      { anchorIds: this.lineAnchorIds[this.lineAnchorIds.length - 1], isDrawingActive: true },\n      this.graphInstance,\n    );\n  }\n\n  public addLineSegment(anchorId) {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.addLineSegment(anchorId);\n    }\n  }\n\n  public onMouseMove() {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.onMouseMove(this.graphInstance);\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport { Bearing } from '../../types';\n\n/**\n * Anchor point for drawing lines\n */\nexport default class Anchor {\n  // element of this Anchor\n  public element: HTMLElement;\n  // the bearing relative to this anchor's parent table cell\n  public bearing: Bearing;\n  public elementTr: HTMLElement;\n  public elementCol: HTMLElement;\n  // is the anchor on table cell border or on inner block border(top / bottom)\n  public isOffsetX: boolean;\n  // is the anchor on table cell border or on inner block border(left / right)\n  public isOffsetY: boolean;\n  // id for this Anchor class\n  public id = '';\n  // x position relative to table area\n  public posX = 0;\n  // y position relative to table area\n  public posY = 0;\n  public row: number;\n  public column: number;\n  public hidden = false;\n\n  constructor(\n    bearing: Bearing,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n    isOffsetX = false,\n    isOffsetY = false,\n  ) {\n    this.bearing = bearing;\n    this.isOffsetX = isOffsetX;\n    this.isOffsetY = isOffsetY;\n    this.row = row;\n    this.column = column;\n    this.elementTr = document.getElementById(`${graphInstance.id}_tr_${row}`);\n    this.elementCol = document.getElementById(`${graphInstance.id}_col_${column}`);\n    if (this.elementTr && this.elementCol) {\n      // create dom elements\n      this.element = createClassElement(\n        'div',\n        'tfgraph-anchor',\n        graphInstance.anchorController.element,\n      );\n      createClassElement('div', 'tfgraph-anchor-point', this.element);\n      const area = createClassElement('div', 'tfgraph-anchor-area', this.element);\n      createClassElement('div', 'tfgraph-anchor-circle', area);\n\n      // set Anchor instance id\n      this.id = `anchor_${row}_${column}_${bearing}_${isOffsetX ? 'offsetx' : 'normalx'}_${\n        isOffsetY ? 'offsety' : 'normaly'\n      }`;\n      // set dom id\n      this.element.setAttribute('id', `${graphInstance.id}_${this.id}`);\n\n      graphInstance.anchorController.anchors.push(this);\n      this.setVisible(graphInstance.mode === 'edit');\n      // setTimeout(() => this.setPosition(), 1);\n      this.setPosition();\n      this.element.addEventListener('click', () => {\n        if (!graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.createLineGroup(this.id);\n        } else {\n          graphInstance.lineController.addLineSegment(this.id);\n        }\n      });\n      this.element.addEventListener('mouseenter', () => {\n        graphInstance.anchorController.setHoveredAnchor(this);\n      });\n      this.element.addEventListener('mouseleave', () => {\n        if (graphInstance.anchorController.hoveredAnchor.id === this.id) {\n          graphInstance.anchorController.setHoveredAnchor(undefined);\n        }\n      });\n      // dblclick to finish drawing lines\n      this.element.addEventListener('dblclick', () => {\n        if (graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.endDrawLine();\n        }\n      });\n    }\n  }\n\n  setOnePosition(x, y) {\n    this.posX = x;\n    this.posY = y;\n    this.element.style.left = x + 'px';\n    this.element.style.top = y + 'px';\n    this.element.setAttribute('title', `xpos & ypos=${x},${y}`);\n  }\n\n  public setVisible(visible: boolean) {\n    if (visible) {\n      this.element.classList.remove('hidden');\n    } else {\n      this.element.classList.add('hidden');\n    }\n  }\n\n  public setPosition() {\n    const x_left = this.elementCol.offsetLeft + (this.isOffsetX ? 15 : 0);\n    const x_center = this.elementCol.offsetLeft + 0.5 * this.elementCol.offsetWidth;\n    const x_right =\n      this.elementCol.offsetLeft + this.elementCol.offsetWidth - (this.isOffsetX ? 15 : 0);\n    const y_top = this.elementTr.offsetTop + (this.isOffsetY ? 15 : 0);\n    const y_center = this.elementTr.offsetTop + 0.5 * this.elementTr.offsetHeight;\n    const y_bottom =\n      this.elementTr.offsetTop + this.elementTr.offsetHeight - (this.isOffsetY ? 15 : 0);\n\n    switch (this.bearing) {\n      case 'topleft':\n        this.setOnePosition(x_left, y_top);\n        break;\n      case 'top':\n        this.setOnePosition(x_center, y_top);\n        break;\n      case 'topright':\n        this.setOnePosition(x_right, y_top);\n        break;\n      case 'right':\n        this.setOnePosition(x_right, y_center);\n        break;\n      case 'bottomright':\n        this.setOnePosition(x_right, y_bottom);\n        break;\n      case 'bottom':\n        this.setOnePosition(x_center, y_bottom);\n        break;\n      case 'bottomleft':\n        this.setOnePosition(x_left, y_bottom);\n        break;\n      case 'left':\n        this.setOnePosition(x_left, y_center);\n        break;\n      case 'center':\n        this.setOnePosition(x_center, y_center);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport TableCell from '../table/TableCell';\nimport Anchor from './Anchor';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class AnchorController {\n  public element: HTMLElement;\n  public anchors: Anchor[];\n  public hoveredAnchor: Anchor; // current Anchor that mouse hoverd\n  graphInstance: TableFlowGraph;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.anchors = [];\n    this.element = createClassElement('div', 'tfgraph-anchor-layer', graphInstance.element);\n  }\n\n  public renderAnchors() {\n    this.element.innerHTML = '';\n    this.anchors = [];\n    this.graphInstance.tableController.cells.forEach((cell) => {\n      // console.log('cell:::::::::::', cell);\n      this.createAnchors(cell);\n    });\n  }\n\n  public setHoveredAnchor(anchor: Anchor | undefined) {\n    this.hoveredAnchor = anchor;\n  }\n\n  public resetPosition() {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor) => {\n        anchor.setPosition();\n      });\n    }\n  }\n\n  public setAnchorsVisible(visible: boolean) {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor: Anchor) => {\n        anchor.setVisible(visible);\n      });\n    }\n  }\n\n  // create anchors for one cell\n  createAnchors(cell: TableCell) {\n    for (let row = cell.row; row < cell.row + cell.rowSpan; row++) {\n      for (let col = cell.column; col < cell.column + cell.colSpan; col++) {\n        if (row === 0) {\n          new Anchor('top', row, col, this.graphInstance);\n          new Anchor('topright', row, col, this.graphInstance);\n          if (cell.column === 0) {\n            new Anchor('topleft', row, col, this.graphInstance);\n          }\n        }\n        if (col === 0) {\n          new Anchor('left', row, col, this.graphInstance);\n          new Anchor('bottomleft', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1) {\n          new Anchor('right', row, col, this.graphInstance);\n        }\n        if (row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottom', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1 || row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottomright', row, col, this.graphInstance);\n        }\n        if (cell.hasNode) {\n          if (col === cell.column) {\n            new Anchor('left', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomleft', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (col === cell.column + cell.colSpan - 1) {\n            new Anchor('right', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (row === cell.row) {\n            new Anchor('top', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('topright', row, col, this.graphInstance, false, true);\n            }\n          }\n          if (row === cell.row + cell.rowSpan - 1) {\n            new Anchor('bottom', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, false, true);\n            }\n          }\n        }\n      }\n    }\n    if (!cell.hasNode) {\n      new Anchor('center', cell.row, cell.column, this.graphInstance);\n    }\n  }\n}\n","import './styles/index.scss';\nimport { createClassElement, setStyles } from './lib/dom';\nimport { debounce } from './lib/utils';\nimport { Mode, Position, TFGraphOptions } from './types';\nimport Toolbar from './components/toolbar/Toolbar';\nimport TableController from './components/table/TableController';\nimport LineController from './components/line/LineController';\nimport AnchorController from './components/anchor/AnchorController';\n\n// default options\nconst defaultOptions: TFGraphOptions = {\n  totalColumns: 8,\n  totalRows: 8,\n  maxColumns: 12,\n  maxRows: 30,\n  labels: {\n    editMode: 'Edit Mode',\n    previewMode: 'Preview Mode',\n    editColumn: 'Edit Column',\n    addColumn: 'Add Column',\n    deleteColumn: 'Delete Column',\n    addRow: 'Add Row',\n    deleteRow: 'Delete Row',\n    editNode: 'Edit Node',\n    addNode: 'Add Node',\n    deleteNode: 'Delete Node',\n    adjustNodeSize: 'Adjust Node Size',\n    moveNode: 'Move Node',\n    newNode: 'New Node',\n    enterNodeName: 'Enter node name',\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n  },\n};\n\nexport class TableFlowGraph {\n  public element: HTMLElement;\n  public baseElement: HTMLElement;\n  public options: TFGraphOptions;\n  public id: string;\n  public toolbar: Toolbar;\n  public isAlive: boolean;\n  public hasTableHeader: boolean;\n  public mode: Mode;\n  public mousePosition: Position;\n  public tableController: TableController;\n  public lineController: LineController;\n  public anchorController: AnchorController;\n\n  constructor(el: HTMLElement, options: TFGraphOptions) {\n    if (!el) {\n      throw new Error('no element is specified to initialize TableFlowGraph');\n    } else {\n      this.baseElement = el;\n    }\n\n    // use id as unique key, to support multiple table-flow-graph instances in one page.\n    if (this.baseElement.getAttribute('id')) {\n      this.id = this.baseElement.getAttribute('id');\n    } else {\n      this.id = 'id' + (Math.random() * 100000).toFixed(0);\n    }\n\n    this.init(options);\n\n    window.addEventListener('resize', this, false);\n    window.addEventListener('keydown', this, false);\n    window.addEventListener('mousemove', this, false);\n\n    this.isAlive = true;\n  }\n\n  public init(options: TFGraphOptions) {\n    this.baseElement.innerHTML = '';\n\n    this.options = Object.assign({}, defaultOptions, options);\n    if (options.labels) {\n      this.options.labels = Object.assign({}, defaultOptions.labels, options.labels);\n    }\n    if (typeof this.options.rows !== 'undefined') {\n      this.options.totalRows = this.options.rows.length;\n    }\n    if (this.options.columns && this.options.columns.length > 0) {\n      this.options.totalColumns = this.options.columns.length;\n    }\n    if (!this.options.columns || this.options.columns.length === 0) {\n      this.options.columns = [];\n      this.hasTableHeader = false;\n      for (let i = 0; i < this.options.totalColumns; i++) {\n        this.options.columns.push({\n          width: 'auto',\n        });\n      }\n    } else {\n      this.hasTableHeader = true;\n    }\n    if (this.options.totalRows > this.options.maxRows) {\n      this.options.totalRows = this.options.maxRows;\n    }\n    if (this.options.totalColumns > this.options.maxColumns) {\n      this.options.totalColumns = this.options.maxColumns;\n    }\n\n    // create toolbar and edit state\n    if (this.options.isEditor) {\n      this.mode = 'edit';\n      this.toolbar = new Toolbar(this.baseElement, this);\n    } else {\n      this.mode = 'preview';\n    }\n\n    // create root dom elements and controllers\n    this.element = createClassElement('div', 'tfgraph', this.baseElement);\n    if (this.mode === 'edit') this.element.classList.add('edit');\n    this.lineController = new LineController(this);\n    this.anchorController = new AnchorController(this);\n    this.tableController = new TableController(this);\n\n    this.render();\n  }\n\n  public render() {\n    // render table\n    this.tableController.renderTable();\n\n    // wait for table render ready; TODO set anchor position relative to table cells\n    setTimeout(() => {\n      // render anchors\n      this.anchorController.renderAnchors();\n      // render lines\n      this.lineController.renderLines();\n    }, 1);\n  }\n\n  handleResize = () => {\n    // TODO detailed resize management\n    // this.anchorController.resetPosition();\n    this.refresh();\n  };\n  debouncedHandleResize = debounce(this.handleResize, 500);\n\n  // handle addEventListener events\n  handleEvent(event) {\n    switch (event.type) {\n      case 'resize':\n        this.debouncedHandleResize();\n        break;\n      case 'mousemove':\n        this.onMourseMove(event);\n        break;\n      case 'keydown':\n        this.onKeydown(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onMourseMove(event) {\n    const rect = this.element.getBoundingClientRect();\n    const offsetX = event.clientX - rect.left;\n    const offsetY = event.clientY - rect.top;\n    this.mousePosition = { x: offsetX, y: offsetY };\n    this.lineController.onMouseMove();\n    this.tableController.onMouseMove();\n  }\n\n  onKeydown = (e) => {\n    if (e.code === 'Enter') {\n      // press enter to finish drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.endDrawLine();\n      }\n    } else if (e.code === 'Escape') {\n      // press esc to cancel last anchor point when drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.currentDrawingLine.escapeDrawing();\n      }\n      if (this.tableController.isMovingCell) {\n        this.tableController.stopMoving();\n      }\n      if (this.tableController.isResizingCell) {\n        this.tableController.stopResizing();\n      }\n    }\n  };\n\n  public refresh(options?: TFGraphOptions) {\n    if (!this.isAlive) {\n      return;\n    } else {\n      setTimeout(() => {\n        const height = this.baseElement.getBoundingClientRect().height;\n        // maintain consistent height when rerendering dom elements\n        setStyles(this.baseElement, { height: height + 'px' });\n        this.init(options ? options : this.options);\n        setStyles(this.baseElement, { height: 'auto' });\n      });\n    }\n  }\n\n  public destroy() {\n    if (!this.isAlive) {\n      return;\n    }\n\n    window.removeEventListener('resize', this, false);\n    window.removeEventListener('keydown', this, false);\n    window.removeEventListener('mousemove', this, false);\n\n    this.isAlive = false;\n  }\n\n  public changeMode(mode: Mode) {\n    if (this.mode !== mode) {\n      this.mode = mode;\n      if (mode === 'edit') {\n        this.element.classList.add('edit');\n      } else {\n        this.element.classList.remove('edit');\n      }\n      this.anchorController.setAnchorsVisible(mode === 'edit');\n      this.tableController.renderTable();\n    }\n  }\n}\n"],"names":["createClassElement","tagName","className","parentNode","el","document","createElement","appendChild","removeElement","element","remove","removeChild","setStyles","obj","key","val","concat","style","svgIconList","edit","plus","x","x2","expand","move","delete_row","delete_col","Icon","parentElement","options","htmlString","div","name","this","innerHTML","trim","firstChild","size","color","styleObj","width","height","fill","setAttribute","classList","add","Tooltip","targetElement","_this","rendered","addEventListener","mouseEnter","mouseLeave","prototype","render","_a","_b","placement","label","targetRect","getBoundingClientRect","body","left","top","areaElement","boxElement","arrowElement","areaRect","arrowRect","areaStyleObj","arrowStyleObj","bottom","right","showTimeoutId","window","clearTimeout","dismiss","removeEventListener","setTimeout","dismissTimeoutId","Button","type","onClick","icon","tooltip","btnToolTip","e","disabled","setDisabled","setEnabled","Toggler","btnList","items","initialActiveIndex","onChange","indicatorEl","btnContainerEl","forEach","item","index","push","itemData","setActive","activeIndex","setActiveIndicator","containerRect","rect","Toolbar","graphInstance","modeToggler","labels","editMode","id","previewMode","changeMode","setToolbarState","rightBtns","newColumnBtn","addColumn","disabledMask","hasTableHeader","console","log","refresh","Object","assign","columns","totalColumns","onAddColumn","disable","enable","maxColumns","mode","Popup","contentElement","timeoutId","Dialog","title","getElementsByTagName","maskElement","renderTitleBar","close","titleBarElement","innerText","closeBtnElement","EditNodeDialog","targetCell","dialog","nodeData","isEdit","renderContent","setIsEdit","nodeNameInput","value","enterNodeName","btnContainer","btnCancel","cancel","btnConfirm","confirm","onEditNode","row","column","rowSpan","colSpan","nodes","onAddNode","show","editNode","addNode","TableCell","data","createTabelCell","node","isBtn","renderNode","hasNode","nodeEl","minHeight","setEditControls","controlLayer","editDialog","moveNode","tableController","startMoving","deleteNode","onDeleteNode","adjustNodeSize","startResizing","totalRows","deleteRowBtn","deleteRow","onDeleteRow","deleteColBtn","deleteColumn","onDeleteColumn","targetColumn","pop","onMouseEnter","onMouseLeave","setViewModeControls","onClickNode","showPopup","contentEl","renderNodeHoverPopup","popup","canDeleteRow","lineController","canDeleteColumn","setIsTarget","isTarget","opacity","TableHeaderCell","columnData","columnIndex","isLast","editColumn","onEditColumn","TableMaskBox","parentEl","submitCellChange","setPositinAndSize","pos_size","TableMask","tableGridRectList","showMask","targetTableCell","setFilteredOccupiedList","maskBox","mouseGridRect","getMouseRect","targetCellRect","getRectByRowAndColumn","setMaskBoxStatus","filteredOccupiedList","cloneDeep","occupiedList","i","j","isMovingCell","resultCellPositionAndSize","rowIndex","Math","min","abs","topLeftRect","bottomRightRect","doable","startMask","stopMask","submitChange","targetCellPositionAndSize","isEqual","targetGridRect","mouseX","mousePosition","mouseY","y","gridRect","find","onMouseMove","newRect","Table","initTableStatus","headerCells","cells","isResizingCell","renderTable","createHeader","createTds","createCells","setControls","deleteableObj","setColumnAndRowDeletable","cell","columnSpecs","rowSpecs","headerCell","offsetLeft","getMinRowSpanCell","targetCellRowHeight","offsetTop","rowSpec","columnSpec","tableMask","setBottomControl","minRowSpan","targetRowCell","rowCells","filter","length","rowSpan_1","toolbar","stopMoving","stopResizing","bottomControlEL","maxRows","addRow","onAddRow","tr_1","tr","occupiedRow","spanedTdIds","getElementById","includes","this_1","targetNode","targetTd","toString","LineSegment","parent","positionA","positionB","thickness","isStart","_c","isEnd","toggleStartPoint","toggleEndArrow","drawLine","setHovered","onDoubleClick","setHoverd","hovered","x1","y1","y2","sqrt","cx","cy","angle","atan2","PI","borderRadius","transform","startPointEl","endArrowEl","LineGroup","isDrawingActive","anchorIds","drawLines","addLineSegment","anchorId","endDrawLine","removeLineGroup","anchors","lines","targetAnchor","anchorController","anchor","pointList","map","posX","posY","line","cursorLineStartPosition","cursorLine","endDrawing","escapeDrawing","lineAnchorIds","lineArray","targetPosition","hoveredAnchor","LineController","Array","isArray","originLineAnchorIds","renderLines","lineGroup","setColAndRowDeletable","startDrawLine","isDrawingLine","zIndex","currentDrawingLine","undefined","onChangeLines","idArray","split","col","parseInt","createLineGroup","Anchor","bearing","isOffsetX","isOffsetY","hidden","elementTr","elementCol","area","setVisible","setPosition","setHoveredAnchor","setOnePosition","visible","x_left","x_center","offsetWidth","x_right","y_top","y_center","offsetHeight","y_bottom","AnchorController","renderAnchors","createAnchors","resetPosition","setAnchorsVisible","defaultOptions","newNode","TableFlowGraph","func","wait","timeoutID","handleResize","debouncedHandleResize","Number","isInteger","warn","args","_i","arguments","context","apply","onKeydown","code","Error","baseElement","getAttribute","random","toFixed","init","isAlive","rows","isEditor","TableController","handleEvent","event","onMourseMove","offsetX","clientX","offsetY","clientY","destroy"],"mappings":"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"}