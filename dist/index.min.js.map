{"version":3,"file":"index.min.js","sources":["../src/lib/dom.ts","../src/lib/utils.ts","../src/components/ui/icon/svgIconList.ts","../src/components/ui/icon/Icon.ts","../src/components/ui/tooltip/Tooltip.ts","../src/components/ui/button/Button.ts","../src/components/ui/toggler/Toggler.ts","../src/components/ui/dialog/Dialog.ts","../src/components/table/EditColumnDialog.ts","../src/components/toolbar/HintManager.ts","../src/components/toolbar/Toolbar.ts","../src/components/table/node/nodeUtils.ts","../node_modules/tslib/tslib.es6.js","../src/components/table/node/NodeTypeBtn.ts","../src/components/table/node/NodeTypePicker.ts","../src/components/table/node/EditNodeDialog.ts","../src/components/ui/popup/Popup.ts","../src/components/table/node/Node.ts","../src/components/table/TableCell.ts","../src/components/table/TableHeaderCell.ts","../src/components/table/TableMaskBox.ts","../src/components/table/TableMask.ts","../src/components/table/TableController.ts","../src/components/line/LineSegment.ts","../src/components/line/LineGroup.ts","../src/components/line/LineController.ts","../src/components/anchor/Anchor.ts","../src/components/anchor/AnchorController.ts","../src/index.ts"],"sourcesContent":["// HTMLElementTagNameMap from lib.dom.d.ts\ninterface HTMLElementTagNameMap {\n  a: HTMLAnchorElement;\n  abbr: HTMLElement;\n  address: HTMLElement;\n  area: HTMLAreaElement;\n  article: HTMLElement;\n  aside: HTMLElement;\n  audio: HTMLAudioElement;\n  b: HTMLElement;\n  base: HTMLBaseElement;\n  bdi: HTMLElement;\n  bdo: HTMLElement;\n  blockquote: HTMLQuoteElement;\n  body: HTMLBodyElement;\n  br: HTMLBRElement;\n  button: HTMLButtonElement;\n  canvas: HTMLCanvasElement;\n  caption: HTMLTableCaptionElement;\n  cite: HTMLElement;\n  code: HTMLElement;\n  col: HTMLTableColElement;\n  colgroup: HTMLTableColElement;\n  data: HTMLDataElement;\n  datalist: HTMLDataListElement;\n  dd: HTMLElement;\n  del: HTMLModElement;\n  details: HTMLDetailsElement;\n  dfn: HTMLElement;\n  dialog: HTMLDialogElement;\n  dir: HTMLDirectoryElement;\n  div: HTMLDivElement;\n  dl: HTMLDListElement;\n  dt: HTMLElement;\n  em: HTMLElement;\n  embed: HTMLEmbedElement;\n  fieldset: HTMLFieldSetElement;\n  figcaption: HTMLElement;\n  figure: HTMLElement;\n  font: HTMLFontElement;\n  footer: HTMLElement;\n  form: HTMLFormElement;\n  frame: HTMLFrameElement;\n  frameset: HTMLFrameSetElement;\n  h1: HTMLHeadingElement;\n  h2: HTMLHeadingElement;\n  h3: HTMLHeadingElement;\n  h4: HTMLHeadingElement;\n  h5: HTMLHeadingElement;\n  h6: HTMLHeadingElement;\n  head: HTMLHeadElement;\n  header: HTMLElement;\n  hgroup: HTMLElement;\n  hr: HTMLHRElement;\n  html: HTMLHtmlElement;\n  i: HTMLElement;\n  iframe: HTMLIFrameElement;\n  img: HTMLImageElement;\n  input: HTMLInputElement;\n  ins: HTMLModElement;\n  kbd: HTMLElement;\n  label: HTMLLabelElement;\n  legend: HTMLLegendElement;\n  li: HTMLLIElement;\n  link: HTMLLinkElement;\n  main: HTMLElement;\n  map: HTMLMapElement;\n  mark: HTMLElement;\n  marquee: HTMLMarqueeElement;\n  menu: HTMLMenuElement;\n  meta: HTMLMetaElement;\n  meter: HTMLMeterElement;\n  nav: HTMLElement;\n  noscript: HTMLElement;\n  object: HTMLObjectElement;\n  ol: HTMLOListElement;\n  optgroup: HTMLOptGroupElement;\n  option: HTMLOptionElement;\n  output: HTMLOutputElement;\n  p: HTMLParagraphElement;\n  param: HTMLParamElement;\n  picture: HTMLPictureElement;\n  pre: HTMLPreElement;\n  progress: HTMLProgressElement;\n  q: HTMLQuoteElement;\n  rp: HTMLElement;\n  rt: HTMLElement;\n  ruby: HTMLElement;\n  s: HTMLElement;\n  samp: HTMLElement;\n  script: HTMLScriptElement;\n  section: HTMLElement;\n  select: HTMLSelectElement;\n  slot: HTMLSlotElement;\n  small: HTMLElement;\n  source: HTMLSourceElement;\n  span: HTMLSpanElement;\n  strong: HTMLElement;\n  style: HTMLStyleElement;\n  sub: HTMLElement;\n  summary: HTMLElement;\n  sup: HTMLElement;\n  table: HTMLTableElement;\n  tbody: HTMLTableSectionElement;\n  td: HTMLTableCellElement;\n  template: HTMLTemplateElement;\n  textarea: HTMLTextAreaElement;\n  tfoot: HTMLTableSectionElement;\n  th: HTMLTableCellElement;\n  thead: HTMLTableSectionElement;\n  time: HTMLTimeElement;\n  title: HTMLTitleElement;\n  tr: HTMLTableRowElement;\n  track: HTMLTrackElement;\n  u: HTMLElement;\n  ul: HTMLUListElement;\n  var: HTMLElement;\n  video: HTMLVideoElement;\n  wbr: HTMLElement;\n}\n\n/**\n * Create an element with designated tagName，and add a className to it,\n * then append to parentNode if has one.\n * @param tagName\n * @param className\n * @param parentNode\n * @returns\n */\nexport function createClassElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  className: string,\n  parentNode: HTMLElement = null,\n): HTMLElementTagNameMap[K] {\n  const el = document.createElement(tagName);\n  if (className) el.className = className;\n  if (parentNode) parentNode.appendChild(el);\n  return el;\n}\n\nconst elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches || Element.prototype.webkitMatchesSelector);\n\nexport function matches(element: HTMLElement, query: string): boolean {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\n/**\n * Delete a dom element\n * @param {HTMLElement} element\n */\nexport function removeElement(element: HTMLElement) {\n  if (element) {\n    if (element.remove) {\n      element.remove();\n    } else {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    }\n  }\n}\n\nexport function queryChildren(element: HTMLElement, selector: string): HTMLElement[] {\n  return Array.prototype.filter.call(element.children, (child: HTMLElement) =>\n    matches(child, selector),\n  );\n}\n\nexport function getStyles(element: HTMLElement): CSSStyleDeclaration {\n  return getComputedStyle(element);\n}\n\nexport function setStyles(element: HTMLElement, obj: Partial<CSSStyleDeclaration>) {\n  for (const key in obj) {\n    let val = obj[key];\n    if (typeof val === 'number') {\n      val = `${val}px`;\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nexport const createElementFromHtmlString = (htmlString: string) => {\n  const div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  // Change this to div.childNodes to support multiple top-level nodes.\n  return div.firstChild as HTMLElement;\n};\n","import { FunctionalColor, ColorValue, Color } from '..';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function debounce<F extends Function>(func: F, wait: number): F {\n  let timeoutID: number;\n\n  if (!Number.isInteger(wait)) {\n    console.warn('Call debounce without a valid number');\n    wait = 300;\n  }\n\n  // conversion through any necessary as it wont satisfy criteria otherwise\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return <any>function (this: any, ...args: any[]) {\n    clearTimeout(timeoutID);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const context = this;\n\n    timeoutID = window.setTimeout(function () {\n      func.apply(context, args);\n    }, wait);\n  };\n}\n\n// check if last column/row deleteable by occupiedList\nexport const setColumnAndRowDeletable = (\n  occupiedList: number[][],\n  totalRows: number,\n  totalColumns: number,\n) => {\n  let canDeleteColumn = true;\n  let canDeleteRow = true;\n  for (let i = 0; i < totalRows - 1; i++) {\n    if (occupiedList[i][totalColumns - 1] !== 0) {\n      canDeleteColumn = false;\n    }\n  }\n  for (let i = 0; i < totalColumns - 1; i++) {\n    if (occupiedList[totalRows - 1][i] !== 0) {\n      canDeleteRow = false;\n    }\n  }\n  return { canDeleteRow, canDeleteColumn };\n};\n\nexport const uniqId = () => {\n  const eles = window.document.getElementsByTagName('body');\n  const bodyObj = eles.item(0);\n  const c = bodyObj.innerHTML.length;\n  const t = new Date().getTime();\n  const n = Math.floor(Math.random() * 100 + 1);\n  return c.toString() + t.toString() + n.toString();\n};\n\nexport const ColorPlate: Record<Color, ColorValue> = {\n  red: '#FA5151',\n  orange: '#F96A00',\n  yellow: '#FCB42C',\n  green: '#59BE41',\n  cyan: '#28E1F0',\n  blue: '#3366FF',\n  purple: '#8433FF',\n  gray: '#9398A5',\n  black: '#000000',\n  white: '#FFFFFF',\n};\n\nexport const FunctionalColors: Record<FunctionalColor, ColorValue> = {\n  primary: ColorPlate.blue,\n  success: ColorPlate.green,\n  info: ColorPlate.gray,\n  warning: ColorPlate.orange,\n  danger: ColorPlate.red,\n};\n","const svgIconList = {\n  edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n  plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n  x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n  x2: '<svg t=\"1660284061189\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"59188\" width=\"200\" height=\"200\"><path d=\"M755.626667 695.04c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333L512 572.16 328.96 755.2c-8.533333 8.533333-19.2 12.373333-30.293333 12.373333s-21.76-4.266667-30.293334-12.373333c-16.64-16.64-16.64-43.52 0-60.16l183.04-183.04-183.04-183.04C251.733333 312.32 251.733333 285.44 268.373333 268.8c16.64-16.64 43.52-16.64 60.16 0l183.04 183.04L694.613333 268.8c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l183.466667 183.04z\" p-id=\"59189\"></path></svg>',\n  expand:\n    '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n  move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n  remove:\n    '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n  delete_row:\n    '<svg t=\"1659516333894\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12036\" width=\"200\" height=\"200\"><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.106667-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.586667l-90.453333 90.453333c-8.106667 8.106667-19.2 12.373333-30.293334 12.373333-11.093333 0-21.76-4.266667-30.293333-12.373333-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.88c-16.64-16.64-16.64-43.52 0-60.586667 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.586667L572.16 512l90.88 90.453333zM896 170.666667c0 23.466667-19.2 42.666667-42.666667 42.666666H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666667zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"12037\"></path></svg>',\n  delete_col:\n    '<svg t=\"1659516365239\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12171\" width=\"200\" height=\"200\"><path d=\"M421.546667 663.04c-16.64 16.64-43.52 16.64-60.16 0-8.106667-8.533333-12.373333-19.2-12.373334-30.293333 0-11.093333 4.266667-21.76 12.373334-30.293334l90.453333-90.453333-90.88-90.453333c-8.106667-8.106667-12.373333-19.2-12.373333-30.293334 0-11.093333 4.266667-21.76 12.373333-30.293333 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.586666 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l90.453333 90.453333c16.64 16.64 16.64 43.52 0 60.16-16.64 16.64-43.52 16.64-60.586666 0L512 572.16l-90.453333 90.88zM853.333333 896c-23.466667 0-42.666667-19.2-42.666666-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666667 42.666667zM128 853.333333V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666666 42.666667s-42.666667-19.2-42.666667-42.666667z\" p-id=\"12172\"></path></svg>',\n  check:\n    '<svg t=\"1661393057943\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"13190\" width=\"200\" height=\"200\"><path d=\"M426.666667 746.666667c-11.093333 0-21.76-4.266667-30.293334-12.373334l-213.333333-213.333333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l183.04 183.04L779.946667 290.133333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-384 384c-7.68 8.106667-18.346667 12.373333-29.44 12.373334z\" p-id=\"13191\"></path></svg>',\n};\n\nexport default svgIconList;\n","import { createElementFromHtmlString, setStyles } from '../../../lib/dom';\nimport svgIconList from './svgIconList';\n\n// const svgIconList = {\n//   edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n//   plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n//   x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n//   expand:\n//     '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n//   move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n//   remove:\n//     '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n// };\n\nexport class Icon {\n  public element: HTMLElement;\n  constructor(\n    parentElement: HTMLElement | null,\n    options: {\n      name: string;\n      size?: number;\n      color?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    },\n  ) {\n    const targetIcon = svgIconList[options.name];\n    if (targetIcon) {\n      this.element = createElementFromHtmlString(svgIconList[options.name]);\n      const size = options.size ? options.size : 16;\n      const color = options.color ? options.color : '#333333';\n      const styleObj: Partial<CSSStyleDeclaration> = {\n        width: size + 'px',\n        height: size + 'px',\n      };\n      if (options.color) {\n        styleObj.fill = color;\n        styleObj.color = color;\n      }\n      setStyles(this.element, styleObj);\n      if (options.style) {\n        setStyles(this.element, options.style);\n      }\n      if (options.className) this.element.setAttribute('class', options.className);\n      this.element.classList.add('tfgraph-icon');\n      parentElement.appendChild(this.element);\n    }\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { TooltipOptoins } from '../../../index';\n\n/**\n * table-flow-graph popup\n */\nexport default class Tooltip {\n  targetElement: HTMLElement;\n  options: TooltipOptoins;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public dismissTimeoutId: number | null;\n  public showTimeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: TooltipOptoins) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n    this.targetElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.addEventListener('mouseleave', () => this.mouseLeave());\n  }\n\n  public render() {\n    const { placement = 'top', label } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-tooltip tfgraph-wrapper', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-tooltip-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-tooltip-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-tooltip-arrow', this.areaElement);\n    if (label) this.boxElement.innerHTML = label;\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    document.addEventListener('scroll', () => this.updatePosition());\n    this.rendered = true;\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n  }\n\n  public updatePosition() {\n    const targetRect = this.targetElement.getBoundingClientRect();\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.targetElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    document.removeEventListener('scroll', () => this.updatePosition());\n    if (this.element) removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered && !this.showTimeoutId) {\n      this.showTimeoutId = window.setTimeout(() => {\n        this.render();\n      }, 500);\n    }\n    if (this.dismissTimeoutId) {\n      window.clearTimeout(this.dismissTimeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n    this.dismissTimeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 50);\n  }\n}\n","import { createClassElement } from '../../../lib/dom';\nimport { BtnOptions } from '../../../index';\nimport { Icon } from '../icon/Icon';\nimport Tooltip from '../tooltip/Tooltip';\n\n/**\n * table-flow-graph button\n */\nexport default class Button {\n  public element: HTMLElement;\n  public disabled: boolean;\n  public btnToolTip: Tooltip;\n\n  constructor(parentElement: HTMLElement, options: BtnOptions) {\n    const { label, type, onClick, icon, tooltip } = options;\n    let className = 'tfgraph-button is-hoverable';\n    if (options.className) className += ' ' + options.className;\n    className += ' ' + (type ? type : 'default');\n    this.element = createClassElement('button', className, parentElement);\n    if (icon) new Icon(this.element, { name: icon, size: 16, className: label ? 'mr-5' : '' });\n    if (label) {\n      createClassElement('span', '', this.element).innerHTML = label;\n    }\n    if (tooltip) this.btnToolTip = new Tooltip(this.element, { label: tooltip });\n\n    this.element.addEventListener('click', (e) => {\n      if (this.btnToolTip) this.btnToolTip.dismiss();\n      if (this.disabled) return;\n      if (typeof onClick === 'function') {\n        onClick(e);\n      }\n    });\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { createClassElement, setStyles } from '../../../lib/dom';\nimport { TogglerOptions, TogglerButton } from '../../../index';\n\n/**\n * table-flow-graph toggler btn group\n */\nexport default class Toggler {\n  public element: HTMLElement;\n  public indicatorEl: HTMLElement;\n  public btnContainerEl: HTMLElement;\n  public disabled: boolean;\n  public activeIndex: number;\n  public btnList: TogglerButton[] = [];\n\n  constructor(parentElement: HTMLElement, options: TogglerOptions) {\n    const { items, initialActiveIndex, onChange } = options;\n    this.element = createClassElement('div', 'tfgraph-toggler', parentElement);\n    this.indicatorEl = createClassElement('div', 'tfgraph-toggler-indicator', this.element);\n    this.btnContainerEl = createClassElement('div', 'flex flex-row items-center', this.element);\n    items.forEach((item, index) => {\n      const el = createClassElement('button', 'tfgraph-toggler-btn', this.btnContainerEl);\n      el.innerHTML = item.label;\n      this.btnList.push({ itemData: item, el, index });\n      el.addEventListener('click', () => {\n        this.setActive(index);\n        if (typeof onChange === 'function') onChange(item, index);\n      });\n    });\n    this.setActive(typeof initialActiveIndex === 'number' ? initialActiveIndex : 0);\n  }\n\n  setActive(index: number) {\n    if (this.activeIndex !== index) {\n      if (typeof this.activeIndex === 'number') {\n        this.btnList[this.activeIndex].el.classList.remove('active');\n      }\n      this.activeIndex = index;\n      this.btnList[index].el.classList.add('active');\n      this.setActiveIndicator();\n    }\n  }\n\n  setActiveIndicator() {\n    const containerRect = this.btnContainerEl.getBoundingClientRect();\n    const rect = this.btnList[this.activeIndex].el.getBoundingClientRect();\n    setStyles(this.indicatorEl, {\n      width: rect.width + 'px',\n      // this.activeIndex === 0 || this.activeIndex === this.btnList.length - 1\n      //   ? rect.width - 2 + 'px'\n      //   : rect.width + 4 + 'px',\n      left: rect.left - containerRect.left + 4 + 'px',\n      // this.activeIndex === 0\n      //   ? rect.left - containerRect.left + 4 + 'px'\n      //   : rect.left - containerRect.left - 2 + 'px',\n    });\n    // this.indicatorEl.style.width = rect.width + 2 + 'px';\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { createClassElement, removeElement } from '../../../lib/dom';\nimport { DialogOptions } from '../../../index';\nimport { Icon } from '../icon/Icon';\n\n/**\n * table-flow-graph dialog\n */\nexport default class Dialog {\n  targetElement: HTMLElement;\n  public element: HTMLElement;\n  public maskElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public titleBarElement: HTMLElement;\n  public closeBtnElement: HTMLElement;\n  public title: string;\n\n  constructor(options: DialogOptions) {\n    this.title = options.title;\n    this.targetElement = options.targetElement\n      ? options.targetElement\n      : document.getElementsByTagName('body')[0];\n    this.element = createClassElement('div', 'tfgraph-dialog tfgraph-wrapper', this.targetElement);\n    this.maskElement = createClassElement('div', 'tfgraph-dialog-mask', this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-dialog-box', this.element);\n    this.renderTitleBar();\n    this.boxElement.appendChild(options.contentElement);\n    this.targetElement.classList.add('overflow-hidden');\n    this.maskElement.addEventListener('click', () => this.close());\n  }\n\n  renderTitleBar() {\n    this.titleBarElement = createClassElement('div', 'tfgraph-dialog-bar', this.boxElement);\n    const titleEl = createClassElement('div', 'tfgraph-dialog-bar-title', this.titleBarElement);\n    titleEl.innerText = this.title;\n    this.closeBtnElement = createClassElement(\n      'div',\n      'tfgraph-dialog-bar-btn',\n      this.titleBarElement,\n    );\n    new Icon(this.closeBtnElement, { name: 'x2', size: 18 });\n    this.closeBtnElement.addEventListener('click', () => this.close());\n  }\n\n  public close() {\n    this.closeBtnElement.removeEventListener('click', () => this.close());\n    this.maskElement.removeEventListener('click', () => this.close());\n    removeElement(this.element);\n    this.targetElement.classList.remove('overflow-hidden');\n  }\n}\n","import { TableFlowGraph, TFGraphColumn } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Dialog from '../ui/dialog/Dialog';\nimport TableHeaderCell from './TableHeaderCell';\n\nexport default class EditColumnDialog {\n  public dialog: Dialog | null;\n  public targetHeaderCell: TableHeaderCell;\n  public title: string;\n  public graphInstance: TableFlowGraph;\n  public contentElement: HTMLElement;\n  public inputEl: HTMLInputElement;\n  public btnConfirm: Button;\n  public btnCancel: Button;\n  public isEdit: boolean;\n\n  constructor(graphInstance: TableFlowGraph, targetHeaderCell?: TableHeaderCell) {\n    this.graphInstance = graphInstance;\n    this.dialog = null;\n    this.targetHeaderCell = targetHeaderCell;\n    this.setIsEdit();\n    this.renderContent();\n  }\n\n  setIsEdit() {\n    if (this.targetHeaderCell) {\n      this.title = this.targetHeaderCell.columnData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    if (this.inputEl) this.inputEl.value = this.title;\n  }\n\n  renderContent() {\n    this.contentElement = createClassElement('div', 'flex flex-col w-420 px-15 pb-15');\n    this.inputEl = createClassElement('input', 'tfgraph-input', this.contentElement);\n    this.inputEl.setAttribute('placeholder', this.graphInstance.options.labels.enterColumnName);\n    const btnContainer = createClassElement(\n      'div',\n      'flex flex-row items-center justify-end mt-15',\n      this.contentElement,\n    );\n    this.btnCancel = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.cancel,\n      type: 'default',\n      className: 'mr-10',\n      onClick: () => {\n        this.dialog.close();\n      },\n    });\n    this.btnConfirm = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.confirm,\n      type: 'primary',\n      onClick: () => {\n        if (this.inputEl.value) {\n          if (this.title !== this.inputEl.value) {\n            if (this.isEdit) {\n              this.targetHeaderCell.columnData.title = this.inputEl.value;\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onEditColumn === 'function') {\n                this.graphInstance.options.onEditColumn(this.targetHeaderCell.columnData);\n              }\n            } else {\n              const colData: TFGraphColumn = {\n                id: `header_col_${this.graphInstance.options.totalColumns}`,\n                title: this.inputEl.value,\n              };\n              this.graphInstance.options.columns.push(colData);\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onAddColumn === 'function') {\n                this.graphInstance.options.onAddColumn(colData);\n              }\n            }\n          } else {\n            this.dialog.close();\n          }\n        }\n      },\n    });\n  }\n\n  public show() {\n    this.setIsEdit();\n    this.dialog = new Dialog({\n      title: this.isEdit\n        ? this.graphInstance.options.labels.editColumn\n        : this.graphInstance.options.labels.addColumn,\n      contentElement: this.contentElement,\n    });\n  }\n}\n","import { TableFlowGraph, HintType } from '../../index';\n\nexport default class HintManager {\n  public targetEl: HTMLElement;\n  public currentHintState: HintType;\n  public graphInstance: TableFlowGraph;\n\n  constructor(targetEl: HTMLElement, graphInstance: TableFlowGraph) {\n    this.targetEl = targetEl;\n    this.graphInstance = graphInstance;\n    this.currentHintState = 'idel';\n    this.targetEl.innerText = '';\n  }\n\n  setHint(hintState: HintType) {\n    this.currentHintState = hintState;\n    switch (this.currentHintState) {\n      case 'idel':\n        this.targetEl.innerText = '';\n        break;\n      case 'drawLine':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_drawLine;\n        break;\n      case 'hoverLine':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_hoverLine;\n        break;\n      case 'hoverAnchor':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_hoverAnchor;\n        break;\n      case 'moveNode':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_moveNode;\n        break;\n      case 'resizeNode':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_resizeNode;\n        break;\n      default:\n        this.targetEl.innerText = '';\n        break;\n    }\n  }\n}\n","import { TableFlowGraph, Mode } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Toggler from '../ui/toggler/Toggler';\nimport EditColumnDialog from '../table/EditColumnDialog';\nimport HintManager from './HintManager';\n// import { Icon } from './ui/Icon';\n\n/**\n * table-flow-graph toolbar\n */\nexport default class Toolbar {\n  public element: HTMLElement;\n  public graphInstance: TableFlowGraph;\n  public disabledMask: HTMLElement;\n  public modeToggler: Toggler;\n  public hintEl: HTMLElement;\n  public hintMgr: HintManager;\n  public newColumnBtn: Button;\n  public addColDialog: EditColumnDialog;\n\n  constructor(parentElement: HTMLElement, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-toolbar', parentElement);\n    this.modeToggler = new Toggler(this.element, {\n      items: [\n        { label: this.graphInstance.options.labels.editMode, id: 'edit' },\n        { label: this.graphInstance.options.labels.previewMode, id: 'preview' },\n      ],\n      onChange: (item) => {\n        graphInstance.changeMode(item.id as Mode);\n        this.setToolbarState();\n      },\n    });\n    this.hintEl = createClassElement('div', 'tfgraph-toolbar-hint', this.element);\n    this.hintMgr = new HintManager(this.hintEl, this.graphInstance);\n    // new Icon(this.element, {\n    //   name: 'plus',\n    //   style: { width: '16px', height: '16px' },\n    // });\n    const rightBtns = createClassElement('div', 'flex-row items-center', this.element);\n    this.newColumnBtn = new Button(rightBtns, {\n      icon: 'plus',\n      label: this.graphInstance.options.labels.addColumn,\n      type: 'primary',\n      onClick: () => this.addColumn(),\n    });\n\n    this.disabledMask = createClassElement('div', 'tfgraph-toolbar-mask hidden', this.element);\n    // new Button(rightBtns, { label: '添加行', type: 'primary' });\n\n    // new Button(this.element, { label: 'default' });\n    // new Button(this.element, {\n    //   label: 'clean',\n    //   type: 'clean',\n    //   onClick: () => {\n    //     console.log('clean clicked');\n    //   },\n    // });\n    // new Button(this.element, { label: 'primary', type: 'primary' });\n    // new Button(this.element, { label: 'warning', type: 'warning' });\n    // new Button(this.element, { label: 'danger', type: 'danger' });\n    // new Button(this.element, { label: 'success', type: 'success' });\n    // testBtn.setDisabled();\n    this.setToolbarState();\n    this.addColDialog = new EditColumnDialog(this.graphInstance);\n  }\n\n  addColumn() {\n    if (typeof this.graphInstance.options.addColumn === 'function') {\n      this.graphInstance.options.addColumn();\n    } else {\n      if (this.graphInstance.hasTableHeader) {\n        // add column dialog\n        this.addColDialog.show();\n      } else {\n        this.graphInstance.refresh(\n          Object.assign({}, this.graphInstance.options, {\n            columns: null,\n            totalColumns: this.graphInstance.options.totalColumns + 1,\n          }),\n        );\n        if (typeof this.graphInstance.options.onAddColumn === 'function') {\n          this.graphInstance.options.onAddColumn();\n        }\n      }\n    }\n  }\n\n  disable() {\n    this.disabledMask.classList.remove('hidden');\n  }\n\n  enable() {\n    this.disabledMask.classList.add('hidden');\n  }\n\n  setToolbarState() {\n    if (\n      this.graphInstance.options.totalColumns >= this.graphInstance.options.maxColumns ||\n      this.graphInstance.mode === 'preview'\n    ) {\n      this.newColumnBtn.element.classList.add('hidden');\n    } else {\n      this.newColumnBtn.element.classList.remove('hidden');\n    }\n  }\n}\n","import { NodeStyleType, NodeType } from '../../..';\nimport { ColorPlate, FunctionalColors } from '../../../lib/utils';\n\nexport const NodeTypeList: NodeType[] = [\n  'default',\n  'primary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n\nexport const NodeStyle: NodeStyleType = {\n  default: {\n    type: 'default',\n    normalStyle: {\n      borderColor: '#dcdcdc',\n      backgroundColor: '#f3f4f7',\n      color: '#333333',\n    },\n    hoverStyle: {\n      borderColor: '#aaaaaa',\n      backgroundColor: '#aaaaaa',\n      color: '#333333',\n    },\n  },\n  primary: {\n    type: 'primary',\n    normalStyle: {\n      borderColor: FunctionalColors.primary,\n      backgroundColor: FunctionalColors.primary + '10',\n      color: FunctionalColors.primary,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.primary,\n      backgroundColor: FunctionalColors.primary,\n      color: ColorPlate.white,\n    },\n  },\n  success: {\n    type: 'success',\n    normalStyle: {\n      borderColor: FunctionalColors.success,\n      backgroundColor: FunctionalColors.success + '10',\n      color: FunctionalColors.success,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.success,\n      backgroundColor: FunctionalColors.success,\n      color: ColorPlate.white,\n    },\n  },\n  info: {\n    type: 'info',\n    normalStyle: {\n      borderColor: FunctionalColors.info,\n      backgroundColor: FunctionalColors.info + '10',\n      color: '#333333',\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.info,\n      backgroundColor: FunctionalColors.info,\n      color: ColorPlate.white,\n    },\n  },\n  warning: {\n    type: 'warning',\n    normalStyle: {\n      borderColor: FunctionalColors.warning,\n      backgroundColor: FunctionalColors.warning + '10',\n      color: FunctionalColors.warning,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.warning,\n      backgroundColor: FunctionalColors.warning,\n      color: ColorPlate.white,\n    },\n  },\n  danger: {\n    type: 'danger',\n    normalStyle: {\n      borderColor: FunctionalColors.danger,\n      backgroundColor: FunctionalColors.danger + '10',\n      color: FunctionalColors.danger,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.danger,\n      backgroundColor: FunctionalColors.danger,\n      color: ColorPlate.white,\n    },\n  },\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NodeType } from '../../..';\nimport { createClassElement, setStyles } from '../../../lib/dom';\nimport { Icon } from '../../ui/icon/Icon';\nimport { NodeStyle } from './nodeUtils';\n\nconst btnStyle: Partial<CSSStyleDeclaration> = {\n  border: '2px solid transparent',\n  padding: '2px',\n  borderRadius: '4px',\n  margin: '0 5px 0 0',\n  cursor: 'pointer',\n};\n\nexport interface NodeTypeBtnOption {\n  parentEl: HTMLElement;\n  type: NodeType;\n  onClick: (type: NodeType) => void;\n}\n\nexport class NodeTypeBtn {\n  public element: HTMLElement;\n  public type: NodeType;\n  public active: boolean;\n  private nodeEl: HTMLElement;\n  private icon: Icon;\n  private hovered: boolean;\n  private option: NodeTypeBtnOption;\n\n  constructor(option: NodeTypeBtnOption) {\n    this.option = option;\n    this.type = this.option.type;\n    this.hovered = false;\n    this.createNodeTypeBtn();\n  }\n\n  private createNodeTypeBtn() {\n    this.element = createClassElement('div', 'm5', this.option.parentEl);\n    setStyles(this.element, btnStyle);\n    this.nodeEl = createClassElement(\n      'div',\n      'w-16 h-16 flex items-center justify-center',\n      this.element,\n    );\n    setStyles(this.nodeEl, {\n      ...NodeStyle[this.type].normalStyle,\n      borderWidth: '1px',\n      borderRadius: '2px',\n      borderStyle: 'solid',\n    });\n    this.icon = new Icon(this.nodeEl, {\n      name: 'check',\n      size: 16,\n      color: '#FFFFFF',\n      className: this.active ? '' : 'hidden',\n    });\n    this.element.addEventListener('click', () => {\n      if (typeof this.option.onClick === 'function') this.option.onClick(this.type);\n    });\n    this.element.addEventListener('mouseenter', () => this.toggleHover(true));\n    this.element.addEventListener('mouseleave', () => this.toggleHover(false));\n  }\n\n  private toggleHover(hovered: boolean) {\n    this.hovered = hovered;\n    if (this.hovered) {\n      setStyles(this.element, { borderColor: NodeStyle[this.type].hoverStyle.borderColor });\n      // setStyles(this.nodeEl, NodeStyle[this.type].hoverStyle);\n    } else {\n      if (!this.active) {\n        setStyles(this.element, { borderColor: 'transparent' });\n        // setStyles(this.nodeEl, NodeStyle[this.type].normalStyle);\n      }\n    }\n  }\n\n  public toggleActive(active: boolean) {\n    this.active = active;\n    if (this.active) {\n      this.icon.element.classList.remove('hidden');\n      setStyles(this.element, { borderColor: NodeStyle[this.type].hoverStyle.borderColor });\n      setStyles(this.nodeEl, NodeStyle[this.type].hoverStyle);\n    } else {\n      this.icon.element.classList.add('hidden');\n      if (!this.hovered) {\n        setStyles(this.element, { borderColor: 'transparent' });\n        setStyles(this.nodeEl, NodeStyle[this.type].normalStyle);\n      }\n    }\n  }\n}\n","import { NodeType } from '../../..';\nimport { NodeTypeList } from './nodeUtils';\nimport { NodeTypeBtn } from './NodeTypeBtn';\nimport { createClassElement } from '../../../lib/dom';\n\nexport interface NodeTypePickerOption {\n  parentEl: HTMLElement;\n  initialType: NodeType;\n  onChange: (type: NodeType) => void;\n}\n\nexport default class NodeTypePicker {\n  public currentType: NodeType;\n  public element: HTMLElement;\n  private option: NodeTypePickerOption;\n  private btnList: NodeTypeBtn[];\n\n  constructor(option: NodeTypePickerOption) {\n    this.option = option;\n    this.currentType = this.option.initialType;\n    this.element = createClassElement('div', 'flex flex-row items-center', this.option.parentEl);\n    this.btnList = [];\n    NodeTypeList.forEach((type) => {\n      const btn = new NodeTypeBtn({\n        parentEl: this.element,\n        type,\n        onClick: (t) => this.clickType(t),\n      });\n      if (this.currentType === type) btn.toggleActive(true);\n      this.btnList.push(btn);\n    });\n  }\n\n  private clickType(t: NodeType) {\n    if (this.currentType !== t) {\n      this.currentType = t;\n      this.setActiveType();\n      if (typeof this.option.onChange === 'function') this.option.onChange(t);\n    }\n  }\n\n  setActiveType() {\n    this.btnList.forEach((btn) => {\n      if (this.currentType === btn.type) {\n        if (!btn.active) btn.toggleActive(true);\n      } else if (btn.active) {\n        btn.toggleActive(false);\n      }\n    });\n  }\n}\n","import { NodeType, TableFlowGraph, TFGraphNode } from '../../../index';\nimport { createClassElement } from '../../../lib/dom';\nimport Button from '../../ui/button/Button';\nimport Dialog from '../../ui/dialog/Dialog';\nimport NodeTypePicker from './NodeTypePicker';\nimport TableCell from '../TableCell';\n\nexport default class EditNodeDialog {\n  public dialog: Dialog | null;\n  public targetCell: TableCell;\n  public title: string;\n  public graphInstance: TableFlowGraph;\n  public contentElement: HTMLElement;\n  public nodeNameInput: HTMLInputElement;\n  public btnConfirm: Button;\n  public btnCancel: Button;\n  public isEdit: boolean;\n  public type: NodeType;\n  public initialType: NodeType;\n\n  constructor(graphInstance: TableFlowGraph, targetCell: TableCell) {\n    this.graphInstance = graphInstance;\n    this.targetCell = targetCell;\n    this.dialog = null;\n    this.type =\n      this.targetCell.nodeData && this.targetCell.nodeData.type\n        ? this.targetCell.nodeData.type\n        : 'default';\n    this.initialType = this.type;\n    if (targetCell.nodeData) {\n      this.title = targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    this.renderContent();\n  }\n\n  setIsEdit() {\n    if (this.targetCell.nodeData) {\n      this.title = this.targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    if (this.nodeNameInput) this.nodeNameInput.value = this.title;\n  }\n\n  renderContent() {\n    this.contentElement = createClassElement('div', 'flex flex-col w-420 px-15 pb-15');\n    this.nodeNameInput = createClassElement('input', 'tfgraph-input mb-20', this.contentElement);\n    this.nodeNameInput.setAttribute('placeholder', this.graphInstance.options.labels.enterNodeName);\n    new NodeTypePicker({\n      parentEl: this.contentElement,\n      initialType: this.type,\n      onChange: (type) => {\n        this.type = type;\n      },\n    });\n    const btnContainer = createClassElement(\n      'div',\n      'flex flex-row items-center justify-end mt-15',\n      this.contentElement,\n    );\n    this.btnCancel = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.cancel,\n      type: 'default',\n      className: 'mr-10',\n      onClick: () => {\n        this.dialog.close();\n      },\n    });\n    this.btnConfirm = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.confirm,\n      type: 'primary',\n      onClick: () => {\n        if (this.nodeNameInput.value) {\n          if (this.title !== this.nodeNameInput.value || this.initialType !== this.type) {\n            if (this.isEdit) {\n              this.targetCell.nodeData.title = this.nodeNameInput.value;\n              this.targetCell.nodeData.type = this.type;\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onEditNode === 'function') {\n                this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n              }\n            } else {\n              const nodeData: TFGraphNode = {\n                id: `node_${this.targetCell.row}_${this.targetCell.column}`,\n                row: this.targetCell.row,\n                column: this.targetCell.column,\n                rowSpan: 1,\n                colSpan: 1,\n                title: this.nodeNameInput.value,\n                type: this.type,\n              };\n              this.graphInstance.options.nodes.push(nodeData);\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onAddNode === 'function') {\n                this.graphInstance.options.onAddNode(nodeData);\n              }\n            }\n          } else {\n            this.dialog.close();\n          }\n        }\n      },\n    });\n  }\n\n  public show() {\n    this.setIsEdit();\n    this.dialog = new Dialog({\n      title: this.isEdit\n        ? this.graphInstance.options.labels.editNode\n        : this.graphInstance.options.labels.addNode,\n      contentElement: this.contentElement,\n    });\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { PopupOptions } from '../../../index';\n\n/**\n * table-flow-graph popup\n */\nexport default class Popup {\n  targetElement: HTMLElement;\n  options: PopupOptions;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public timeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: PopupOptions) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n    this.targetElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.addEventListener('mouseleave', () => this.mouseLeave());\n  }\n\n  public render() {\n    const { placement = 'top', contentElement } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-popup tfgraph-wrapper', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-popup-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-popup-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-popup-arrow', this.areaElement);\n    if (contentElement) this.boxElement.appendChild(contentElement);\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 10 + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 10 + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    this.areaElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.addEventListener('mouseleave', () => this.mouseLeave());\n    document.addEventListener('scroll', () => this.updatePosition());\n    this.rendered = true;\n  }\n\n  public updatePosition() {\n    const targetRect = this.targetElement.getBoundingClientRect();\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.areaElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    document.removeEventListener('scroll', () => this.updatePosition());\n    removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered) this.render();\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    this.timeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 200);\n  }\n}\n","import { NodeType, TableFlowGraph } from '../../../index';\nimport { createClassElement, setStyles } from '../../../lib/dom';\nimport Popup from '../../ui/popup/Popup';\nimport TableCell from '../TableCell';\nimport { NodeStyle } from './nodeUtils';\n\n/**\n * table-flow-graph node\n */\nexport default class Node {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public tableCell: TableCell;\n  public type: NodeType;\n  private hoverd: boolean;\n\n  constructor(cell: TableCell) {\n    this.tableCell = cell;\n    this.graphInstance = this.tableCell.graphInstance;\n    this.hoverd = false;\n    this.createNode();\n  }\n\n  createNode() {\n    this.element = createClassElement('div', 'tfgraph-node', this.tableCell.element);\n    const data = this.tableCell.nodeData;\n    this.type = data.type ? data.type : 'default';\n    setStyles(this.element, NodeStyle[this.type].normalStyle);\n    if (data.isBtn && this.graphInstance.mode !== 'edit') this.element.classList.add('isBtn');\n    if (typeof this.graphInstance.options.renderNode === 'function') {\n      this.element.appendChild(this.graphInstance.options.renderNode(data));\n    } else {\n      this.element.innerText = data.title;\n    }\n  }\n\n  toggleHovered(hovered: boolean) {\n    this.hoverd = hovered;\n    this.element.setAttribute('style', '');\n    if (this.hoverd) {\n      setStyles(this.element, NodeStyle[this.type].hoverStyle);\n    } else {\n      setStyles(this.element, NodeStyle[this.type].normalStyle);\n    }\n  }\n\n  public setViewerControls() {\n    this.element.addEventListener('click', () => this.onClickNode());\n    if (this.tableCell.nodeData.isBtn) {\n      this.element.addEventListener('mouseenter', () => this.toggleHovered(true));\n      this.element.addEventListener('mouseleave', () => this.toggleHovered(false));\n    }\n    if (this.tableCell.nodeData.showPopup) {\n      let contentEl: HTMLElement;\n      if (typeof this.graphInstance.options.renderNodeHoverPopup === 'function') {\n        contentEl = this.graphInstance.options.renderNodeHoverPopup(this.tableCell.nodeData);\n      } else {\n        contentEl = createClassElement('div', 'flex flex-col items-center p-30');\n        contentEl.innerHTML = this.tableCell.nodeData.title;\n      }\n\n      new Popup(this.element, {\n        placement: 'top',\n        contentElement: contentEl,\n      });\n    }\n  }\n\n  onClickNode() {\n    if (typeof this.graphInstance.options.onClickNode === 'function') {\n      this.graphInstance.options.onClickNode(this.tableCell.nodeData, this.element);\n    }\n  }\n}\n","import { TableFlowGraph, TFGraphNode } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport EditNodeDialog from './node/EditNodeDialog';\nimport { remove } from 'lodash-es';\nimport Node from './node/Node';\n\n/**\n * table-flow-graph tabel cell\n */\nexport default class TableCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public controlLayer: HTMLElement;\n  public node: Node;\n  public nodeData?: TFGraphNode;\n  public hasNode: boolean;\n  public row: number;\n  public column: number;\n  public rowSpan: number;\n  public colSpan: number;\n  public isTarget: boolean; // is moving or resizing this cell\n  public deleteRowBtn: Button;\n  public deleteColBtn: Button;\n  public editDialog: EditNodeDialog | null;\n\n  constructor(\n    parentElement: HTMLElement,\n    data: TFGraphNode | null,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.row = row;\n    this.column = column;\n    this.createTabelCell(data, row, column, parentElement);\n  }\n\n  createTabelCell(data: TFGraphNode | null, row, column, parentElement) {\n    this.element = createClassElement('div', 'tfgraph-cell', parentElement);\n    this.element.setAttribute('id', `${this.graphInstance.id}_cell_${row}_${column}`);\n    if (data) {\n      this.hasNode = true;\n      this.nodeData = data;\n      this.rowSpan = data.rowSpan;\n      this.colSpan = data.colSpan;\n      this.node = new Node(this);\n    } else {\n      this.rowSpan = 1;\n      this.colSpan = 1;\n      this.hasNode = false;\n    }\n    // set min height base on row span\n    this.element.style.minHeight = 80 * this.rowSpan + 'px';\n  }\n\n  // cell controls for edit mode\n  setEditorControls() {\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    this.editDialog = new EditNodeDialog(this.graphInstance, this);\n    if (this.nodeData) {\n      // Move node button\n      new Button(this.controlLayer, {\n        icon: 'move',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.moveNode,\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        onClick: () => {\n          this.graphInstance.tableController.startMoving(this);\n        },\n      });\n      // Edit node button\n      new Button(this.controlLayer, {\n        icon: 'edit',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.editNode,\n        className: 'absolute left-6 bottom-6 p-0 sm w-28 btn-bl',\n        onClick: () => {\n          if (typeof this.graphInstance.options.editNode === 'function') {\n            this.graphInstance.options.editNode(this.nodeData);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      // Delete node button\n      new Button(this.controlLayer, {\n        icon: 'x',\n        type: 'danger',\n        tooltip: this.graphInstance.options.labels.deleteNode,\n        className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n        onClick: () => {\n          if (typeof this.graphInstance.options.deleteNode === 'function') {\n            this.graphInstance.options.deleteNode(this.nodeData);\n          } else {\n            // TODO remove cell\n            remove(this.graphInstance.options.nodes, (item) => {\n              return this.nodeData.id === item.id;\n            });\n            this.graphInstance.refresh();\n            if (typeof this.graphInstance.options.onDeleteNode === 'function') {\n              this.graphInstance.options.onDeleteNode(this.nodeData);\n            }\n          }\n        },\n      });\n      // Resize node button\n      new Button(this.controlLayer, {\n        icon: 'expand',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.adjustNodeSize,\n        className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n        onClick: () => {\n          this.graphInstance.tableController.startResizing(this);\n        },\n      });\n    } else {\n      // Add node button\n      new Button(this.controlLayer, {\n        icon: 'plus',\n        type: 'primary',\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        tooltip: this.graphInstance.options.labels.addNode,\n        onClick: () => {\n          if (typeof this.graphInstance.options.addNode === 'function') {\n            this.graphInstance.options.addNode(this.row, this.column);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      if (\n        this.graphInstance.options.totalRows > 1 &&\n        this.row === this.graphInstance.options.totalRows - 1\n      ) {\n        // Delete row button\n        this.deleteRowBtn = new Button(this.controlLayer, {\n          icon: 'delete_row',\n          type: 'danger',\n          className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n          tooltip: this.graphInstance.options.labels.deleteRow,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteRow === 'function') {\n              this.graphInstance.options.deleteRow();\n            } else {\n              this.graphInstance.refresh(\n                Object.assign({}, this.graphInstance.options, {\n                  totalRows: this.graphInstance.options.totalRows - 1,\n                }),\n              );\n              if (typeof this.graphInstance.options.onDeleteRow === 'function') {\n                this.graphInstance.options.onDeleteRow();\n              }\n            }\n          },\n        });\n      }\n      if (\n        this.graphInstance.options.totalColumns > 1 &&\n        this.column === this.graphInstance.options.totalColumns - 1\n      ) {\n        // Delete column button\n        this.deleteColBtn = new Button(this.controlLayer, {\n          icon: 'delete_col',\n          type: 'danger',\n          className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n          tooltip: this.graphInstance.options.labels.deleteColumn,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteColumn === 'function') {\n              // custom delete column method\n              const targetColumn =\n                this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n              this.graphInstance.options.deleteColumn(targetColumn);\n            } else {\n              // auto delete column\n              if (this.graphInstance.hasTableHeader) {\n                // if has options.columns data (table header will be rendered)\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  const targetColumn =\n                    this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n                  this.graphInstance.options.onDeleteColumn(targetColumn);\n                }\n                this.graphInstance.options.columns.pop();\n                this.graphInstance.refresh(Object.assign({}, this.graphInstance.options));\n              } else {\n                // if options.columns data is null or empty\n                this.graphInstance.refresh(\n                  Object.assign({}, this.graphInstance.options, {\n                    columns: null,\n                    totalColumns: this.graphInstance.options.totalColumns - 1,\n                  }),\n                );\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  this.graphInstance.options.onDeleteColumn();\n                }\n              }\n            }\n          },\n        });\n      }\n    }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  public setViewerControls() {\n    if (this.nodeData) {\n      this.node.setViewerControls();\n    }\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n    if (this.deleteRowBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteRow &&\n        this.graphInstance.lineController.canDeleteRow\n      ) {\n        this.deleteRowBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteRowBtn.element.classList.add('hidden');\n      }\n    }\n    if (this.deleteColBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteColumn &&\n        this.graphInstance.lineController.canDeleteColumn\n      ) {\n        this.deleteColBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteColBtn.element.classList.add('hidden');\n      }\n    }\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n\n  public setIsTarget(isTarget: boolean) {\n    if (isTarget && !this.isTarget) {\n      this.isTarget = true;\n      this.element.style.opacity = '0.4';\n    } else if (!isTarget && this.isTarget) {\n      this.isTarget = false;\n      this.element.style.opacity = '1';\n    }\n  }\n}\n","import { TableFlowGraph, TFGraphColumn } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Popup from '../ui/popup/Popup';\n// import TableHeaderCellMenu from './TableHeaderCellMenu';\nimport EditColumnDialog from './EditColumnDialog';\n\n/**\n * table-flow-graph tabel header cell\n */\nexport default class TableHeaderCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public columnIndex: number;\n  public isLast: boolean;\n  public columnData: TFGraphColumn;\n  public canDelete: boolean;\n  public canAdd: boolean;\n  public popMenu: Popup | null;\n  // public menu: TableHeaderCellMenu | null;\n  public controlLayer: HTMLElement;\n  public editColDialog: EditColumnDialog;\n\n  constructor(\n    parentElement: HTMLElement,\n    columnData: TFGraphColumn,\n    columnIndex: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.columnIndex = columnIndex;\n    this.columnData = columnData;\n    this.isLast = this.columnIndex === this.graphInstance.options.totalColumns - 1;\n    this.element = this.createElement(parentElement);\n  }\n\n  createElement(parentElement: HTMLElement): HTMLElement {\n    const el = createClassElement('th', 'tfgraph-th', parentElement);\n    if (this.columnData.title) {\n      el.innerHTML = this.columnData.title;\n    } else {\n      el.classList.add('empty');\n    }\n    if (this.columnData.width) {\n      // TODO load width value from options\n      let width = this.columnData.width;\n      switch (this.columnData.width) {\n        case 'lg':\n          width = '200';\n          break;\n        case 'md':\n          width = '170';\n          break;\n        case 'sm':\n          width = '130';\n          break;\n        case 'xs':\n          width = '105';\n          break;\n        default:\n          width = this.columnData.width;\n          break;\n      }\n      el.setAttribute('width', width);\n    } else {\n      el.setAttribute('width', 'auto');\n    }\n    el.setAttribute('id', `${this.graphInstance.id}_col_${this.columnIndex}`);\n    return el;\n  }\n\n  // header cell controls for edit mode\n  public setEditControls() {\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    this.editColDialog = new EditColumnDialog(this.graphInstance, this);\n    new Button(this.controlLayer, {\n      icon: 'edit',\n      type: 'primary',\n      className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n      tooltip: this.graphInstance.options.labels.editColumn,\n      onClick: () => {\n        if (typeof this.graphInstance.options.editColumn === 'function') {\n          this.graphInstance.options.editColumn(this.columnData);\n        } else {\n          this.editColDialog.show();\n        }\n      },\n    });\n    if (this.isLast && this.graphInstance.tableController.canDeleteColumn) {\n      new Button(this.controlLayer, {\n        icon: 'delete_col',\n        type: 'danger',\n        className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n        tooltip: this.graphInstance.options.labels.deleteColumn,\n        onClick: () => {\n          if (typeof this.graphInstance.options.deleteColumn === 'function') {\n            // custom delete column method\n            this.graphInstance.options.deleteColumn(this.columnData);\n          } else {\n            if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n              // const targetColumn = this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n              this.graphInstance.options.onDeleteColumn(this.columnData);\n            }\n            this.graphInstance.options.columns.pop();\n            this.graphInstance.refresh(Object.assign({}, this.graphInstance.options));\n          }\n        },\n      });\n    }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n}\n","import { TableFlowGraph, PositionAndSize } from '../../index';\nimport { createClassElement, setStyles } from '../../lib/dom';\nimport TableCell from './TableCell';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMaskBox {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public disabled: boolean;\n\n  constructor(parentEl: HTMLElement, targetCell: TableCell, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.disabled = false;\n    this.element = createClassElement('div', 'tfgraph-table-mask-cell', parentEl);\n    const nodeEl = createClassElement('div', 'tfgraph-table-mask-node', this.element);\n    nodeEl.innerText = targetCell.nodeData.title;\n    // setStyles(this.element, {\n    //   top: top + 'px',\n    //   left: left + 'px',\n    //   width: width + 'px',\n    //   height: height + 'px',\n    // });\n    this.element.addEventListener('click', () => {\n      if (!this.disabled) this.graphInstance.tableController.submitCellChange();\n    });\n  }\n\n  setPositinAndSize(pos_size: PositionAndSize) {\n    setStyles(this.element, {\n      top: pos_size.top + 'px',\n      left: pos_size.left + 'px',\n      width: pos_size.width + 'px',\n      height: pos_size.height + 'px',\n    });\n  }\n\n  disable() {\n    // TODO\n    if (!this.disabled) {\n      this.disabled = true;\n      this.element.classList.add('disabled');\n    }\n  }\n\n  enable() {\n    // TODO\n    if (this.disabled) {\n      this.disabled = false;\n      this.element.classList.remove('disabled');\n    }\n  }\n}\n","import { TableFlowGraph, CellPositionAndSize, TableGridRect } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport TableCell from './TableCell';\nimport TableMaskBox from './TableMaskBox';\nimport { isEqual, cloneDeep } from 'lodash-es';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMask {\n  graphInstance: TableFlowGraph;\n  public maskBox: TableMaskBox;\n  public element: HTMLElement;\n  public tableGridRectList: TableGridRect[];\n  public mouseGridRect: TableGridRect;\n  public targetCell: TableCell;\n  public targetCellRect: TableGridRect;\n  public resultCellPositionAndSize: CellPositionAndSize;\n  public filteredOccupiedList: number[][]; // 1: occupied, 0: not occupied\n\n  constructor(tableGridRectList: TableGridRect[], graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement(\n      'div',\n      'tfgraph-cell-mask-layer hidden',\n      graphInstance.element,\n    );\n    this.tableGridRectList = tableGridRectList;\n  }\n\n  private showMask(targetTableCell: TableCell) {\n    this.targetCell = targetTableCell;\n    this.targetCell.setIsTarget(true);\n    this.setFilteredOccupiedList();\n    this.maskBox = new TableMaskBox(this.element, this.targetCell, this.graphInstance);\n    this.mouseGridRect = this.getMouseRect();\n    this.targetCellRect = this.getRectByRowAndColumn(this.targetCell.row, this.targetCell.column);\n    this.setMaskBoxStatus();\n  }\n\n  // occupied list without target tabel cell\n  private setFilteredOccupiedList() {\n    this.filteredOccupiedList = cloneDeep(this.graphInstance.tableController.occupiedList);\n    for (let i = this.targetCell.row; i < this.targetCell.row + this.targetCell.rowSpan; i++) {\n      for (\n        let j = this.targetCell.column;\n        j < this.targetCell.column + this.targetCell.colSpan;\n        j++\n      ) {\n        this.filteredOccupiedList[i][j] = 0;\n      }\n    }\n  }\n\n  // set maskbox position/size/disabled etc.\n  private setMaskBoxStatus() {\n    if (this.graphInstance.tableController.isMovingCell) {\n      this.resultCellPositionAndSize = {\n        row:\n          this.mouseGridRect.rowIndex + this.targetCell.rowSpan >\n          this.graphInstance.options.totalRows\n            ? this.graphInstance.options.totalRows - this.targetCell.rowSpan\n            : this.mouseGridRect.rowIndex,\n        column:\n          this.mouseGridRect.columnIndex + this.targetCell.colSpan >\n          this.graphInstance.options.totalColumns\n            ? this.graphInstance.options.totalColumns - this.targetCell.colSpan\n            : this.mouseGridRect.columnIndex,\n        rowSpan: this.targetCell.rowSpan,\n        colSpan: this.targetCell.colSpan,\n      };\n      this.maskBox.element.classList.add('moving');\n    } else {\n      this.resultCellPositionAndSize = {\n        row: Math.min(this.targetCellRect.rowIndex, this.mouseGridRect.rowIndex),\n        column: Math.min(this.targetCellRect.columnIndex, this.mouseGridRect.columnIndex),\n        rowSpan: Math.abs(this.targetCellRect.rowIndex - this.mouseGridRect.rowIndex) + 1,\n        colSpan: Math.abs(this.targetCellRect.columnIndex - this.mouseGridRect.columnIndex) + 1,\n      };\n      this.maskBox.element.classList.add('resizing');\n    }\n    const topLeftRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row,\n      this.resultCellPositionAndSize.column,\n    );\n    const bottomRightRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan - 1,\n      this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan - 1,\n    );\n    if (bottomRightRect && topLeftRect) {\n      this.maskBox.setPositinAndSize({\n        left: topLeftRect.left,\n        top: topLeftRect.top,\n        width: bottomRightRect.left - topLeftRect.left + bottomRightRect.width + 1,\n        height: bottomRightRect.top - topLeftRect.top + bottomRightRect.height + 1,\n      });\n    }\n\n    // set maskbox disable/enable\n    let doable = true;\n    for (\n      let i = this.resultCellPositionAndSize.row;\n      i <\n      Math.min(\n        this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan,\n        this.graphInstance.options.totalRows,\n      );\n      i++\n    ) {\n      for (\n        let j = this.resultCellPositionAndSize.column;\n        j <\n        Math.min(\n          this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan,\n          this.graphInstance.options.totalColumns,\n        );\n        j++\n      ) {\n        if (!this.filteredOccupiedList[i] || this.filteredOccupiedList[i][j] > 0) {\n          doable = false;\n        }\n      }\n    }\n    if (doable) {\n      this.maskBox.enable();\n    } else {\n      this.maskBox.disable();\n    }\n  }\n\n  public startMask(targetTableCell: TableCell) {\n    this.element.classList.remove('hidden');\n    this.showMask(targetTableCell);\n  }\n\n  public stopMask() {\n    this.element.classList.add('hidden');\n    removeElement(this.maskBox.element);\n    this.targetCell.setIsTarget(false);\n    this.maskBox = null;\n  }\n\n  public submitChange() {\n    this.stopMask();\n    const targetCellPositionAndSize: CellPositionAndSize = {\n      row: this.targetCell.row,\n      column: this.targetCell.column,\n      rowSpan: this.targetCell.rowSpan,\n      colSpan: this.targetCell.colSpan,\n    };\n    if (!isEqual(this.resultCellPositionAndSize, targetCellPositionAndSize)) {\n      // const oldNode = cloneDeep(this.targetCell.nodeData);\n      this.targetCell.nodeData.row = this.resultCellPositionAndSize.row;\n      this.targetCell.nodeData.column = this.resultCellPositionAndSize.column;\n      this.targetCell.nodeData.rowSpan = this.resultCellPositionAndSize.rowSpan;\n      this.targetCell.nodeData.colSpan = this.resultCellPositionAndSize.colSpan;\n      // 提交变更\n      if (typeof this.graphInstance.options.onEditNode === 'function') {\n        this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n      }\n      this.graphInstance.refresh();\n    }\n  }\n\n  // get tableGridRect of current mouse position at\n  private getMouseRect() {\n    const mouseX = this.graphInstance.mousePosition.x;\n    const mouseY = this.graphInstance.mousePosition.y;\n    let targetGridRect: TableGridRect;\n    this.tableGridRectList.forEach((gridRect) => {\n      if (\n        mouseY > gridRect.top &&\n        mouseY < gridRect.top + gridRect.height &&\n        mouseX > gridRect.left &&\n        mouseX < gridRect.left + gridRect.width\n      ) {\n        targetGridRect = gridRect;\n      }\n    });\n    return targetGridRect;\n  }\n\n  private getRectByRowAndColumn(row, column) {\n    // const targetCellRow = this.targetCell.row;\n    // const targetCellColumn = this.targetCell.column;\n    return this.tableGridRectList.find((gridRect) => {\n      return gridRect.rowIndex === row && gridRect.columnIndex === column;\n    });\n  }\n\n  public onMouseMove() {\n    const newRect = this.getMouseRect();\n    if (!isEqual(newRect, this.mouseGridRect)) {\n      if (newRect) {\n        this.mouseGridRect = newRect;\n        this.setMaskBoxStatus();\n      }\n    }\n  }\n}\n","import { TableFlowGraph, ColumnSpec, RowSpec, TableGridRect } from '../../index';\nimport { createClassElement, removeElement, setStyles } from '../../lib/dom';\nimport TableCell from './TableCell';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableMask from './TableMask';\nimport Button from '../ui/button/Button';\nimport { setColumnAndRowDeletable } from '../../lib/utils';\n\n/**\n * table-flow-graph tabel\n */\nexport default class Table {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public bottomControlEL: HTMLElement | null;\n  public cells: TableCell[];\n  public headerCells: TableHeaderCell[];\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n  public occupiedList: number[][]; // 1: occupied, 0: not occupied\n  public tableMask: TableMask;\n  public isMovingCell: boolean;\n  public isResizingCell: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('table', 'tfgraph-table', this.graphInstance.element);\n    this.initTableStatus();\n  }\n\n  private initTableStatus() {\n    this.headerCells = [];\n    this.cells = [];\n    this.canDeleteColumn = false;\n    this.canDeleteRow = false;\n    this.occupiedList = [];\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n  }\n\n  // render table and set table controls\n  public renderTable() {\n    this.initTableStatus();\n    this.element.innerHTML = '';\n    this.createHeader();\n    this.createTds();\n    this.createCells();\n    this.setControls();\n  }\n\n  public setControls() {\n    const isEditMode = this.graphInstance.mode === 'edit';\n    if (isEditMode) {\n      const deleteableObj = setColumnAndRowDeletable(\n        this.occupiedList,\n        this.graphInstance.options.totalRows,\n        this.graphInstance.options.totalColumns,\n      );\n      this.canDeleteColumn = deleteableObj.canDeleteColumn;\n      this.canDeleteRow = deleteableObj.canDeleteRow;\n\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setEditorControls();\n      });\n\n      // wait for table render ready\n      setTimeout(() => {\n        const columnSpecs: ColumnSpec[] = []; // [{left, width, columnIndex}]\n        const rowSpecs: RowSpec[] = []; // [{ top, height, rowIndex}]\n\n        this.headerCells.forEach((headerCell) => {\n          // set headerCell controls\n          headerCell.setEditControls();\n          // get columns's width and position\n          columnSpecs.push({\n            width: headerCell.element.getBoundingClientRect().width + 1,\n            left: headerCell.element.offsetLeft - 1,\n            columnIndex: headerCell.columnIndex,\n          });\n        });\n\n        // get rowSpects(row top position and height)\n        for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n          const targetCell = this.getMinRowSpanCell(i, 1);\n          const targetCellHeight = targetCell.element.getBoundingClientRect().height;\n          const targetCellRowHeight = targetCellHeight / targetCell.rowSpan;\n          rowSpecs.push({\n            top: targetCell.element.offsetTop - 1 + (i - targetCell.row) * targetCellRowHeight,\n            height: targetCellRowHeight + 1,\n            rowIndex: i,\n          });\n        }\n        // each table grid's left, top, width, height without rowspan and colspan\n        const tableGridRectList: TableGridRect[] = [];\n        rowSpecs.forEach((rowSpec) => {\n          columnSpecs.forEach((columnSpec) => {\n            tableGridRectList.push(Object.assign({}, rowSpec, columnSpec));\n          });\n        });\n        this.tableMask = new TableMask(tableGridRectList, this.graphInstance);\n      }, 1);\n    } else {\n      // click node event\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setViewerControls();\n      });\n    }\n    this.setBottomControl();\n\n    // set table cell controls\n    // 1. remove last row ✓\n    // 2. empty cell: add node ✓\n    // 3. node cell: edit node content ✓\n    // 4. node cell: adjust node size ✓\n    // 5. node cell: move node position ✓\n  }\n\n  //  recursively find min rowspan cell for targetRow\n  getMinRowSpanCell(row: number, minRowSpan = 1) {\n    let targetRowCell: TableCell | null = null;\n    const rowCells = this.cells.filter((cell) => cell.row === row);\n    if (rowCells.length === 0) {\n      if (row > 0) {\n        targetRowCell = this.getMinRowSpanCell(row - 1, minRowSpan + 1);\n      }\n    } else {\n      let rowSpan = 20;\n      rowCells.forEach((cell) => {\n        if (cell.rowSpan < rowSpan && cell.rowSpan >= minRowSpan) {\n          rowSpan = cell.rowSpan;\n          targetRowCell = cell;\n        }\n      });\n    }\n    return targetRowCell;\n  }\n\n  public onMouseMove() {\n    if (this.isMovingCell || this.isResizingCell) {\n      this.tableMask.onMouseMove();\n    }\n  }\n\n  public startMoving(targetCell: TableCell) {\n    this.isMovingCell = true;\n    this.graphInstance.toolbar.hintMgr.setHint('moveNode');\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopMoving() {\n    this.isMovingCell = false;\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  public startResizing(targetCell: TableCell) {\n    this.isResizingCell = true;\n    this.graphInstance.toolbar.hintMgr.setHint('resizeNode');\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopResizing() {\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  // sumit cell position / size change\n  public submitCellChange() {\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.enable();\n    this.tableMask.submitChange();\n  }\n\n  public setBottomControl() {\n    if (\n      this.graphInstance.mode === 'edit' &&\n      !this.bottomControlEL &&\n      this.graphInstance.options.totalRows < this.graphInstance.options.maxRows\n    ) {\n      this.bottomControlEL = createClassElement(\n        'div',\n        'flex flex-row items-center justify-between mt-15',\n        this.graphInstance.element,\n      );\n      // add row btn\n      new Button(this.bottomControlEL, {\n        icon: 'plus',\n        label: this.graphInstance.options.labels.addRow,\n        className: 'flex-1',\n        onClick: () => {\n          if (typeof this.graphInstance.options.addRow === 'function') {\n            this.graphInstance.options.addRow();\n          } else {\n            this.graphInstance.refresh(\n              Object.assign({}, this.graphInstance.options, {\n                totalRows: this.graphInstance.options.totalRows + 1,\n              }),\n            );\n            if (typeof this.graphInstance.options.onAddRow === 'function') {\n              this.graphInstance.options.onAddRow();\n            }\n          }\n        },\n      });\n    } else {\n      if (this.bottomControlEL) {\n        removeElement(this.bottomControlEL);\n        this.bottomControlEL = null;\n      }\n    }\n  }\n\n  // render table header\n  createHeader() {\n    if (this.graphInstance.options.tableLayoutFixed) {\n      setStyles(this.element, { tableLayout: 'fixed' });\n    }\n    if (this.graphInstance.options.columns && this.graphInstance.options.columns.length > 0) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      this.graphInstance.options.columns.forEach((column, index) => {\n        const headerCell = new TableHeaderCell(tr, column, index, this.graphInstance);\n        this.headerCells.push(headerCell);\n      });\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render table rows and tds\n  createTds() {\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      tr.setAttribute('id', `${this.graphInstance.id}_tr_${i}`);\n      const occupiedRow: number[] = [];\n      this.occupiedList.push(occupiedRow);\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        const td = createClassElement('td', 'tfgraph-td', tr);\n        td.setAttribute('id', `${this.graphInstance.id}_td_${i}_${j}`);\n        occupiedRow.push(0);\n      }\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render tabel cells\n  createCells() {\n    // spaned table cell id array\n    const spanedTdIds = [];\n    const nodes = this.graphInstance.options.nodes;\n    if (nodes && nodes.length > 0) {\n      nodes.forEach((node) => {\n        // set spanned tabel cell ids\n        if (node.colSpan > 1 || node.rowSpan > 1) {\n          for (let i = node.column; i < node.column + node.colSpan; i++) {\n            for (let j = node.row; j < node.row + node.rowSpan; j++) {\n              if (!(i === node.column && j === node.row)) {\n                spanedTdIds.push(`${this.graphInstance.id}_td_${j}_${i}`);\n                this.occupiedList[j][i] = 1;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    // remove spaned tabell cell element\n    spanedTdIds.forEach((id) => removeElement(document.getElementById(id)));\n\n    // create table cells\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        if (!spanedTdIds.includes(`${this.graphInstance.id}_td_${i}_${j}`)) {\n          const targetNode =\n            nodes && nodes.length > 0\n              ? nodes.find((node) => node.row === i && node.column === j)\n              : null;\n          const targetTd = document.getElementById(`${this.graphInstance.id}_td_${i}_${j}`);\n          if (targetNode) {\n            targetTd.setAttribute('colSpan', targetNode.colSpan.toString());\n            targetTd.setAttribute('rowSpan', targetNode.rowSpan.toString());\n            this.occupiedList[i][j] = 1;\n          }\n          this.cells.push(new TableCell(targetTd, targetNode, i, j, this.graphInstance));\n        }\n      }\n    }\n  }\n}\n","import { createClassElement, removeElement } from '../../lib/dom';\nimport { LineOptions, Position } from '../../index';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph line\n */\nexport default class LineSegment {\n  public element: HTMLElement;\n  public thickness: number;\n  public startPointEl: HTMLElement;\n  public endArrowEl: HTMLElement;\n\n  constructor(parent: LineGroup, options: LineOptions) {\n    this.element = createClassElement('div', 'tfgraph-line', parent.element);\n    const { positionA, positionB, thickness = 2, isStart = true, isEnd = true } = options;\n    this.thickness = thickness;\n    if (isStart) this.toggleStartPoint();\n    if (isEnd) this.toggleEndArrow();\n    this.drawLine(positionA, positionB);\n    this.element.addEventListener('mouseenter', () => parent.setHovered(true));\n    this.element.addEventListener('mouseleave', () => parent.setHovered(false));\n    this.element.addEventListener('dblclick', () => parent.onDoubleClick());\n  }\n\n  public setHoverd(hovered = true) {\n    if (hovered) {\n      this.element.classList.add('hovered');\n    } else {\n      this.element.classList.remove('hovered');\n    }\n  }\n\n  public drawLine(positionA: Position, positionB: Position) {\n    // start point\n    const x1 = positionA.x;\n    const y1 = positionA.y;\n    // end point\n    const x2 = positionB.x;\n    const y2 = positionB.y;\n\n    // distance\n    const length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\n    // center\n    const cx = (x1 + x2) / 2 - length / 2;\n    const cy = (y1 + y2) / 2 - this.thickness / 2;\n    // angle\n    const angle = Math.atan2(y2 - y1, x2 - x1) * (180 / Math.PI);\n\n    this.element.style.width = length + this.thickness + 'px';\n    this.element.style.height = this.thickness + 'px';\n    this.element.style.left = cx - 0.5 * this.thickness + 'px';\n    this.element.style.top = cy + 'px';\n    this.element.style.borderRadius = this.thickness + 'px';\n    this.element.style.transform = `rotate(${angle}deg)`;\n  }\n\n  public toggleStartPoint() {\n    if (this.startPointEl) {\n      removeElement(this.startPointEl);\n    } else {\n      this.startPointEl = createClassElement('div', 'start-point', this.element);\n    }\n  }\n\n  public toggleEndArrow() {\n    if (this.endArrowEl) {\n      removeElement(this.endArrowEl);\n    } else {\n      this.endArrowEl = createClassElement('div', 'arrow', this.element);\n    }\n  }\n}\n","import { TableFlowGraph, LineGroupOptions, Position } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport Anchor from '../anchor/Anchor';\nimport LineSegment from './LineSegment';\n\n/**\n * table-flow-graph line group\n */\nexport default class LineGroup {\n  public element: HTMLElement;\n  public isDrawingActive: boolean;\n  public anchorIds: string[];\n  public anchors: Anchor[];\n  public cursorLine: LineSegment; // line currently drawing at end\n  public lines: LineSegment[];\n  public cursorLineStartPosition: Position;\n  public graphInstance: TableFlowGraph;\n  public hovered: boolean; // is mouse hover\n\n  constructor(\n    parentElement: HTMLElement,\n    options: LineGroupOptions,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.element = createClassElement('div', 'tfgraph-line-group', parentElement);\n    this.isDrawingActive = options.isDrawingActive;\n    this.anchorIds = options.anchorIds;\n    this.graphInstance = graphInstance;\n    this.drawLines();\n  }\n\n  public addLineSegment(anchorId) {\n    if (!this.anchorIds.includes(anchorId)) {\n      this.anchorIds.push(anchorId);\n      this.drawLines();\n    }\n  }\n\n  public onDoubleClick() {\n    if (this.hovered) {\n      if (this.isDrawingActive) {\n        this.graphInstance.lineController.endDrawLine();\n      } else {\n        this.graphInstance.lineController.removeLineGroup(this);\n      }\n    }\n  }\n\n  public drawLines() {\n    this.anchors = [];\n    this.lines = [];\n    if (this.anchorIds.length === 0) return;\n    this.anchorIds.forEach((anchorId) => {\n      const targetAnchor = this.graphInstance.anchorController.anchors.find(\n        (anchor) => anchor.id === anchorId,\n      );\n      if (targetAnchor) {\n        this.anchors.push(targetAnchor);\n      }\n    });\n    this.element.innerHTML = '';\n    const pointList: Position[] = this.anchors.map((anchor) => ({\n      x: anchor.posX,\n      y: anchor.posY,\n    }));\n    if (pointList.length > 1) {\n      for (let i = 0; i < pointList.length - 1; i++) {\n        const line = new LineSegment(this, {\n          positionA: pointList[i],\n          positionB: pointList[i + 1],\n          thickness: 2,\n          isStart: i === 0,\n          isEnd: i === pointList.length - 2 && !this.isDrawingActive,\n        });\n        this.lines.push(line);\n      }\n    }\n    // add line between last anchor position and mouse position when drawing\n    if (this.isDrawingActive) {\n      this.cursorLineStartPosition = pointList[pointList.length - 1];\n      // draw cursor line\n      this.cursorLine = new LineSegment(this, {\n        positionA: this.cursorLineStartPosition,\n        positionB: this.graphInstance.mousePosition,\n        thickness: 2,\n        isStart: pointList.length === 1,\n        isEnd: true,\n      });\n      this.lines.push(this.cursorLine);\n    }\n  }\n\n  public setHovered(hovered = true) {\n    if (this.graphInstance.mode === 'edit') {\n      this.hovered = hovered;\n      this.lines.forEach((line) => {\n        line.setHoverd(hovered);\n      });\n      if (!this.isDrawingActive) {\n        this.graphInstance.toolbar.hintMgr.setHint(hovered ? 'hoverLine' : 'idel');\n      }\n    }\n  }\n\n  public endDrawing() {\n    // removeElement(this.cursorLine.element);\n    this.isDrawingActive = false;\n    this.drawLines();\n  }\n\n  public escapeDrawing() {\n    if (this.cursorLine) {\n      if (this.anchorIds.length > 0) {\n        this.anchorIds.pop();\n        if (this.anchorIds.length === 0) {\n          removeElement(this.element);\n          // remove the last anchor id in this line group\n          this.graphInstance.lineController.lineAnchorIds =\n            this.graphInstance.lineController.lineAnchorIds.filter(\n              (lineArray) => lineArray.length > 1,\n            );\n          this.graphInstance.lineController.endDrawLine();\n        } else {\n          this.drawLines();\n        }\n      }\n    }\n  }\n\n  public onMouseMove(graphInstance: TableFlowGraph) {\n    if (this.cursorLine) {\n      let targetPosition = graphInstance.mousePosition;\n      // snap to hovered anchor\n      if (\n        graphInstance.anchorController.hoveredAnchor &&\n        !this.anchorIds.includes(graphInstance.anchorController.hoveredAnchor.id)\n      ) {\n        targetPosition = {\n          x: graphInstance.anchorController.hoveredAnchor.posX,\n          y: graphInstance.anchorController.hoveredAnchor.posY,\n        };\n      }\n      this.cursorLine.drawLine(this.cursorLineStartPosition, targetPosition);\n    }\n  }\n}\n","import { cloneDeep, isEqual } from 'lodash-es';\nimport { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement, setStyles } from '../../lib/dom';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph lines controller\n */\nexport default class LineController {\n  public element: HTMLElement;\n  public lineAnchorIds: string[][]; // anchor ids to draw lines\n  public originLineAnchorIds: string[][]; // compare to lineAnchorIds to determine if lines are changed\n  public isDrawingLine: boolean;\n  public currentDrawingLine: LineGroup;\n  public graphInstance: TableFlowGraph;\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-line-layer', this.graphInstance.element);\n    const { options } = this.graphInstance;\n    // this.options.mode = options.mode ? options.mode : 'view';\n    if (options.lines && Array.isArray(options.lines)) {\n      this.lineAnchorIds = options.lines;\n    } else {\n      this.lineAnchorIds = [];\n    }\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public renderLines() {\n    this.element.innerHTML = '';\n    this.lineAnchorIds.forEach((lineGroup) => {\n      new LineGroup(\n        this.element,\n        { anchorIds: lineGroup, isDrawingActive: false },\n        this.graphInstance,\n      );\n    });\n    this.setColAndRowDeletable();\n  }\n\n  public startDrawLine() {\n    this.isDrawingLine = true;\n    this.graphInstance.toolbar.disable();\n    this.graphInstance.toolbar.hintMgr.setHint('drawLine');\n    // set lines layer below anchors layer when draing line\n    setStyles(this.element, { zIndex: '1' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '2' });\n\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public endDrawLine() {\n    this.isDrawingLine = false;\n    this.graphInstance.toolbar.enable();\n    // set lines layer above anchors layer when draing line\n    setStyles(this.element, { zIndex: '2' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '1' });\n\n    if (this.currentDrawingLine) {\n      this.currentDrawingLine.endDrawing();\n      if (this.currentDrawingLine.anchorIds.length <= 1) {\n        this.removeLineGroup(this.currentDrawingLine);\n      }\n      this.currentDrawingLine = undefined;\n    }\n    if (!isEqual(this.originLineAnchorIds, this.lineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  setColAndRowDeletable() {\n    const totalRows = this.graphInstance.options.totalRows;\n    const totalColumns = this.graphInstance.options.totalColumns;\n    this.canDeleteColumn = true;\n    this.canDeleteRow = true;\n    this.lineAnchorIds.forEach((line) => {\n      line.forEach((id) => {\n        const idArray = id.split('_');\n        const row = idArray[1];\n        const col = idArray[2];\n        if (parseInt(col) === totalColumns - 1) {\n          this.canDeleteColumn = false;\n        }\n        if (parseInt(row) === totalRows - 1) {\n          this.canDeleteRow = false;\n        }\n      });\n    });\n  }\n\n  public onChangeLines() {\n    this.setColAndRowDeletable();\n    this.graphInstance.options = Object.assign({}, this.graphInstance.options, {\n      lines: this.lineAnchorIds,\n    });\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    if (typeof this.graphInstance.options.onChangeLines === 'function') {\n      this.graphInstance.options.onChangeLines(this.lineAnchorIds);\n    }\n  }\n\n  public removeLineGroup(line: LineGroup) {\n    removeElement(line.element);\n    this.lineAnchorIds = this.lineAnchorIds.filter((lines) => !isEqual(lines, line.anchorIds));\n    if (!isEqual(this.lineAnchorIds, this.originLineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  public createLineGroup(anchorId) {\n    this.startDrawLine();\n    this.lineAnchorIds.push([anchorId]);\n    this.currentDrawingLine = new LineGroup(\n      this.element,\n      { anchorIds: this.lineAnchorIds[this.lineAnchorIds.length - 1], isDrawingActive: true },\n      this.graphInstance,\n    );\n  }\n\n  public addLineSegment(anchorId) {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.addLineSegment(anchorId);\n    }\n  }\n\n  public onMouseMove() {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.onMouseMove(this.graphInstance);\n    }\n  }\n}\n","import { TableFlowGraph, Bearing } from '../../index';\nimport { createClassElement } from '../../lib/dom';\n\n// | 'topleft'\n// | 'top'\n// | 'topright'\n// | 'left'\n// | 'center'\n// | 'right'\n// | 'bottomleft'\n// | 'bottom'\n// | 'bottomright';\n\nconst getBearingShort = (bearing: Bearing) => {\n  let shortBearing = 't';\n  switch (bearing) {\n    case 'topleft':\n      shortBearing = 'tl';\n      break;\n    case 'top':\n      shortBearing = 't';\n      break;\n    case 'topright':\n      shortBearing = 'tr';\n      break;\n    case 'left':\n      shortBearing = 'l';\n      break;\n    case 'center':\n      shortBearing = 'c';\n      break;\n    case 'right':\n      shortBearing = 'r';\n      break;\n    case 'bottomleft':\n      shortBearing = 'bl';\n      break;\n    case 'bottom':\n      shortBearing = 'b';\n      break;\n    case 'bottomright':\n      shortBearing = 'br';\n      break;\n    default:\n      break;\n  }\n  return shortBearing;\n};\n\n/**\n * Anchor point for drawing lines\n */\nexport default class Anchor {\n  // element of this Anchor\n  public element: HTMLElement;\n  // the bearing relative to this anchor's parent table cell\n  public bearing: Bearing;\n  public elementTr: HTMLElement;\n  public elementCol: HTMLElement;\n  // is the anchor on table cell border or on inner block border(top / bottom)\n  public isOffsetX: boolean;\n  // is the anchor on table cell border or on inner block border(left / right)\n  public isOffsetY: boolean;\n  // id for this Anchor class\n  public id = '';\n  // x position relative to table area\n  public posX = 0;\n  // y position relative to table area\n  public posY = 0;\n  public row: number;\n  public column: number;\n  public hidden = false;\n\n  constructor(\n    bearing: Bearing,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n    isOffsetX = false,\n    isOffsetY = false,\n  ) {\n    this.bearing = bearing;\n    this.isOffsetX = isOffsetX;\n    this.isOffsetY = isOffsetY;\n    this.row = row;\n    this.column = column;\n    this.elementTr = document.getElementById(`${graphInstance.id}_tr_${row}`);\n    this.elementCol = document.getElementById(`${graphInstance.id}_col_${column}`);\n    if (this.elementTr && this.elementCol) {\n      // create dom elements\n      this.element = createClassElement(\n        'div',\n        'tfgraph-anchor',\n        graphInstance.anchorController.element,\n      );\n      createClassElement('div', 'tfgraph-anchor-point', this.element);\n      const area = createClassElement('div', 'tfgraph-anchor-area', this.element);\n      createClassElement('div', 'tfgraph-anchor-circle', area);\n\n      // set Anchor instance id; 'ox' meaning offsetX, 'nx' meaning normalX\n      this.id = `a_${row}_${column}_${getBearingShort(bearing)}_${isOffsetX ? 'ox' : 'nx'}_${\n        isOffsetY ? 'oy' : 'ny'\n      }`;\n      // set dom id\n      this.element.setAttribute('id', `${graphInstance.id}_${this.id}`);\n\n      graphInstance.anchorController.anchors.push(this);\n      this.setVisible(graphInstance.mode === 'edit');\n      // setTimeout(() => this.setPosition(), 1);\n      this.setPosition();\n      this.element.addEventListener('click', () => {\n        if (!graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.createLineGroup(this.id);\n        } else {\n          graphInstance.lineController.addLineSegment(this.id);\n        }\n      });\n      this.element.addEventListener('mouseenter', () => {\n        graphInstance.anchorController.setHoveredAnchor(this);\n      });\n      this.element.addEventListener('mouseleave', () => {\n        if (graphInstance.anchorController.hoveredAnchor.id === this.id) {\n          graphInstance.anchorController.setHoveredAnchor(null);\n        }\n      });\n      // dblclick to finish drawing lines\n      this.element.addEventListener('dblclick', () => {\n        if (graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.endDrawLine();\n        }\n      });\n    }\n  }\n\n  setOnePosition(x, y) {\n    this.posX = x;\n    this.posY = y;\n    this.element.style.left = x + 'px';\n    this.element.style.top = y + 'px';\n    this.element.setAttribute('title', `xpos & ypos=${x},${y}`);\n  }\n\n  public setVisible(visible: boolean) {\n    if (visible) {\n      this.element.classList.remove('hidden');\n    } else {\n      this.element.classList.add('hidden');\n    }\n  }\n\n  public setPosition() {\n    const x_left = this.elementCol.offsetLeft + (this.isOffsetX ? 15 : 0);\n    const x_center = this.elementCol.offsetLeft + 0.5 * this.elementCol.offsetWidth;\n    const x_right =\n      this.elementCol.offsetLeft + this.elementCol.offsetWidth - (this.isOffsetX ? 15 : 0);\n    const y_top = this.elementTr.offsetTop + (this.isOffsetY ? 15 : 0);\n    const y_center = this.elementTr.offsetTop + 0.5 * this.elementTr.offsetHeight;\n    const y_bottom =\n      this.elementTr.offsetTop + this.elementTr.offsetHeight - (this.isOffsetY ? 15 : 0);\n\n    switch (this.bearing) {\n      case 'topleft':\n        this.setOnePosition(x_left, y_top);\n        break;\n      case 'top':\n        this.setOnePosition(x_center, y_top);\n        break;\n      case 'topright':\n        this.setOnePosition(x_right, y_top);\n        break;\n      case 'right':\n        this.setOnePosition(x_right, y_center);\n        break;\n      case 'bottomright':\n        this.setOnePosition(x_right, y_bottom);\n        break;\n      case 'bottom':\n        this.setOnePosition(x_center, y_bottom);\n        break;\n      case 'bottomleft':\n        this.setOnePosition(x_left, y_bottom);\n        break;\n      case 'left':\n        this.setOnePosition(x_left, y_center);\n        break;\n      case 'center':\n        this.setOnePosition(x_center, y_center);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport TableCell from '../table/TableCell';\nimport Anchor from './Anchor';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class AnchorController {\n  public element: HTMLElement;\n  public anchors: Anchor[];\n  public hoveredAnchor: Anchor | null; // current Anchor that mouse hoverd\n  graphInstance: TableFlowGraph;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.anchors = [];\n    this.element = createClassElement('div', 'tfgraph-anchor-layer', graphInstance.element);\n  }\n\n  public renderAnchors() {\n    this.element.innerHTML = '';\n    this.anchors = [];\n    this.graphInstance.tableController.cells.forEach((cell) => {\n      // console.log('cell:::::::::::', cell);\n      this.createAnchors(cell);\n    });\n  }\n\n  public setHoveredAnchor(anchor: Anchor | null) {\n    this.hoveredAnchor = anchor;\n    if (!this.graphInstance.lineController.isDrawingLine) {\n      if (anchor) {\n        this.graphInstance.toolbar.hintMgr.setHint('hoverAnchor');\n      } else {\n        this.graphInstance.toolbar.hintMgr.setHint('idel');\n      }\n    }\n  }\n\n  public resetPosition() {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor) => {\n        anchor.setPosition();\n      });\n    }\n  }\n\n  public setAnchorsVisible(visible: boolean) {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor: Anchor) => {\n        anchor.setVisible(visible);\n      });\n    }\n  }\n\n  // create anchors for one cell\n  createAnchors(cell: TableCell) {\n    for (let row = cell.row; row < cell.row + cell.rowSpan; row++) {\n      for (let col = cell.column; col < cell.column + cell.colSpan; col++) {\n        if (row === 0) {\n          new Anchor('top', row, col, this.graphInstance);\n          new Anchor('topright', row, col, this.graphInstance);\n          if (cell.column === 0) {\n            new Anchor('topleft', row, col, this.graphInstance);\n          }\n        }\n        if (col === 0) {\n          new Anchor('left', row, col, this.graphInstance);\n          new Anchor('bottomleft', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1) {\n          new Anchor('right', row, col, this.graphInstance);\n        }\n        if (row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottom', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1 || row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottomright', row, col, this.graphInstance);\n        }\n        if (cell.hasNode) {\n          if (col === cell.column) {\n            new Anchor('left', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomleft', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (col === cell.column + cell.colSpan - 1) {\n            new Anchor('right', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (row === cell.row) {\n            new Anchor('top', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('topright', row, col, this.graphInstance, false, true);\n            }\n          }\n          if (row === cell.row + cell.rowSpan - 1) {\n            new Anchor('bottom', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, false, true);\n            }\n          }\n        }\n      }\n    }\n    if (!cell.hasNode) {\n      new Anchor('center', cell.row, cell.column, this.graphInstance);\n    }\n  }\n}\n","import './styles/index.scss';\nimport { createClassElement, setStyles } from './lib/dom';\nimport { debounce } from './lib/utils';\nimport Toolbar from './components/toolbar/Toolbar';\nimport TableController from './components/table/TableController';\nimport LineController from './components/line/LineController';\nimport AnchorController from './components/anchor/AnchorController';\n\n// default options\nconst defaultOptions: TFGraphOptions = {\n  totalColumns: 8,\n  totalRows: 8,\n  maxColumns: 12,\n  maxRows: 30,\n  labels: {\n    editMode: 'Edit Mode',\n    previewMode: 'Preview Mode',\n    editColumn: 'Edit Column',\n    addColumn: 'Add Column',\n    deleteColumn: 'Delete Column',\n    addRow: 'Add Row',\n    deleteRow: 'Delete Row',\n    editNode: 'Edit Node',\n    addNode: 'Add Node',\n    deleteNode: 'Delete Node',\n    adjustNodeSize: 'Adjust Node Size',\n    moveNode: 'Move Node',\n    newNode: 'New Node',\n    enterNodeName: 'Enter node name',\n    enterColumnName: 'Enter column name',\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n    hint_drawLine:\n      'Click another anchor to draw new line segment; press [ESC] to undo prev line segment; press [ENTER] or double click left mouse to finish drawing',\n    hint_hoverLine: 'Double click to delete this line',\n    hint_hoverAnchor: 'Click to start drawing lines',\n    hint_moveNode: 'Move cursor to move this node, click left mouse to confrim moving',\n    hint_resizeNode: 'Move cursor to resize this node, click left mouse to confrim resizing',\n  },\n};\n\nexport class TableFlowGraph {\n  public element: HTMLElement;\n  public baseElement: HTMLElement;\n  public options: TFGraphOptions;\n  public id: string;\n  public toolbar: Toolbar;\n  public isAlive: boolean;\n  public hasTableHeader: boolean;\n  public mode: Mode;\n  public mousePosition: Position;\n  public tableController: TableController;\n  public lineController: LineController;\n  public anchorController: AnchorController;\n\n  constructor(el: HTMLElement, options: TFGraphOptions) {\n    if (!el) {\n      throw new Error('no element is specified to initialize TableFlowGraph');\n    } else {\n      this.baseElement = el;\n      this.baseElement.classList.add('tfgraph-wrapper');\n    }\n\n    // use id as unique key, to support multiple table-flow-graph instances in one page.\n    if (this.baseElement.getAttribute('id')) {\n      this.id = this.baseElement.getAttribute('id');\n    } else {\n      this.id = 'id' + (Math.random() * 100000).toFixed(0);\n    }\n\n    this.init(options);\n\n    window.addEventListener('resize', this, false);\n    window.addEventListener('keydown', this, false);\n    window.addEventListener('mousemove', this, false);\n\n    this.isAlive = true;\n  }\n\n  public init(options: TFGraphOptions) {\n    this.baseElement.innerHTML = '';\n\n    this.options = Object.assign({}, defaultOptions, options);\n    if (options.labels) {\n      this.options.labels = Object.assign({}, defaultOptions.labels, options.labels);\n    }\n    // set totalRows\n    // if (typeof this.options.rows !== 'undefined') {\n    //   this.options.totalRows = this.options.rows.length;\n    // }\n    // set totalColumns and hasTableHeader\n    if (this.options.columns && this.options.columns.length > 0) {\n      this.options.totalColumns = this.options.columns.length;\n      this.hasTableHeader = true;\n    } else {\n      this.options.columns = [];\n      this.hasTableHeader = false;\n      for (let i = 0; i < this.options.totalColumns; i++) {\n        this.options.columns.push({\n          width: 'auto',\n        });\n      }\n    }\n\n    // restrain totalRows and totalColumns\n    if (this.options.totalRows > this.options.maxRows) {\n      this.options.totalRows = this.options.maxRows;\n    }\n    if (this.options.totalColumns > this.options.maxColumns) {\n      this.options.totalColumns = this.options.maxColumns;\n    }\n\n    // filter nodes that exceeds totalRows and totalColumns\n    if (this.options.nodes && this.options.nodes.length > 0) {\n      this.options.nodes = this.options.nodes.filter(\n        (node) =>\n          node.row + node.rowSpan - 1 <= this.options.totalRows &&\n          node.column + node.colSpan - 1 <= this.options.totalColumns,\n      );\n    }\n\n    // create toolbar and edit state\n    if (this.options.isEditor) {\n      this.mode = 'edit';\n      this.toolbar = new Toolbar(this.baseElement, this);\n    } else {\n      this.mode = 'preview';\n    }\n\n    // create root dom elements and controllers\n    this.element = createClassElement('div', 'tfgraph', this.baseElement);\n    if (this.mode === 'edit') this.element.classList.add('edit');\n    this.lineController = new LineController(this);\n    this.anchorController = new AnchorController(this);\n    this.tableController = new TableController(this);\n\n    this.render();\n  }\n\n  public render() {\n    // render table\n    this.tableController.renderTable();\n\n    // wait for table render ready; TODO set anchor position relative to table cells\n    setTimeout(() => {\n      // render anchors\n      this.anchorController.renderAnchors();\n      // render lines\n      this.lineController.renderLines();\n    }, 1);\n  }\n\n  handleResize = () => {\n    // TODO detailed resize management\n    // this.anchorController.resetPosition();\n    this.refresh();\n  };\n  debouncedHandleResize = debounce(this.handleResize, 500);\n\n  // handle addEventListener events\n  handleEvent(event) {\n    switch (event.type) {\n      case 'resize':\n        this.debouncedHandleResize();\n        break;\n      case 'mousemove':\n        this.onMourseMove(event);\n        break;\n      case 'keydown':\n        this.onKeydown(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onMourseMove(event) {\n    const rect = this.element.getBoundingClientRect();\n    const offsetX = event.clientX - rect.left;\n    const offsetY = event.clientY - rect.top;\n    this.mousePosition = { x: offsetX, y: offsetY };\n    this.lineController.onMouseMove();\n    this.tableController.onMouseMove();\n  }\n\n  onKeydown = (e) => {\n    if (e.code === 'Enter') {\n      // press enter to finish drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.endDrawLine();\n      }\n    } else if (e.code === 'Escape') {\n      // press esc to cancel last anchor point when drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.currentDrawingLine.escapeDrawing();\n      }\n      if (this.tableController.isMovingCell) {\n        this.tableController.stopMoving();\n      }\n      if (this.tableController.isResizingCell) {\n        this.tableController.stopResizing();\n      }\n    }\n  };\n\n  public refresh(options?: TFGraphOptions) {\n    if (!this.isAlive) {\n      return;\n    } else {\n      setTimeout(() => {\n        const height = this.baseElement.getBoundingClientRect().height;\n        // maintain consistent height when rerendering dom elements\n        setStyles(this.baseElement, { height: height + 'px' });\n        this.init(options ? options : this.options);\n        setStyles(this.baseElement, { height: 'auto' });\n      });\n    }\n  }\n\n  public destroy() {\n    if (!this.isAlive) {\n      return;\n    }\n\n    window.removeEventListener('resize', this, false);\n    window.removeEventListener('keydown', this, false);\n    window.removeEventListener('mousemove', this, false);\n\n    this.isAlive = false;\n  }\n\n  public changeMode(mode: Mode) {\n    if (this.mode !== mode) {\n      this.mode = mode;\n      if (mode === 'edit') {\n        this.element.classList.add('edit');\n      } else {\n        this.element.classList.remove('edit');\n      }\n      this.anchorController.setAnchorsVisible(mode === 'edit');\n      this.tableController.renderTable();\n    }\n  }\n}\n\nexport type ColumnWidth = 'auto' | 'lg' | 'md' | 'sm' | 'xs';\n\n// table column header data\nexport interface TFGraphColumn {\n  id?: string;\n  title?: string;\n  width?: ColumnWidth | string;\n}\n\n// table row header data\nexport interface TFGraphRow {\n  id?: string;\n  title: string;\n}\n\ntype RGB = `rgb(${number}, ${number}, ${number})`;\ntype RGBA = `rgba(${number}, ${number}, ${number}, ${number})`;\ntype HEX = `#${string}`;\n\nexport type ColorValue = RGB | RGBA | HEX;\n\nexport type Color =\n  | 'red'\n  | 'orange'\n  | 'yellow'\n  | 'green'\n  | 'cyan'\n  | 'blue'\n  | 'purple'\n  | 'gray'\n  | 'black'\n  | 'white';\n\nexport type FunctionalColor = 'primary' | 'success' | 'info' | 'warning' | 'danger';\n\nexport type NodeType = 'default' | FunctionalColor;\n\nexport type NodeStyleType = {\n  [K in NodeType]: {\n    type: K;\n    normalStyle?: Partial<CSSStyleDeclaration>;\n    hoverStyle?: Partial<CSSStyleDeclaration>;\n  };\n};\n\n// node data\nexport interface TFGraphNode {\n  id: string | number;\n  title: string;\n  row: number;\n  column: number;\n  colSpan: number;\n  rowSpan: number;\n  type?: NodeType;\n  isBtn?: boolean;\n  meta?: Record<string, unknown>;\n  showPopup?: boolean;\n}\n\n// export interface ThemeOption {\n//   borderColor: string;\n//   titleColor: string;\n//   backgroundColor: string;\n// }\n\n// export interface Theme {\n//   default: ThemeOption;\n//   success: ThemeOption;\n//   warning: ThemeOption;\n//   danger: ThemeOption;\n//   primary: ThemeOption;\n// }\n\nexport type Mode = 'edit' | 'preview';\n\n// labels for ui\nexport type Labels = {\n  editMode?: string;\n  previewMode?: string;\n  editColumn?: string;\n  addColumn?: string;\n  deleteColumn?: string;\n  addRow?: string;\n  deleteRow?: string;\n  editNode?: string;\n  addNode?: string;\n  deleteNode?: string;\n  adjustNodeSize?: string;\n  moveNode?: string;\n  newNode?: string;\n  enterNodeName?: string;\n  enterColumnName?: string;\n  confirm?: string;\n  cancel?: string;\n  hint_drawLine?: string;\n  hint_hoverLine?: string;\n  hint_hoverAnchor?: string;\n  hint_moveNode?: string;\n  hint_resizeNode?: string;\n};\n\n// table-flow-graph options\nexport interface TFGraphOptions {\n  nodes?: TFGraphNode[];\n  columns?: TFGraphColumn[];\n  totalColumns?: number;\n  maxColumns?: number;\n  tableLayoutFixed?: boolean;\n  // rows?: TFGraphRow[];\n  totalRows?: number;\n  maxRows?: number;\n  isEditor?: boolean;\n  lines?: string[][]; // 2D array of anchor point ids to draw lines\n  labels?: Labels;\n  onChangeLines?: (lines: string[][]) => void; // lines changed\n  // column methods\n  addColumn?: () => void; // custom add column method\n  onAddColumn?: (columnData?: TFGraphColumn) => void; // add column event\n  editColumn?: (column: TFGraphColumn) => void;\n  onEditColumn?: (column: TFGraphColumn) => void; // on edit column callback\n  deleteColumn?: (column?: TFGraphColumn) => void; // custom delete column method\n  onDeleteColumn?: (column?: TFGraphColumn) => void; // delete column callback\n  // row methods\n  addRow?: () => void; // custom add row method\n  onAddRow?: () => void; // add row\n  deleteRow?: () => void; // custom delete row method\n  onDeleteRow?: () => void; // delete the last row\n  // node methods\n  addNode?: (row: number, column: number) => void; // custom add node method\n  onAddNode?: (node: TFGraphNode) => void; // add node callback\n  editNode?: (node: TFGraphNode) => void; // custom edit node method\n  onEditNode?: (node: TFGraphNode) => void; // edit node callback\n  deleteNode?: (node: TFGraphNode) => void; // custom delete node method\n  onDeleteNode?: (node: TFGraphNode) => void;\n  onClickNode?: (node: TFGraphNode, nodeEl: HTMLElement) => void; // click event on viewer mode\n  // onChangeNode?: (newNode: TFGraphNode, oldNode: TFGraphNode) => void;\n  renderNode?: (node: TFGraphNode) => HTMLElement; // custom render node content\n  renderNodeHoverPopup?: (node: TFGraphNode) => HTMLElement; // custom render node hover popup\n}\n\n// anchor point's relative position to a table cell\nexport type Bearing =\n  | 'topleft'\n  | 'top'\n  | 'topright'\n  | 'left'\n  | 'center'\n  | 'right'\n  | 'bottomleft'\n  | 'bottom'\n  | 'bottomright';\n\nexport type Position = {\n  x: number;\n  y: number;\n};\n\nexport interface ColumnSpec {\n  left: number;\n  width: number;\n  columnIndex: number;\n}\n\nexport interface RowSpec {\n  top: number;\n  height: number;\n  rowIndex: number;\n}\n\nexport type TableGridRect = ColumnSpec & RowSpec;\n\nexport interface LineOptions {\n  positionA: Position; // x and y position relative to table element\n  positionB: Position;\n  thickness: number;\n  isStart: boolean;\n  isEnd: boolean;\n}\n\nexport interface LineGroupOptions {\n  anchorIds: string[];\n  isDrawingActive: boolean; // current line group is drawing\n}\n\nexport type BtnType = 'default' | 'primary' | 'warning' | 'danger' | 'success' | 'clean';\n\nexport interface BtnOptions {\n  label?: string;\n  type?: BtnType;\n  className?: string;\n  icon?: string;\n  onClick?: (e: MouseEvent) => void;\n  tooltip?: string;\n}\n\nexport type TogglerItem = {\n  label: string;\n  id?: string;\n};\n\nexport interface TogglerOptions {\n  items: TogglerItem[];\n  initialActiveIndex?: number;\n  onChange?: (item: TogglerItem, index: number) => void;\n}\n\nexport type TogglerButton = {\n  itemData: TogglerItem;\n  el: HTMLElement;\n  index: number;\n};\n\nexport interface PopupOptions {\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n  contentElement?: HTMLElement;\n}\n\nexport interface TooltipOptoins {\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n  label?: string;\n}\n\nexport interface DialogOptions {\n  title: string;\n  targetElement?: HTMLElement;\n  contentElement: HTMLElement;\n}\n\nexport interface HeaderCellMenuOptions {\n  showAdd?: boolean;\n  showDelete?: boolean;\n}\n\nexport type PositionAndSize = {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\nexport type CellPositionAndSize = {\n  row: number;\n  column: number;\n  rowSpan: number;\n  colSpan: number;\n};\n\nexport type HintType =\n  | 'idel'\n  | 'drawLine'\n  | 'hoverLine'\n  | 'hoverAnchor'\n  | 'moveNode'\n  | 'resizeNode';\n"],"names":["createClassElement","tagName","className","parentNode","el","document","createElement","appendChild","removeElement","element","remove","removeChild","setStyles","obj","key","val","concat","style","ColorPlate","FunctionalColors","primary","success","info","warning","danger","svgIconList","edit","plus","x","x2","expand","move","delete_row","delete_col","check","Icon","parentElement","options","htmlString","div","name","this","innerHTML","trim","firstChild","size","color","styleObj","width","height","fill","setAttribute","classList","add","Tooltip","targetElement","_this","rendered","addEventListener","mouseEnter","mouseLeave","prototype","render","_a","_b","placement","label","targetRect","getBoundingClientRect","body","left","top","areaElement","boxElement","arrowElement","areaRect","arrowRect","areaStyleObj","arrowStyleObj","bottom","right","updatePosition","showTimeoutId","window","clearTimeout","dismiss","removeEventListener","setTimeout","dismissTimeoutId","Button","type","onClick","icon","tooltip","btnToolTip","e","disabled","setDisabled","setEnabled","Toggler","btnList","items","initialActiveIndex","onChange","indicatorEl","btnContainerEl","forEach","item","index","push","itemData","setActive","activeIndex","setActiveIndicator","containerRect","rect","Dialog","title","getElementsByTagName","maskElement","renderTitleBar","contentElement","close","titleBarElement","innerText","closeBtnElement","EditColumnDialog","graphInstance","targetHeaderCell","dialog","setIsEdit","renderContent","columnData","isEdit","inputEl","value","labels","enterColumnName","btnContainer","btnCancel","cancel","btnConfirm","confirm","refresh","onEditColumn","colData","id","totalColumns","columns","onAddColumn","show","editColumn","addColumn","HintManager","targetEl","currentHintState","setHint","hintState","hint_drawLine","hint_hoverLine","hint_hoverAnchor","hint_moveNode","hint_resizeNode","Toolbar","modeToggler","editMode","previewMode","changeMode","setToolbarState","hintEl","hintMgr","rightBtns","newColumnBtn","disabledMask","addColDialog","hasTableHeader","Object","assign","disable","enable","maxColumns","mode","NodeTypeList","NodeStyle","default","normalStyle","borderColor","backgroundColor","hoverStyle","__assign","t","s","i","n","arguments","length","p","hasOwnProperty","call","apply","btnStyle","border","padding","borderRadius","margin","cursor","NodeTypeBtn","option","hovered","createNodeTypeBtn","parentEl","nodeEl","borderWidth","borderStyle","active","toggleHover","toggleActive","NodeTypePicker","currentType","initialType","btn","clickType","setActiveType","EditNodeDialog","targetCell","nodeData","nodeNameInput","enterNodeName","onEditNode","row","column","rowSpan","colSpan","nodes","onAddNode","editNode","addNode","Popup","timeoutId","Node","cell","tableCell","hoverd","createNode","data","isBtn","renderNode","toggleHovered","setViewerControls","onClickNode","showPopup","contentEl","renderNodeHoverPopup","TableCell","createTabelCell","hasNode","node","minHeight","setEditorControls","controlLayer","editDialog","moveNode","tableController","startMoving","deleteNode","onDeleteNode","adjustNodeSize","startResizing","totalRows","deleteRowBtn","deleteRow","onDeleteRow","deleteColBtn","deleteColumn","targetColumn","onDeleteColumn","pop","onMouseEnter","onMouseLeave","canDeleteRow","lineController","canDeleteColumn","setIsTarget","isTarget","opacity","TableHeaderCell","columnIndex","isLast","setEditControls","editColDialog","TableMaskBox","submitCellChange","setPositinAndSize","pos_size","TableMask","tableGridRectList","showMask","targetTableCell","setFilteredOccupiedList","maskBox","mouseGridRect","getMouseRect","targetCellRect","getRectByRowAndColumn","setMaskBoxStatus","filteredOccupiedList","cloneDeep","occupiedList","j","isMovingCell","resultCellPositionAndSize","rowIndex","Math","min","abs","topLeftRect","bottomRightRect","doable","startMask","stopMask","submitChange","targetCellPositionAndSize","isEqual","targetGridRect","mouseX","mousePosition","mouseY","y","gridRect","find","onMouseMove","newRect","Table","initTableStatus","headerCells","cells","isResizingCell","renderTable","createHeader","createTds","createCells","setControls","deleteableObj","setColumnAndRowDeletable","columnSpecs","rowSpecs","headerCell","offsetLeft","getMinRowSpanCell","targetCellRowHeight","offsetTop","rowSpec","columnSpec","tableMask","setBottomControl","minRowSpan","targetRowCell","rowCells","filter","rowSpan_1","toolbar","stopMoving","stopResizing","bottomControlEL","maxRows","addRow","onAddRow","tableLayoutFixed","tableLayout","tr_1","tr","occupiedRow","spanedTdIds","getElementById","includes","this_1","targetNode","targetTd","toString","LineSegment","parent","positionA","positionB","thickness","isStart","_c","isEnd","toggleStartPoint","toggleEndArrow","drawLine","setHovered","onDoubleClick","setHoverd","x1","y1","y2","sqrt","cx","cy","angle","atan2","PI","transform","startPointEl","endArrowEl","LineGroup","isDrawingActive","anchorIds","drawLines","addLineSegment","anchorId","endDrawLine","removeLineGroup","anchors","lines","targetAnchor","anchorController","anchor","pointList","map","posX","posY","line","cursorLineStartPosition","cursorLine","endDrawing","escapeDrawing","lineAnchorIds","lineArray","targetPosition","hoveredAnchor","LineController","Array","isArray","originLineAnchorIds","renderLines","lineGroup","setColAndRowDeletable","startDrawLine","isDrawingLine","zIndex","currentDrawingLine","undefined","onChangeLines","idArray","split","col","parseInt","createLineGroup","Anchor","bearing","isOffsetX","isOffsetY","hidden","elementTr","elementCol","area","shortBearing","getBearingShort","setVisible","setPosition","setHoveredAnchor","setOnePosition","visible","x_left","x_center","offsetWidth","x_right","y_top","y_center","offsetHeight","y_bottom","AnchorController","renderAnchors","createAnchors","resetPosition","setAnchorsVisible","defaultOptions","newNode","TableFlowGraph","func","wait","timeoutID","handleResize","debouncedHandleResize","Number","isInteger","console","warn","args","_i","context","onKeydown","code","Error","baseElement","getAttribute","random","toFixed","init","isAlive","isEditor","TableController","handleEvent","event","onMourseMove","offsetX","clientX","offsetY","clientY","destroy"],"mappings":"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"}