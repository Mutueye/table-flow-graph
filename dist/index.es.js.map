{"version":3,"file":"index.es.js","sources":["../src/lib/dom.ts","../src/lib/utils.ts","../src/components/ui/icon/svgIconList.ts","../src/components/ui/icon/Icon.ts","../src/components/ui/tooltip/Tooltip.ts","../src/components/ui/button/Button.ts","../src/components/ui/toggler/Toggler.ts","../src/components/ui/dialog/Dialog.ts","../src/components/table/EditColumnDialog.ts","../src/components/toolbar/HintManager.ts","../src/components/toolbar/Toolbar.ts","../src/components/table/node/nodeUtils.ts","../node_modules/.pnpm/node_modules/tslib/tslib.es6.js","../src/components/table/node/NodeTypeBtn.ts","../src/components/table/node/NodeTypePicker.ts","../src/components/table/node/EditNodeDialog.ts","../src/components/ui/popup/Popup.ts","../src/components/table/node/Node.ts","../src/components/table/TableCell.ts","../src/components/table/TableHeaderCell.ts","../src/components/table/TableMaskBox.ts","../src/components/table/TableMask.ts","../src/components/table/TableController.ts","../src/components/line/LineSegment.ts","../src/components/line/LineGroup.ts","../src/components/line/LineController.ts","../src/components/anchor/Anchor.ts","../src/components/anchor/AnchorController.ts","../src/index.ts"],"sourcesContent":["// HTMLElementTagNameMap from lib.dom.d.ts\ninterface HTMLElementTagNameMap {\n  a: HTMLAnchorElement;\n  abbr: HTMLElement;\n  address: HTMLElement;\n  area: HTMLAreaElement;\n  article: HTMLElement;\n  aside: HTMLElement;\n  audio: HTMLAudioElement;\n  b: HTMLElement;\n  base: HTMLBaseElement;\n  bdi: HTMLElement;\n  bdo: HTMLElement;\n  blockquote: HTMLQuoteElement;\n  body: HTMLBodyElement;\n  br: HTMLBRElement;\n  button: HTMLButtonElement;\n  canvas: HTMLCanvasElement;\n  caption: HTMLTableCaptionElement;\n  cite: HTMLElement;\n  code: HTMLElement;\n  col: HTMLTableColElement;\n  colgroup: HTMLTableColElement;\n  data: HTMLDataElement;\n  datalist: HTMLDataListElement;\n  dd: HTMLElement;\n  del: HTMLModElement;\n  details: HTMLDetailsElement;\n  dfn: HTMLElement;\n  dialog: HTMLDialogElement;\n  dir: HTMLDirectoryElement;\n  div: HTMLDivElement;\n  dl: HTMLDListElement;\n  dt: HTMLElement;\n  em: HTMLElement;\n  embed: HTMLEmbedElement;\n  fieldset: HTMLFieldSetElement;\n  figcaption: HTMLElement;\n  figure: HTMLElement;\n  font: HTMLFontElement;\n  footer: HTMLElement;\n  form: HTMLFormElement;\n  frame: HTMLFrameElement;\n  frameset: HTMLFrameSetElement;\n  h1: HTMLHeadingElement;\n  h2: HTMLHeadingElement;\n  h3: HTMLHeadingElement;\n  h4: HTMLHeadingElement;\n  h5: HTMLHeadingElement;\n  h6: HTMLHeadingElement;\n  head: HTMLHeadElement;\n  header: HTMLElement;\n  hgroup: HTMLElement;\n  hr: HTMLHRElement;\n  html: HTMLHtmlElement;\n  i: HTMLElement;\n  iframe: HTMLIFrameElement;\n  img: HTMLImageElement;\n  input: HTMLInputElement;\n  ins: HTMLModElement;\n  kbd: HTMLElement;\n  label: HTMLLabelElement;\n  legend: HTMLLegendElement;\n  li: HTMLLIElement;\n  link: HTMLLinkElement;\n  main: HTMLElement;\n  map: HTMLMapElement;\n  mark: HTMLElement;\n  marquee: HTMLMarqueeElement;\n  menu: HTMLMenuElement;\n  meta: HTMLMetaElement;\n  meter: HTMLMeterElement;\n  nav: HTMLElement;\n  noscript: HTMLElement;\n  object: HTMLObjectElement;\n  ol: HTMLOListElement;\n  optgroup: HTMLOptGroupElement;\n  option: HTMLOptionElement;\n  output: HTMLOutputElement;\n  p: HTMLParagraphElement;\n  param: HTMLParamElement;\n  picture: HTMLPictureElement;\n  pre: HTMLPreElement;\n  progress: HTMLProgressElement;\n  q: HTMLQuoteElement;\n  rp: HTMLElement;\n  rt: HTMLElement;\n  ruby: HTMLElement;\n  s: HTMLElement;\n  samp: HTMLElement;\n  script: HTMLScriptElement;\n  section: HTMLElement;\n  select: HTMLSelectElement;\n  slot: HTMLSlotElement;\n  small: HTMLElement;\n  source: HTMLSourceElement;\n  span: HTMLSpanElement;\n  strong: HTMLElement;\n  style: HTMLStyleElement;\n  sub: HTMLElement;\n  summary: HTMLElement;\n  sup: HTMLElement;\n  table: HTMLTableElement;\n  tbody: HTMLTableSectionElement;\n  td: HTMLTableCellElement;\n  template: HTMLTemplateElement;\n  textarea: HTMLTextAreaElement;\n  tfoot: HTMLTableSectionElement;\n  th: HTMLTableCellElement;\n  thead: HTMLTableSectionElement;\n  time: HTMLTimeElement;\n  title: HTMLTitleElement;\n  tr: HTMLTableRowElement;\n  track: HTMLTrackElement;\n  u: HTMLElement;\n  ul: HTMLUListElement;\n  var: HTMLElement;\n  video: HTMLVideoElement;\n  wbr: HTMLElement;\n}\n\n/**\n * Create an element with designated tagName，and add a className to it,\n * then append to parentNode if has one.\n * @param tagName\n * @param className\n * @param parentNode\n * @returns\n */\nexport function createClassElement<K extends keyof HTMLElementTagNameMap>(\n  tagName: K,\n  className: string,\n  parentNode: HTMLElement = null,\n): HTMLElementTagNameMap[K] {\n  const el = document.createElement(tagName) as HTMLElementTagNameMap[K];\n  if (className) el.className = className;\n  if (parentNode) parentNode.appendChild(el);\n  return el;\n}\n\nconst elMatches =\n  typeof Element !== 'undefined' &&\n  (Element.prototype.matches || Element.prototype.webkitMatchesSelector);\n\nexport function matches(element: HTMLElement, query: string): boolean {\n  if (!elMatches) {\n    throw new Error('No element matching method supported');\n  }\n\n  return elMatches.call(element, query);\n}\n\n/**\n * Delete a dom element\n * @param {HTMLElement} element\n */\nexport function removeElement(element: HTMLElement) {\n  if (element) {\n    if (element.remove) {\n      element.remove();\n    } else {\n      if (element.parentNode) {\n        element.parentNode.removeChild(element);\n      }\n    }\n  }\n}\n\nexport function queryChildren(element: HTMLElement, selector: string): HTMLElement[] {\n  return Array.prototype.filter.call(element.children, (child: HTMLElement) =>\n    matches(child, selector),\n  );\n}\n\nexport function getStyles(element: HTMLElement): CSSStyleDeclaration {\n  return getComputedStyle(element);\n}\n\nexport function setStyles(element: HTMLElement, obj: Partial<CSSStyleDeclaration>) {\n  for (const key in obj) {\n    let val = obj[key];\n    if (typeof val === 'number') {\n      val = `${val}px`;\n    }\n    element.style[key] = val;\n  }\n  return element;\n}\n\nexport const createElementFromHtmlString = (htmlString: string) => {\n  const div = document.createElement('div');\n  div.innerHTML = htmlString.trim();\n\n  // Change this to div.childNodes to support multiple top-level nodes.\n  return div.firstChild as HTMLElement;\n};\n","import { FunctionalColor, ColorValue, Color } from '..';\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function debounce<F extends Function>(func: F, wait: number): F {\n  let timeoutID: number;\n\n  if (!Number.isInteger(wait)) {\n    console.warn('Call debounce without a valid number');\n    wait = 300;\n  }\n\n  // conversion through any necessary as it wont satisfy criteria otherwise\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return <any>function (this: any, ...args: any[]) {\n    clearTimeout(timeoutID);\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const context = this;\n\n    timeoutID = window.setTimeout(function () {\n      func.apply(context, args);\n    }, wait);\n  };\n}\n\n// check if last column/row deleteable by occupiedList\nexport const setColumnAndRowDeletable = (\n  occupiedList: number[][],\n  totalRows: number,\n  totalColumns: number,\n) => {\n  let canDeleteColumn = true;\n  let canDeleteRow = true;\n  for (let i = 0; i < totalRows - 1; i++) {\n    if (occupiedList[i][totalColumns - 1] !== 0) {\n      canDeleteColumn = false;\n    }\n  }\n  for (let i = 0; i < totalColumns - 1; i++) {\n    if (occupiedList[totalRows - 1][i] !== 0) {\n      canDeleteRow = false;\n    }\n  }\n  return { canDeleteRow, canDeleteColumn };\n};\n\nexport const uniqId = () => {\n  const eles = window.document.getElementsByTagName('body');\n  const bodyObj = eles.item(0);\n  const c = bodyObj.innerHTML.length;\n  const t = new Date().getTime();\n  const n = Math.floor(Math.random() * 100 + 1);\n  return c.toString() + t.toString() + n.toString();\n};\n\nexport const ColorPlate: Record<Color, ColorValue> = {\n  red: '#FA5151',\n  orange: '#F96A00',\n  yellow: '#FCB42C',\n  green: '#59BE41',\n  cyan: '#28E1F0',\n  blue: '#3366FF',\n  purple: '#8433FF',\n  gray: '#9398A5',\n  black: '#000000',\n  white: '#FFFFFF',\n};\n\nexport const FunctionalColors: Record<FunctionalColor, ColorValue> = {\n  primary: ColorPlate.blue,\n  success: ColorPlate.green,\n  info: ColorPlate.gray,\n  warning: ColorPlate.orange,\n  danger: ColorPlate.red,\n};\n","const svgIconList = {\n  edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n  plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n  x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n  x2: '<svg t=\"1660284061189\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"59188\" width=\"200\" height=\"200\"><path d=\"M755.626667 695.04c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333L512 572.16 328.96 755.2c-8.533333 8.533333-19.2 12.373333-30.293333 12.373333s-21.76-4.266667-30.293334-12.373333c-16.64-16.64-16.64-43.52 0-60.16l183.04-183.04-183.04-183.04C251.733333 312.32 251.733333 285.44 268.373333 268.8c16.64-16.64 43.52-16.64 60.16 0l183.04 183.04L694.613333 268.8c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l183.466667 183.04z\" p-id=\"59189\"></path></svg>',\n  expand:\n    '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n  move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n  remove:\n    '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n  delete_row:\n    '<svg t=\"1659516333894\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12036\" width=\"200\" height=\"200\"><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.106667-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.586667l-90.453333 90.453333c-8.106667 8.106667-19.2 12.373333-30.293334 12.373333-11.093333 0-21.76-4.266667-30.293333-12.373333-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.88c-16.64-16.64-16.64-43.52 0-60.586667 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.586667L572.16 512l90.88 90.453333zM896 170.666667c0 23.466667-19.2 42.666667-42.666667 42.666666H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666667zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"12037\"></path></svg>',\n  delete_col:\n    '<svg t=\"1659516365239\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"12171\" width=\"200\" height=\"200\"><path d=\"M421.546667 663.04c-16.64 16.64-43.52 16.64-60.16 0-8.106667-8.533333-12.373333-19.2-12.373334-30.293333 0-11.093333 4.266667-21.76 12.373334-30.293334l90.453333-90.453333-90.88-90.453333c-8.106667-8.106667-12.373333-19.2-12.373333-30.293334 0-11.093333 4.266667-21.76 12.373333-30.293333 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.586666 0 16.64 16.64 16.64 43.52 0 60.16L572.16 512l90.453333 90.453333c16.64 16.64 16.64 43.52 0 60.16-16.64 16.64-43.52 16.64-60.586666 0L512 572.16l-90.453333 90.88zM853.333333 896c-23.466667 0-42.666667-19.2-42.666666-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666667 42.666667zM128 853.333333V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667v682.666666c0 23.466667-19.2 42.666667-42.666666 42.666667s-42.666667-19.2-42.666667-42.666667z\" p-id=\"12172\"></path></svg>',\n  check:\n    '<svg t=\"1661393057943\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"13190\" width=\"200\" height=\"200\"><path d=\"M426.666667 746.666667c-11.093333 0-21.76-4.266667-30.293334-12.373334l-213.333333-213.333333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l183.04 183.04L779.946667 290.133333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-384 384c-7.68 8.106667-18.346667 12.373333-29.44 12.373334z\" p-id=\"13191\"></path></svg>',\n};\n\nexport default svgIconList;\n","import { createElementFromHtmlString, setStyles } from '../../../lib/dom';\nimport svgIconList from './svgIconList';\n\n// const svgIconList = {\n//   edit: '<svg t=\"1657530672054\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"8212\" width=\"200\" height=\"200\"><path d=\"M712.96 268.373333l-128-128c-16.64-16.64-43.52-16.64-60.16 0l-384 384c-8.106667 8.106667-12.373333 18.773333-12.373333 30.293334v128c0 23.466667 19.2 42.666667 42.666666 42.666666h128c11.093333 0 22.186667-4.266667 30.293334-12.373333l264.106666-264.106667 22.186667-22.186666 97.706667-97.706667c16.213333-16.64 16.213333-43.946667-0.426667-60.586667zM281.173333 640H213.333333v-67.84l232.533334-232.533333 67.84 67.84L281.173333 640z m292.693334-292.693333l-67.84-67.84L554.666667 230.826667 622.506667 298.666667l-48.64 48.64zM853.333333 896H170.666667c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666h682.666666c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667z\" p-id=\"8213\"></path></svg>',\n//   plus: '<svg t=\"1657533725416\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"4984\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"4985\"></path><path d=\"M725.333333 512c0 23.466667-19.2 42.666667-42.666666 42.666667h-128v128c0 23.466667-19.2 42.666667-42.666667 42.666666s-42.666667-19.2-42.666667-42.666666v-128H341.333333c-23.466667 0-42.666667-19.2-42.666666-42.666667s19.2-42.666667 42.666666-42.666667h128V341.333333c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666667 42.666666v128h128c23.466667 0 42.666667 19.2 42.666666 42.666667z\" p-id=\"4986\"></path></svg>',\n//   x: '<svg t=\"1657533744067\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"5120\" width=\"200\" height=\"200\"><path d=\"M512 85.333333C276.906667 85.333333 85.333333 276.906667 85.333333 512s191.573333 426.666667 426.666667 426.666667 426.666667-191.573333 426.666667-426.666667S747.093333 85.333333 512 85.333333z m0 768c-188.16 0-341.333333-153.173333-341.333333-341.333333s153.173333-341.333333 341.333333-341.333333 341.333333 153.173333 341.333333 341.333333-153.173333 341.333333-341.333333 341.333333z\" p-id=\"5121\"></path><path d=\"M663.04 602.453333c16.64 16.64 16.64 43.52 0 60.16-8.533333 8.533333-19.2 12.373333-30.293333 12.373334-11.093333 0-21.76-4.266667-30.293334-12.373334L512 572.16l-90.453333 90.453333c-8.533333 8.533333-19.2 12.373333-30.293334 12.373334-11.093333 0-21.76-4.266667-30.293333-12.373334-16.64-16.64-16.64-43.52 0-60.16l90.453333-90.453333-90.453333-90.453333c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l90.453333 90.453333 90.453334-90.453333c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-89.6 90.453333 90.453333 90.453333z\" p-id=\"5122\"></path></svg>',\n//   expand:\n//     '<svg t=\"1658744557448\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9385\" width=\"200\" height=\"200\"><path d=\"M170.666667 394.24c-23.466667 0-42.666667-19.2-42.666667-42.666667V170.666667c0-23.466667 19.2-42.666667 42.666667-42.666667h180.906666c23.466667 0 42.666667 19.2 42.666667 42.666667s-19.2 42.666667-42.666667 42.666666H213.333333v138.24c0 23.466667-19.2 42.666667-42.666666 42.666667zM672.426667 896c-23.466667 0-42.666667-19.2-42.666667-42.666667s19.2-42.666667 42.666667-42.666666H810.666667v-138.24c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667V853.333333c0 23.466667-19.2 42.666667-42.666667 42.666667h-180.906666zM170.666667 896c-11.52 0-22.186667-4.693333-30.293334-12.373333-8.106667-8.106667-12.373333-18.773333-12.373333-30.293334v-180.906666c0-23.466667 19.2-42.666667 42.666667-42.666667s42.666667 19.2 42.666666 42.666667V810.666667h138.24c23.466667 0 42.666667 19.2 42.666667 42.666666s-19.2 42.666667-42.666667 42.666667H170.666667zM853.333333 394.24c-23.466667 0-42.666667-19.2-42.666666-42.666667V213.333333h-138.24c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667H853.333333c11.52 0 22.186667 4.693333 30.293334 12.373333 8.106667 8.106667 12.373333 18.773333 12.373333 30.293334v180.906666c0 23.466667-19.2 42.666667-42.666667 42.666667z\" p-id=\"9386\"></path></svg>',\n//   move: '<svg t=\"1658744606420\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9520\" width=\"200\" height=\"200\"><path d=\"M426.666667 512c0 23.466667-19.2 42.666667-42.666667 42.666667H230.826667L285.866667 609.706667c16.64 16.64 16.64 43.52 0 60.16-8.106667 8.533333-19.2 12.373333-30.293334 12.373333s-21.76-4.266667-30.293333-12.373333l-128-128c-16.64-16.64-16.64-43.52 0-60.16l128-128c16.64-16.64 43.52-16.64 60.16 0 16.64 16.64 16.64 43.52 0 60.16l-54.613333 55.466666H384c23.466667 0 42.666667 19.2 42.666667 42.666667zM926.293333 542.293333l-128 128c-8.106667 8.533333-19.2 12.373333-30.293333 12.373334s-21.76-4.266667-30.293333-12.373334c-16.64-16.64-16.64-43.52 0-60.16l55.04-55.04H640c-23.466667 0-42.666667-19.2-42.666667-42.666666s19.2-42.666667 42.666667-42.666667h153.173333L738.133333 414.72c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l128 128c16.64 15.786667 16.64 43.093333 0 59.733333zM670.293333 798.293333l-128 128c-8.106667 8.106667-18.773333 12.373333-30.293333 12.373334s-22.186667-4.693333-30.293333-12.373334l-128-128c-16.64-16.64-16.64-43.52 0-60.16 16.64-16.64 43.52-16.64 60.16 0l55.04 55.04V640c0-23.466667 19.2-42.666667 42.666666-42.666667s42.666667 19.2 42.666667 42.666667v153.173333l55.04-55.04c16.64-16.64 43.52-16.64 60.16 0 17.493333 16.213333 17.493333 43.52 0.853333 60.16zM670.293333 286.293333c-16.64 16.64-43.52 16.64-60.16 0l-55.466666-55.466666V384c0 23.466667-19.2 42.666667-42.666667 42.666667s-42.666667-19.2-42.666667-42.666667V230.826667l-55.04 55.466666C405.76 294.4 395.093333 298.666667 384 298.666667s-21.76-4.266667-30.293333-12.373334C337.066667 269.653333 337.066667 242.773333 353.706667 226.133333l128-128c16.64-16.64 43.52-16.64 60.16 0l128 128c17.066667 16.213333 17.066667 43.52 0.426666 60.16z\" p-id=\"9521\"></path></svg>',\n//   remove:\n//     '<svg t=\"1658744626586\" class=\"icon\" viewBox=\"0 0 1024 1024\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" p-id=\"9655\" width=\"200\" height=\"200\"><path d=\"M405.333333 768c-23.466667 0-42.666667-19.2-42.666666-42.666667v-256c0-23.466667 19.2-42.666667 42.666666-42.666666s42.666667 19.2 42.666667 42.666666v256c0 23.466667-19.2 42.666667-42.666667 42.666667zM618.666667 768c-23.466667 0-42.666667-19.2-42.666667-42.666667v-256c0-23.466667 19.2-42.666667 42.666667-42.666666s42.666667 19.2 42.666666 42.666666v256c0 23.466667-19.2 42.666667-42.666666 42.666667z\" p-id=\"9656\"></path><path d=\"M896 256h-170.666667V128c0-23.466667-19.2-42.666667-42.666666-42.666667H341.333333c-23.466667 0-42.666667 19.2-42.666666 42.666667v128H128c-23.466667 0-42.666667 19.2-42.666667 42.666667s19.2 42.666667 42.666667 42.666666h42.666667v554.666667c0 23.466667 19.2 42.666667 42.666666 42.666667h597.333334c23.466667 0 42.666667-19.2 42.666666-42.666667V341.333333h42.666667c23.466667 0 42.666667-19.2 42.666667-42.666666s-19.2-42.666667-42.666667-42.666667zM384 170.666667h256v85.333333H384V170.666667z m384 682.666666H256V341.333333h512v512z\" p-id=\"9657\"></path></svg>',\n// };\n\nexport class Icon {\n  public element: HTMLElement;\n  constructor(\n    parentElement: HTMLElement | null,\n    options: {\n      name: string;\n      size?: number;\n      color?: string;\n      className?: string;\n      style?: Partial<CSSStyleDeclaration>;\n    },\n  ) {\n    const targetIcon = svgIconList[options.name];\n    if (targetIcon) {\n      this.element = createElementFromHtmlString(svgIconList[options.name]);\n      const size = options.size ? options.size : 16;\n      const color = options.color ? options.color : '#333333';\n      const styleObj: Partial<CSSStyleDeclaration> = {\n        width: size + 'px',\n        height: size + 'px',\n      };\n      if (options.color) {\n        styleObj.fill = color;\n        styleObj.color = color;\n      }\n      setStyles(this.element, styleObj);\n      if (options.style) {\n        setStyles(this.element, options.style);\n      }\n      if (options.className) this.element.setAttribute('class', options.className);\n      this.element.classList.add('tfgraph-icon');\n      parentElement.appendChild(this.element);\n    }\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { TooltipOptoins } from '../../../index';\n\n/**\n * table-flow-graph popup\n */\nexport default class Tooltip {\n  targetElement: HTMLElement;\n  options: TooltipOptoins;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public dismissTimeoutId: number | null;\n  public showTimeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: TooltipOptoins) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n    this.targetElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.addEventListener('mouseleave', () => this.mouseLeave());\n  }\n\n  public render() {\n    const { placement = 'top', label } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-tooltip tfgraph-wrapper', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-tooltip-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-tooltip-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-tooltip-arrow', this.areaElement);\n    if (label) this.boxElement.innerHTML = label;\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    document.addEventListener('scroll', () => this.updatePosition());\n    this.rendered = true;\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n  }\n\n  public updatePosition() {\n    const targetRect = this.targetElement.getBoundingClientRect();\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.targetElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    document.removeEventListener('scroll', () => this.updatePosition());\n    if (this.element) removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered && !this.showTimeoutId) {\n      this.showTimeoutId = window.setTimeout(() => {\n        this.render();\n      }, 500);\n    }\n    if (this.dismissTimeoutId) {\n      window.clearTimeout(this.dismissTimeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    if (this.showTimeoutId) {\n      window.clearTimeout(this.showTimeoutId);\n      this.showTimeoutId = null;\n    }\n    this.dismissTimeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 50);\n  }\n}\n","import { createClassElement } from '../../../lib/dom';\nimport { BtnOptions } from '../../../index';\nimport { Icon } from '../icon/Icon';\nimport Tooltip from '../tooltip/Tooltip';\n\n/**\n * table-flow-graph button\n */\nexport default class Button {\n  public element: HTMLElement;\n  public disabled: boolean;\n  public btnToolTip: Tooltip;\n\n  constructor(parentElement: HTMLElement, options: BtnOptions) {\n    const { label, type, onClick, icon, tooltip } = options;\n    let className = 'tfgraph-button is-hoverable';\n    if (options.className) className += ' ' + options.className;\n    className += ' ' + (type ? type : 'default');\n    this.element = createClassElement('button', className, parentElement);\n    if (icon) new Icon(this.element, { name: icon, size: 16, className: label ? 'mr-5' : '' });\n    if (label) {\n      createClassElement('span', '', this.element).innerHTML = label;\n    }\n    if (tooltip) this.btnToolTip = new Tooltip(this.element, { label: tooltip });\n\n    this.element.addEventListener('click', (e) => {\n      if (this.btnToolTip) this.btnToolTip.dismiss();\n      if (this.disabled) return;\n      if (typeof onClick === 'function') {\n        onClick(e);\n      }\n    });\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { createClassElement, setStyles } from '../../../lib/dom';\nimport { TogglerOptions, TogglerButton } from '../../../index';\n\n/**\n * table-flow-graph toggler btn group\n */\nexport default class Toggler {\n  public element: HTMLElement;\n  public indicatorEl: HTMLElement;\n  public btnContainerEl: HTMLElement;\n  public disabled: boolean;\n  public activeIndex: number;\n  public btnList: TogglerButton[] = [];\n\n  constructor(parentElement: HTMLElement, options: TogglerOptions) {\n    const { items, initialActiveIndex, onChange } = options;\n    this.element = createClassElement('div', 'tfgraph-toggler', parentElement);\n    this.indicatorEl = createClassElement('div', 'tfgraph-toggler-indicator', this.element);\n    this.btnContainerEl = createClassElement('div', 'flex flex-row items-center', this.element);\n    items.forEach((item, index) => {\n      const el = createClassElement('button', 'tfgraph-toggler-btn', this.btnContainerEl);\n      el.innerHTML = item.label;\n      this.btnList.push({ itemData: item, el, index });\n      el.addEventListener('click', () => {\n        this.setActive(index);\n        if (typeof onChange === 'function') onChange(item, index);\n      });\n    });\n    this.setActive(typeof initialActiveIndex === 'number' ? initialActiveIndex : 0);\n  }\n\n  setActive(index: number) {\n    if (this.activeIndex !== index) {\n      if (typeof this.activeIndex === 'number') {\n        this.btnList[this.activeIndex].el.classList.remove('active');\n      }\n      this.activeIndex = index;\n      this.btnList[index].el.classList.add('active');\n      this.setActiveIndicator();\n    }\n  }\n\n  setActiveIndicator() {\n    const containerRect = this.btnContainerEl.getBoundingClientRect();\n    const rect = this.btnList[this.activeIndex].el.getBoundingClientRect();\n    setStyles(this.indicatorEl, {\n      width: rect.width + 'px',\n      // this.activeIndex === 0 || this.activeIndex === this.btnList.length - 1\n      //   ? rect.width - 2 + 'px'\n      //   : rect.width + 4 + 'px',\n      left: rect.left - containerRect.left + 4 + 'px',\n      // this.activeIndex === 0\n      //   ? rect.left - containerRect.left + 4 + 'px'\n      //   : rect.left - containerRect.left - 2 + 'px',\n    });\n    // this.indicatorEl.style.width = rect.width + 2 + 'px';\n  }\n\n  setDisabled() {\n    this.disabled = true;\n    this.element.classList.add('disabled');\n  }\n\n  setEnabled() {\n    this.disabled = false;\n    this.element.classList.remove('disabled');\n  }\n}\n","import { createClassElement, removeElement } from '../../../lib/dom';\nimport { DialogOptions } from '../../../index';\nimport { Icon } from '../icon/Icon';\n\n/**\n * table-flow-graph dialog\n */\nexport default class Dialog {\n  targetElement: HTMLElement;\n  public element: HTMLElement;\n  public maskElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public titleBarElement: HTMLElement;\n  public closeBtnElement: HTMLElement;\n  public title: string;\n\n  constructor(options: DialogOptions) {\n    this.title = options.title;\n    this.targetElement = options.targetElement\n      ? options.targetElement\n      : document.getElementsByTagName('body')[0];\n    this.element = createClassElement('div', 'tfgraph-dialog tfgraph-wrapper', this.targetElement);\n    this.maskElement = createClassElement('div', 'tfgraph-dialog-mask', this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-dialog-box', this.element);\n    this.renderTitleBar();\n    this.boxElement.appendChild(options.contentElement);\n    this.targetElement.classList.add('overflow-hidden');\n    this.maskElement.addEventListener('click', () => this.close());\n  }\n\n  renderTitleBar() {\n    this.titleBarElement = createClassElement('div', 'tfgraph-dialog-bar', this.boxElement);\n    const titleEl = createClassElement('div', 'tfgraph-dialog-bar-title', this.titleBarElement);\n    titleEl.innerText = this.title;\n    this.closeBtnElement = createClassElement(\n      'div',\n      'tfgraph-dialog-bar-btn',\n      this.titleBarElement,\n    );\n    new Icon(this.closeBtnElement, { name: 'x2', size: 18 });\n    this.closeBtnElement.addEventListener('click', () => this.close());\n  }\n\n  public close() {\n    this.closeBtnElement.removeEventListener('click', () => this.close());\n    this.maskElement.removeEventListener('click', () => this.close());\n    removeElement(this.element);\n    this.targetElement.classList.remove('overflow-hidden');\n  }\n}\n","import { TableFlowGraph, TFGraphColumn } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Dialog from '../ui/dialog/Dialog';\nimport TableHeaderCell from './TableHeaderCell';\n\nexport default class EditColumnDialog {\n  public dialog: Dialog | null;\n  public targetHeaderCell: TableHeaderCell;\n  public title: string;\n  public graphInstance: TableFlowGraph;\n  public contentElement: HTMLElement;\n  public inputEl: HTMLInputElement;\n  public btnConfirm: Button;\n  public btnCancel: Button;\n  public isEdit: boolean;\n\n  constructor(graphInstance: TableFlowGraph, targetHeaderCell?: TableHeaderCell) {\n    this.graphInstance = graphInstance;\n    this.dialog = null;\n    this.targetHeaderCell = targetHeaderCell;\n    this.setIsEdit();\n    this.renderContent();\n  }\n\n  setIsEdit() {\n    if (this.targetHeaderCell) {\n      this.title = this.targetHeaderCell.columnData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    if (this.inputEl) this.inputEl.value = this.title;\n  }\n\n  renderContent() {\n    this.contentElement = createClassElement('div', 'flex flex-col w-420 px-15 pb-15');\n    this.inputEl = createClassElement('input', 'tfgraph-input', this.contentElement);\n    this.inputEl.setAttribute('placeholder', this.graphInstance.options.labels.enterColumnName);\n    const btnContainer = createClassElement(\n      'div',\n      'flex flex-row items-center justify-end mt-15',\n      this.contentElement,\n    );\n    this.btnCancel = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.cancel,\n      type: 'default',\n      className: 'mr-10',\n      onClick: () => {\n        this.dialog.close();\n      },\n    });\n    this.btnConfirm = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.confirm,\n      type: 'primary',\n      onClick: () => {\n        if (this.inputEl.value) {\n          if (this.title !== this.inputEl.value) {\n            if (this.isEdit) {\n              this.targetHeaderCell.columnData.title = this.inputEl.value;\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onEditColumn === 'function') {\n                this.graphInstance.options.onEditColumn(this.targetHeaderCell.columnData);\n              }\n            } else {\n              const colData: TFGraphColumn = {\n                id: `header_col_${this.graphInstance.options.totalColumns}`,\n                title: this.inputEl.value,\n              };\n              this.graphInstance.options.columns.push(colData);\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onAddColumn === 'function') {\n                this.graphInstance.options.onAddColumn(colData);\n              }\n            }\n          } else {\n            this.dialog.close();\n          }\n        }\n      },\n    });\n  }\n\n  public show() {\n    this.setIsEdit();\n    this.dialog = new Dialog({\n      title: this.isEdit\n        ? this.graphInstance.options.labels.editColumn\n        : this.graphInstance.options.labels.addColumn,\n      contentElement: this.contentElement,\n    });\n  }\n}\n","import { TableFlowGraph, HintType } from '../../index';\n\nexport default class HintManager {\n  public targetEl: HTMLElement;\n  public currentHintState: HintType;\n  public graphInstance: TableFlowGraph;\n\n  constructor(targetEl: HTMLElement, graphInstance: TableFlowGraph) {\n    this.targetEl = targetEl;\n    this.graphInstance = graphInstance;\n    this.currentHintState = 'idel';\n    this.targetEl.innerText = '';\n  }\n\n  setHint(hintState: HintType) {\n    this.currentHintState = hintState;\n    switch (this.currentHintState) {\n      case 'idel':\n        this.targetEl.innerText = '';\n        break;\n      case 'drawLine':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_drawLine;\n        break;\n      case 'hoverLine':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_hoverLine;\n        break;\n      case 'hoverAnchor':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_hoverAnchor;\n        break;\n      case 'moveNode':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_moveNode;\n        break;\n      case 'resizeNode':\n        this.targetEl.innerText = this.graphInstance.options.labels.hint_resizeNode;\n        break;\n      default:\n        this.targetEl.innerText = '';\n        break;\n    }\n  }\n}\n","import { TableFlowGraph, Mode } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Toggler from '../ui/toggler/Toggler';\nimport EditColumnDialog from '../table/EditColumnDialog';\nimport HintManager from './HintManager';\n// import { Icon } from './ui/Icon';\n\n/**\n * table-flow-graph toolbar\n */\nexport default class Toolbar {\n  public element: HTMLElement;\n  public graphInstance: TableFlowGraph;\n  public disabledMask: HTMLElement;\n  public modeToggler: Toggler;\n  public hintEl: HTMLElement;\n  public hintMgr: HintManager;\n  public newColumnBtn: Button;\n  public addColDialog: EditColumnDialog;\n\n  constructor(parentElement: HTMLElement, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-toolbar', parentElement);\n    this.modeToggler = new Toggler(this.element, {\n      items: [\n        { label: this.graphInstance.options.labels.editMode, id: 'edit' },\n        { label: this.graphInstance.options.labels.previewMode, id: 'preview' },\n      ],\n      onChange: (item) => {\n        graphInstance.changeMode(item.id as Mode);\n        this.setToolbarState();\n      },\n    });\n    this.hintEl = createClassElement('div', 'tfgraph-toolbar-hint', this.element);\n    this.hintMgr = new HintManager(this.hintEl, this.graphInstance);\n    // new Icon(this.element, {\n    //   name: 'plus',\n    //   style: { width: '16px', height: '16px' },\n    // });\n    const rightBtns = createClassElement('div', 'flex-row items-center', this.element);\n    this.newColumnBtn = new Button(rightBtns, {\n      icon: 'plus',\n      label: this.graphInstance.options.labels.addColumn,\n      type: 'primary',\n      onClick: () => this.addColumn(),\n    });\n\n    this.disabledMask = createClassElement('div', 'tfgraph-toolbar-mask hidden', this.element);\n    // new Button(rightBtns, { label: '添加行', type: 'primary' });\n\n    // new Button(this.element, { label: 'default' });\n    // new Button(this.element, {\n    //   label: 'clean',\n    //   type: 'clean',\n    //   onClick: () => {\n    //     console.log('clean clicked');\n    //   },\n    // });\n    // new Button(this.element, { label: 'primary', type: 'primary' });\n    // new Button(this.element, { label: 'warning', type: 'warning' });\n    // new Button(this.element, { label: 'danger', type: 'danger' });\n    // new Button(this.element, { label: 'success', type: 'success' });\n    // testBtn.setDisabled();\n    this.setToolbarState();\n    this.addColDialog = new EditColumnDialog(this.graphInstance);\n  }\n\n  addColumn() {\n    if (typeof this.graphInstance.options.addColumn === 'function') {\n      this.graphInstance.options.addColumn();\n    } else {\n      if (this.graphInstance.hasTableHeader) {\n        // add column dialog\n        this.addColDialog.show();\n      } else {\n        this.graphInstance.refresh(\n          Object.assign({}, this.graphInstance.options, {\n            columns: null,\n            totalColumns: this.graphInstance.options.totalColumns + 1,\n          }),\n        );\n        if (typeof this.graphInstance.options.onAddColumn === 'function') {\n          this.graphInstance.options.onAddColumn();\n        }\n      }\n    }\n  }\n\n  disable() {\n    this.disabledMask.classList.remove('hidden');\n  }\n\n  enable() {\n    this.disabledMask.classList.add('hidden');\n  }\n\n  setToolbarState() {\n    if (\n      this.graphInstance.options.totalColumns >= this.graphInstance.options.maxColumns ||\n      this.graphInstance.mode === 'preview'\n    ) {\n      this.newColumnBtn.element.classList.add('hidden');\n    } else {\n      this.newColumnBtn.element.classList.remove('hidden');\n    }\n  }\n}\n","import { NodeStyleType, NodeType } from '../../..';\nimport { ColorPlate, FunctionalColors } from '../../../lib/utils';\n\nexport const NodeTypeList: NodeType[] = [\n  'default',\n  'primary',\n  'success',\n  'info',\n  'warning',\n  'danger',\n];\n\nexport const NodeStyle: NodeStyleType = {\n  default: {\n    type: 'default',\n    normalStyle: {\n      borderColor: '#dcdcdc',\n      backgroundColor: '#f3f4f7',\n      color: '#333333',\n    },\n    hoverStyle: {\n      borderColor: '#aaaaaa',\n      backgroundColor: '#aaaaaa',\n      color: '#333333',\n    },\n  },\n  primary: {\n    type: 'primary',\n    normalStyle: {\n      borderColor: FunctionalColors.primary,\n      backgroundColor: FunctionalColors.primary + '10',\n      color: FunctionalColors.primary,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.primary,\n      backgroundColor: FunctionalColors.primary,\n      color: ColorPlate.white,\n    },\n  },\n  success: {\n    type: 'success',\n    normalStyle: {\n      borderColor: FunctionalColors.success,\n      backgroundColor: FunctionalColors.success + '10',\n      color: FunctionalColors.success,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.success,\n      backgroundColor: FunctionalColors.success,\n      color: ColorPlate.white,\n    },\n  },\n  info: {\n    type: 'info',\n    normalStyle: {\n      borderColor: FunctionalColors.info,\n      backgroundColor: FunctionalColors.info + '10',\n      color: '#333333',\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.info,\n      backgroundColor: FunctionalColors.info,\n      color: ColorPlate.white,\n    },\n  },\n  warning: {\n    type: 'warning',\n    normalStyle: {\n      borderColor: FunctionalColors.warning,\n      backgroundColor: FunctionalColors.warning + '10',\n      color: FunctionalColors.warning,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.warning,\n      backgroundColor: FunctionalColors.warning,\n      color: ColorPlate.white,\n    },\n  },\n  danger: {\n    type: 'danger',\n    normalStyle: {\n      borderColor: FunctionalColors.danger,\n      backgroundColor: FunctionalColors.danger + '10',\n      color: FunctionalColors.danger,\n    },\n    hoverStyle: {\n      borderColor: FunctionalColors.danger,\n      backgroundColor: FunctionalColors.danger,\n      color: ColorPlate.white,\n    },\n  },\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { NodeType } from '../../..';\nimport { createClassElement, setStyles } from '../../../lib/dom';\nimport { Icon } from '../../ui/icon/Icon';\nimport { NodeStyle } from './nodeUtils';\n\nconst btnStyle: Partial<CSSStyleDeclaration> = {\n  border: '2px solid transparent',\n  padding: '2px',\n  borderRadius: '4px',\n  margin: '0 5px 0 0',\n  cursor: 'pointer',\n};\n\nexport interface NodeTypeBtnOption {\n  parentEl: HTMLElement;\n  type: NodeType;\n  onClick: (type: NodeType) => void;\n}\n\nexport class NodeTypeBtn {\n  public element: HTMLElement;\n  public type: NodeType;\n  public active: boolean;\n  private nodeEl: HTMLElement;\n  private icon: Icon;\n  private hovered: boolean;\n  private option: NodeTypeBtnOption;\n\n  constructor(option: NodeTypeBtnOption) {\n    this.option = option;\n    this.type = this.option.type;\n    this.hovered = false;\n    this.createNodeTypeBtn();\n  }\n\n  private createNodeTypeBtn() {\n    this.element = createClassElement('div', 'm5', this.option.parentEl);\n    setStyles(this.element, btnStyle);\n    this.nodeEl = createClassElement(\n      'div',\n      'w-16 h-16 flex items-center justify-center',\n      this.element,\n    );\n    setStyles(this.nodeEl, {\n      ...NodeStyle[this.type].normalStyle,\n      borderWidth: '1px',\n      borderRadius: '2px',\n      borderStyle: 'solid',\n    });\n    this.icon = new Icon(this.nodeEl, {\n      name: 'check',\n      size: 16,\n      color: '#FFFFFF',\n      className: this.active ? '' : 'hidden',\n    });\n    this.element.addEventListener('click', () => {\n      if (typeof this.option.onClick === 'function') this.option.onClick(this.type);\n    });\n    this.element.addEventListener('mouseenter', () => this.toggleHover(true));\n    this.element.addEventListener('mouseleave', () => this.toggleHover(false));\n  }\n\n  private toggleHover(hovered: boolean) {\n    this.hovered = hovered;\n    if (this.hovered) {\n      setStyles(this.element, { borderColor: NodeStyle[this.type].hoverStyle.borderColor });\n      // setStyles(this.nodeEl, NodeStyle[this.type].hoverStyle);\n    } else {\n      if (!this.active) {\n        setStyles(this.element, { borderColor: 'transparent' });\n        // setStyles(this.nodeEl, NodeStyle[this.type].normalStyle);\n      }\n    }\n  }\n\n  public toggleActive(active: boolean) {\n    this.active = active;\n    if (this.active) {\n      this.icon.element.classList.remove('hidden');\n      setStyles(this.element, { borderColor: NodeStyle[this.type].hoverStyle.borderColor });\n      setStyles(this.nodeEl, NodeStyle[this.type].hoverStyle);\n    } else {\n      this.icon.element.classList.add('hidden');\n      if (!this.hovered) {\n        setStyles(this.element, { borderColor: 'transparent' });\n        setStyles(this.nodeEl, NodeStyle[this.type].normalStyle);\n      }\n    }\n  }\n}\n","import { NodeType } from '../../..';\nimport { NodeTypeList } from './nodeUtils';\nimport { NodeTypeBtn } from './NodeTypeBtn';\nimport { createClassElement } from '../../../lib/dom';\n\nexport interface NodeTypePickerOption {\n  parentEl: HTMLElement;\n  initialType: NodeType;\n  onChange: (type: NodeType) => void;\n}\n\nexport default class NodeTypePicker {\n  public currentType: NodeType;\n  public element: HTMLElement;\n  private option: NodeTypePickerOption;\n  private btnList: NodeTypeBtn[];\n\n  constructor(option: NodeTypePickerOption) {\n    this.option = option;\n    this.currentType = this.option.initialType;\n    this.element = createClassElement('div', 'flex flex-row items-center', this.option.parentEl);\n    this.btnList = [];\n    NodeTypeList.forEach((type) => {\n      const btn = new NodeTypeBtn({\n        parentEl: this.element,\n        type,\n        onClick: (t) => this.clickType(t),\n      });\n      if (this.currentType === type) btn.toggleActive(true);\n      this.btnList.push(btn);\n    });\n  }\n\n  private clickType(t: NodeType) {\n    if (this.currentType !== t) {\n      this.currentType = t;\n      this.setActiveType();\n      if (typeof this.option.onChange === 'function') this.option.onChange(t);\n    }\n  }\n\n  setActiveType() {\n    this.btnList.forEach((btn) => {\n      if (this.currentType === btn.type) {\n        if (!btn.active) btn.toggleActive(true);\n      } else if (btn.active) {\n        btn.toggleActive(false);\n      }\n    });\n  }\n}\n","import { NodeType, TableFlowGraph, TFGraphNode } from '../../../index';\nimport { createClassElement } from '../../../lib/dom';\nimport Button from '../../ui/button/Button';\nimport Dialog from '../../ui/dialog/Dialog';\nimport NodeTypePicker from './NodeTypePicker';\nimport TableCell from '../TableCell';\n\nexport default class EditNodeDialog {\n  public dialog: Dialog | null;\n  public targetCell: TableCell;\n  public title: string;\n  public graphInstance: TableFlowGraph;\n  public contentElement: HTMLElement;\n  public nodeNameInput: HTMLInputElement;\n  public btnConfirm: Button;\n  public btnCancel: Button;\n  public isEdit: boolean;\n  public type: NodeType;\n  public initialType: NodeType;\n\n  constructor(graphInstance: TableFlowGraph, targetCell: TableCell) {\n    this.graphInstance = graphInstance;\n    this.targetCell = targetCell;\n    this.dialog = null;\n    this.type =\n      this.targetCell.nodeData && this.targetCell.nodeData.type\n        ? this.targetCell.nodeData.type\n        : 'default';\n    this.initialType = this.type;\n    if (targetCell.nodeData) {\n      this.title = targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    this.renderContent();\n  }\n\n  setIsEdit() {\n    if (this.targetCell.nodeData) {\n      this.title = this.targetCell.nodeData.title;\n      this.isEdit = true;\n    } else {\n      this.title = '';\n      this.isEdit = false;\n    }\n    if (this.nodeNameInput) this.nodeNameInput.value = this.title;\n  }\n\n  renderContent() {\n    this.contentElement = createClassElement('div', 'flex flex-col w-420 px-15 pb-15');\n    this.nodeNameInput = createClassElement('input', 'tfgraph-input mb-20', this.contentElement);\n    this.nodeNameInput.setAttribute('placeholder', this.graphInstance.options.labels.enterNodeName);\n    new NodeTypePicker({\n      parentEl: this.contentElement,\n      initialType: this.type,\n      onChange: (type) => {\n        this.type = type;\n      },\n    });\n    const btnContainer = createClassElement(\n      'div',\n      'flex flex-row items-center justify-end mt-15',\n      this.contentElement,\n    );\n    this.btnCancel = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.cancel,\n      type: 'default',\n      className: 'mr-10',\n      onClick: () => {\n        this.dialog.close();\n      },\n    });\n    this.btnConfirm = new Button(btnContainer, {\n      label: this.graphInstance.options.labels.confirm,\n      type: 'primary',\n      onClick: () => {\n        if (this.nodeNameInput.value) {\n          if (this.title !== this.nodeNameInput.value || this.initialType !== this.type) {\n            if (this.isEdit) {\n              this.targetCell.nodeData.title = this.nodeNameInput.value;\n              this.targetCell.nodeData.type = this.type;\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onEditNode === 'function') {\n                this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n              }\n            } else {\n              const nodeData: TFGraphNode = {\n                id: `node_${this.targetCell.row}_${this.targetCell.column}`,\n                row: this.targetCell.row,\n                column: this.targetCell.column,\n                rowSpan: 1,\n                colSpan: 1,\n                title: this.nodeNameInput.value,\n                type: this.type,\n              };\n              this.graphInstance.options.nodes.push(nodeData);\n              this.dialog.close();\n              this.graphInstance.refresh();\n              if (typeof this.graphInstance.options.onAddNode === 'function') {\n                this.graphInstance.options.onAddNode(nodeData);\n              }\n            }\n          } else {\n            this.dialog.close();\n          }\n        }\n      },\n    });\n  }\n\n  public show() {\n    this.setIsEdit();\n    this.dialog = new Dialog({\n      title: this.isEdit\n        ? this.graphInstance.options.labels.editNode\n        : this.graphInstance.options.labels.addNode,\n      contentElement: this.contentElement,\n    });\n  }\n}\n","import { createClassElement, removeElement, setStyles } from '../../../lib/dom';\nimport { PopupOptions } from '../../../index';\n\n/**\n * table-flow-graph popup\n */\nexport default class Popup {\n  targetElement: HTMLElement;\n  options: PopupOptions;\n  public element: HTMLElement;\n  public areaElement: HTMLElement;\n  public boxElement: HTMLElement;\n  public arrowElement: HTMLElement;\n  public disabled: boolean;\n  public rendered: boolean;\n  public timeoutId: number | null;\n\n  constructor(targetElement: HTMLElement, options: PopupOptions) {\n    this.targetElement = targetElement;\n    this.options = options;\n    this.rendered = false;\n    this.targetElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.targetElement.addEventListener('mouseleave', () => this.mouseLeave());\n  }\n\n  public render() {\n    const { placement = 'top', contentElement } = this.options;\n\n    const targetRect = this.targetElement.getBoundingClientRect();\n    this.element = createClassElement('div', 'tfgraph-popup tfgraph-wrapper', document.body);\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n\n    this.areaElement = createClassElement('div', `tfgraph-popup-area ${placement}`, this.element);\n    this.boxElement = createClassElement('div', 'tfgraph-popup-box', this.areaElement);\n    this.arrowElement = createClassElement('div', 'tfgraph-popup-arrow', this.areaElement);\n    if (contentElement) this.boxElement.appendChild(contentElement);\n\n    const areaRect = this.areaElement.getBoundingClientRect();\n    const arrowRect = this.arrowElement.getBoundingClientRect();\n    const areaStyleObj: Partial<CSSStyleDeclaration> = {};\n    const arrowStyleObj: Partial<CSSStyleDeclaration> = {};\n    switch (placement) {\n      case 'top':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.bottom = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'right':\n        areaStyleObj.left = 0.5 * targetRect.width + 10 + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      case 'bottom':\n        areaStyleObj.left = -0.5 * areaRect.width + 'px';\n        areaStyleObj.top = 0.5 * targetRect.height + 10 + 'px';\n        arrowStyleObj.left = 0.5 * (areaRect.width - arrowRect.width) + 'px';\n        break;\n      case 'left':\n        areaStyleObj.right = 0.5 * targetRect.width + 10 + 'px';\n        areaStyleObj.top = -0.5 * areaRect.height + 'px';\n        arrowStyleObj.top = 0.5 * (areaRect.height - arrowRect.height) + 'px';\n        break;\n      default:\n        break;\n    }\n    setStyles(this.areaElement, areaStyleObj);\n    setStyles(this.arrowElement, arrowStyleObj);\n\n    this.areaElement.addEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.addEventListener('mouseleave', () => this.mouseLeave());\n    document.addEventListener('scroll', () => this.updatePosition());\n    this.rendered = true;\n  }\n\n  public updatePosition() {\n    const targetRect = this.targetElement.getBoundingClientRect();\n    setStyles(this.element, {\n      left: targetRect.left + 0.5 * targetRect.width + 'px',\n      top: targetRect.top + 0.5 * targetRect.height + 'px',\n    });\n  }\n\n  public dismiss() {\n    this.rendered = false;\n    this.areaElement.removeEventListener('mouseenter', () => this.mouseEnter());\n    this.areaElement.removeEventListener('mouseleave', () => this.mouseLeave());\n    document.removeEventListener('scroll', () => this.updatePosition());\n    removeElement(this.element);\n  }\n\n  public mouseEnter() {\n    if (!this.rendered) this.render();\n    if (this.timeoutId) {\n      window.clearTimeout(this.timeoutId);\n    }\n  }\n\n  public mouseLeave() {\n    this.timeoutId = window.setTimeout(() => {\n      this.dismiss();\n    }, 200);\n  }\n}\n","import { NodeType, TableFlowGraph } from '../../../index';\nimport { createClassElement, setStyles } from '../../../lib/dom';\nimport Popup from '../../ui/popup/Popup';\nimport TableCell from '../TableCell';\nimport { NodeStyle } from './nodeUtils';\n\n/**\n * table-flow-graph node\n */\nexport default class Node {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public tableCell: TableCell;\n  public type: NodeType;\n  private hoverd: boolean;\n\n  constructor(cell: TableCell) {\n    this.tableCell = cell;\n    this.graphInstance = this.tableCell.graphInstance;\n    this.hoverd = false;\n    this.createNode();\n  }\n\n  createNode() {\n    this.element = createClassElement('div', 'tfgraph-node', this.tableCell.element);\n    const data = this.tableCell.nodeData;\n    this.type = data.type ? data.type : 'default';\n    setStyles(this.element, NodeStyle[this.type].normalStyle);\n    if (data.isBtn && this.graphInstance.mode !== 'edit') this.element.classList.add('isBtn');\n    if (typeof this.graphInstance.options.renderNode === 'function') {\n      this.element.appendChild(this.graphInstance.options.renderNode(data));\n    } else {\n      this.element.innerText = data.title;\n    }\n  }\n\n  toggleHovered(hovered: boolean) {\n    this.hoverd = hovered;\n    this.element.setAttribute('style', '');\n    if (this.hoverd) {\n      setStyles(this.element, NodeStyle[this.type].hoverStyle);\n    } else {\n      setStyles(this.element, NodeStyle[this.type].normalStyle);\n    }\n  }\n\n  public setViewerControls() {\n    this.element.addEventListener('click', () => this.onClickNode());\n    if (this.tableCell.nodeData.isBtn) {\n      this.element.addEventListener('mouseenter', () => this.toggleHovered(true));\n      this.element.addEventListener('mouseleave', () => this.toggleHovered(false));\n    }\n    if (this.tableCell.nodeData.showPopup) {\n      let contentEl: HTMLElement;\n      if (typeof this.graphInstance.options.renderNodeHoverPopup === 'function') {\n        contentEl = this.graphInstance.options.renderNodeHoverPopup(this.tableCell.nodeData);\n      } else {\n        contentEl = createClassElement('div', 'flex flex-col items-center p-30');\n        contentEl.innerHTML = this.tableCell.nodeData.title;\n      }\n\n      new Popup(this.element, {\n        placement: 'top',\n        contentElement: contentEl,\n      });\n    }\n  }\n\n  onClickNode() {\n    if (typeof this.graphInstance.options.onClickNode === 'function') {\n      this.graphInstance.options.onClickNode(this.tableCell.nodeData, this.element);\n    }\n  }\n}\n","import { TableFlowGraph, TFGraphNode } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport EditNodeDialog from './node/EditNodeDialog';\nimport { remove } from 'lodash-es';\nimport Node from './node/Node';\n\n/**\n * table-flow-graph tabel cell\n */\nexport default class TableCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public controlLayer: HTMLElement;\n  public node: Node;\n  public nodeData?: TFGraphNode;\n  public hasNode: boolean;\n  public row: number;\n  public column: number;\n  public rowSpan: number;\n  public colSpan: number;\n  public isTarget: boolean; // is moving or resizing this cell\n  public deleteRowBtn: Button;\n  public deleteColBtn: Button;\n  public editDialog: EditNodeDialog | null;\n\n  constructor(\n    parentElement: HTMLElement,\n    data: TFGraphNode | null,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.row = row;\n    this.column = column;\n    this.createTabelCell(data, row, column, parentElement);\n  }\n\n  createTabelCell(data: TFGraphNode | null, row, column, parentElement) {\n    this.element = createClassElement('div', 'tfgraph-cell', parentElement);\n    this.element.setAttribute('id', `${this.graphInstance.id}_cell_${row}_${column}`);\n    if (data) {\n      this.hasNode = true;\n      this.nodeData = data;\n      this.rowSpan = data.rowSpan;\n      this.colSpan = data.colSpan;\n      this.node = new Node(this);\n    } else {\n      this.rowSpan = 1;\n      this.colSpan = 1;\n      this.hasNode = false;\n    }\n    // set min height base on row span\n    this.element.style.minHeight = 80 * this.rowSpan + 'px';\n  }\n\n  // cell controls for edit mode\n  setEditorControls() {\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    this.editDialog = new EditNodeDialog(this.graphInstance, this);\n    if (this.nodeData) {\n      // Move node button\n      new Button(this.controlLayer, {\n        icon: 'move',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.moveNode,\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        onClick: () => {\n          this.graphInstance.tableController.startMoving(this);\n        },\n      });\n      // Edit node button\n      new Button(this.controlLayer, {\n        icon: 'edit',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.editNode,\n        className: 'absolute left-6 bottom-6 p-0 sm w-28 btn-bl',\n        onClick: () => {\n          if (typeof this.graphInstance.options.editNode === 'function') {\n            this.graphInstance.options.editNode(this.nodeData);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      // Delete node button\n      new Button(this.controlLayer, {\n        icon: 'x',\n        type: 'danger',\n        tooltip: this.graphInstance.options.labels.deleteNode,\n        className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n        onClick: () => {\n          if (typeof this.graphInstance.options.deleteNode === 'function') {\n            this.graphInstance.options.deleteNode(this.nodeData);\n          } else {\n            // TODO remove cell\n            remove(this.graphInstance.options.nodes, (item) => {\n              return this.nodeData.id === item.id;\n            });\n            this.graphInstance.refresh();\n            if (typeof this.graphInstance.options.onDeleteNode === 'function') {\n              this.graphInstance.options.onDeleteNode(this.nodeData);\n            }\n          }\n        },\n      });\n      // Resize node button\n      new Button(this.controlLayer, {\n        icon: 'expand',\n        type: 'primary',\n        tooltip: this.graphInstance.options.labels.adjustNodeSize,\n        className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n        onClick: () => {\n          this.graphInstance.tableController.startResizing(this);\n        },\n      });\n    } else {\n      // Add node button\n      new Button(this.controlLayer, {\n        icon: 'plus',\n        type: 'primary',\n        className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n        tooltip: this.graphInstance.options.labels.addNode,\n        onClick: () => {\n          if (typeof this.graphInstance.options.addNode === 'function') {\n            this.graphInstance.options.addNode(this.row, this.column);\n          } else {\n            this.editDialog.show();\n          }\n        },\n      });\n      if (\n        this.graphInstance.options.totalRows > 1 &&\n        this.row === this.graphInstance.options.totalRows - 1\n      ) {\n        // Delete row button\n        this.deleteRowBtn = new Button(this.controlLayer, {\n          icon: 'delete_row',\n          type: 'danger',\n          className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n          tooltip: this.graphInstance.options.labels.deleteRow,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteRow === 'function') {\n              this.graphInstance.options.deleteRow();\n            } else {\n              this.graphInstance.refresh(\n                Object.assign({}, this.graphInstance.options, {\n                  totalRows: this.graphInstance.options.totalRows - 1,\n                }),\n              );\n              if (typeof this.graphInstance.options.onDeleteRow === 'function') {\n                this.graphInstance.options.onDeleteRow();\n              }\n            }\n          },\n        });\n      }\n      if (\n        this.graphInstance.options.totalColumns > 1 &&\n        this.column === this.graphInstance.options.totalColumns - 1\n      ) {\n        // Delete column button\n        this.deleteColBtn = new Button(this.controlLayer, {\n          icon: 'delete_col',\n          type: 'danger',\n          className: 'absolute right-6 bottom-6 p-0 sm w-28 btn-br',\n          tooltip: this.graphInstance.options.labels.deleteColumn,\n          onClick: () => {\n            if (typeof this.graphInstance.options.deleteColumn === 'function') {\n              // custom delete column method\n              const targetColumn =\n                this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n              this.graphInstance.options.deleteColumn(targetColumn);\n            } else {\n              // auto delete column\n              if (this.graphInstance.hasTableHeader) {\n                // if has options.columns data (table header will be rendered)\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  const targetColumn =\n                    this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n                  this.graphInstance.options.onDeleteColumn(targetColumn);\n                }\n                this.graphInstance.options.columns.pop();\n                this.graphInstance.refresh(Object.assign({}, this.graphInstance.options));\n              } else {\n                // if options.columns data is null or empty\n                this.graphInstance.refresh(\n                  Object.assign({}, this.graphInstance.options, {\n                    columns: null,\n                    totalColumns: this.graphInstance.options.totalColumns - 1,\n                  }),\n                );\n                if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n                  this.graphInstance.options.onDeleteColumn();\n                }\n              }\n            }\n          },\n        });\n      }\n    }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  public setViewerControls() {\n    if (this.nodeData) {\n      this.node.setViewerControls();\n    }\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n    if (this.deleteRowBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteRow &&\n        this.graphInstance.lineController.canDeleteRow\n      ) {\n        this.deleteRowBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteRowBtn.element.classList.add('hidden');\n      }\n    }\n    if (this.deleteColBtn) {\n      if (\n        this.graphInstance.tableController.canDeleteColumn &&\n        this.graphInstance.lineController.canDeleteColumn\n      ) {\n        this.deleteColBtn.element.classList.remove('hidden');\n      } else {\n        this.deleteColBtn.element.classList.add('hidden');\n      }\n    }\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n\n  public setIsTarget(isTarget: boolean) {\n    if (isTarget && !this.isTarget) {\n      this.isTarget = true;\n      this.element.style.opacity = '0.4';\n    } else if (!isTarget && this.isTarget) {\n      this.isTarget = false;\n      this.element.style.opacity = '1';\n    }\n  }\n}\n","import { TableFlowGraph, TFGraphColumn } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport Button from '../ui/button/Button';\nimport Popup from '../ui/popup/Popup';\n// import TableHeaderCellMenu from './TableHeaderCellMenu';\nimport EditColumnDialog from './EditColumnDialog';\n\n/**\n * table-flow-graph tabel header cell\n */\nexport default class TableHeaderCell {\n  public graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public columnIndex: number;\n  public isLast: boolean;\n  public columnData: TFGraphColumn;\n  public canDelete: boolean;\n  public canAdd: boolean;\n  public popMenu: Popup | null;\n  // public menu: TableHeaderCellMenu | null;\n  public controlLayer: HTMLElement;\n  public editColDialog: EditColumnDialog;\n\n  constructor(\n    parentElement: HTMLElement,\n    columnData: TFGraphColumn,\n    columnIndex: number,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.graphInstance = graphInstance;\n    this.columnIndex = columnIndex;\n    this.columnData = columnData;\n    this.isLast = this.columnIndex === this.graphInstance.options.totalColumns - 1;\n    this.element = this.createElement(parentElement);\n  }\n\n  createElement(parentElement: HTMLElement): HTMLElement {\n    const el = createClassElement('th', 'tfgraph-th', parentElement);\n    if (this.columnData.title) {\n      el.innerHTML = this.columnData.title;\n    } else {\n      el.classList.add('empty');\n    }\n    if (this.columnData.width) {\n      // TODO load width value from options\n      let width = this.columnData.width;\n      switch (this.columnData.width) {\n        case 'lg':\n          width = '200';\n          break;\n        case 'md':\n          width = '170';\n          break;\n        case 'sm':\n          width = '130';\n          break;\n        case 'xs':\n          width = '105';\n          break;\n        default:\n          width = this.columnData.width;\n          break;\n      }\n      el.setAttribute('width', width);\n    } else {\n      el.setAttribute('width', 'auto');\n    }\n    el.setAttribute('id', `${this.graphInstance.id}_col_${this.columnIndex}`);\n    return el;\n  }\n\n  // header cell controls for edit mode\n  public setEditControls() {\n    this.controlLayer = createClassElement(\n      'div',\n      'tfgraph-cell-control-layer hidden',\n      this.element,\n    );\n    this.editColDialog = new EditColumnDialog(this.graphInstance, this);\n    new Button(this.controlLayer, {\n      icon: 'edit',\n      type: 'primary',\n      className: 'absolute left-6 top-6 p-0 sm w-28 btn-tl',\n      tooltip: this.graphInstance.options.labels.editColumn,\n      onClick: () => {\n        if (typeof this.graphInstance.options.editColumn === 'function') {\n          this.graphInstance.options.editColumn(this.columnData);\n        } else {\n          this.editColDialog.show();\n        }\n      },\n    });\n    if (this.isLast && this.graphInstance.tableController.canDeleteColumn) {\n      new Button(this.controlLayer, {\n        icon: 'delete_col',\n        type: 'danger',\n        className: 'absolute right-6 top-6 p-0 sm w-28 btn-tr',\n        tooltip: this.graphInstance.options.labels.deleteColumn,\n        onClick: () => {\n          if (typeof this.graphInstance.options.deleteColumn === 'function') {\n            // custom delete column method\n            this.graphInstance.options.deleteColumn(this.columnData);\n          } else {\n            if (typeof this.graphInstance.options.onDeleteColumn === 'function') {\n              // const targetColumn = this.graphInstance.options.columns[this.graphInstance.options.totalColumns - 1];\n              this.graphInstance.options.onDeleteColumn(this.columnData);\n            }\n            this.graphInstance.options.columns.pop();\n            this.graphInstance.refresh(Object.assign({}, this.graphInstance.options));\n          }\n        },\n      });\n    }\n    this.element.addEventListener('mouseenter', () => this.onMouseEnter());\n    this.element.addEventListener('mouseleave', () => this.onMouseLeave());\n  }\n\n  onMouseEnter() {\n    this.controlLayer.classList.remove('hidden');\n  }\n\n  onMouseLeave() {\n    this.controlLayer.classList.add('hidden');\n  }\n}\n","import { TableFlowGraph, PositionAndSize } from '../../index';\nimport { createClassElement, setStyles } from '../../lib/dom';\nimport TableCell from './TableCell';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMaskBox {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public disabled: boolean;\n\n  constructor(parentEl: HTMLElement, targetCell: TableCell, graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.disabled = false;\n    this.element = createClassElement('div', 'tfgraph-table-mask-cell', parentEl);\n    const nodeEl = createClassElement('div', 'tfgraph-table-mask-node', this.element);\n    nodeEl.innerText = targetCell.nodeData.title;\n    // setStyles(this.element, {\n    //   top: top + 'px',\n    //   left: left + 'px',\n    //   width: width + 'px',\n    //   height: height + 'px',\n    // });\n    this.element.addEventListener('click', () => {\n      if (!this.disabled) this.graphInstance.tableController.submitCellChange();\n    });\n  }\n\n  setPositinAndSize(pos_size: PositionAndSize) {\n    setStyles(this.element, {\n      top: pos_size.top + 'px',\n      left: pos_size.left + 'px',\n      width: pos_size.width + 'px',\n      height: pos_size.height + 'px',\n    });\n  }\n\n  disable() {\n    // TODO\n    if (!this.disabled) {\n      this.disabled = true;\n      this.element.classList.add('disabled');\n    }\n  }\n\n  enable() {\n    // TODO\n    if (this.disabled) {\n      this.disabled = false;\n      this.element.classList.remove('disabled');\n    }\n  }\n}\n","import { TableFlowGraph, CellPositionAndSize, TableGridRect } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport TableCell from './TableCell';\nimport TableMaskBox from './TableMaskBox';\nimport { isEqual, cloneDeep } from 'lodash-es';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class TableMask {\n  graphInstance: TableFlowGraph;\n  public maskBox: TableMaskBox;\n  public element: HTMLElement;\n  public tableGridRectList: TableGridRect[];\n  public mouseGridRect: TableGridRect;\n  public targetCell: TableCell;\n  public targetCellRect: TableGridRect;\n  public resultCellPositionAndSize: CellPositionAndSize;\n  public filteredOccupiedList: number[][]; // 1: occupied, 0: not occupied\n\n  constructor(tableGridRectList: TableGridRect[], graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement(\n      'div',\n      'tfgraph-cell-mask-layer hidden',\n      graphInstance.element,\n    );\n    this.tableGridRectList = tableGridRectList;\n  }\n\n  private showMask(targetTableCell: TableCell) {\n    this.targetCell = targetTableCell;\n    this.targetCell.setIsTarget(true);\n    this.setFilteredOccupiedList();\n    this.maskBox = new TableMaskBox(this.element, this.targetCell, this.graphInstance);\n    this.mouseGridRect = this.getMouseRect();\n    this.targetCellRect = this.getRectByRowAndColumn(this.targetCell.row, this.targetCell.column);\n    this.setMaskBoxStatus();\n  }\n\n  // occupied list without target tabel cell\n  private setFilteredOccupiedList() {\n    this.filteredOccupiedList = cloneDeep(this.graphInstance.tableController.occupiedList);\n    for (let i = this.targetCell.row; i < this.targetCell.row + this.targetCell.rowSpan; i++) {\n      for (\n        let j = this.targetCell.column;\n        j < this.targetCell.column + this.targetCell.colSpan;\n        j++\n      ) {\n        this.filteredOccupiedList[i][j] = 0;\n      }\n    }\n  }\n\n  // set maskbox position/size/disabled etc.\n  private setMaskBoxStatus() {\n    if (this.graphInstance.tableController.isMovingCell) {\n      this.resultCellPositionAndSize = {\n        row:\n          this.mouseGridRect.rowIndex + this.targetCell.rowSpan >\n          this.graphInstance.options.totalRows\n            ? this.graphInstance.options.totalRows - this.targetCell.rowSpan\n            : this.mouseGridRect.rowIndex,\n        column:\n          this.mouseGridRect.columnIndex + this.targetCell.colSpan >\n          this.graphInstance.options.totalColumns\n            ? this.graphInstance.options.totalColumns - this.targetCell.colSpan\n            : this.mouseGridRect.columnIndex,\n        rowSpan: this.targetCell.rowSpan,\n        colSpan: this.targetCell.colSpan,\n      };\n      this.maskBox.element.classList.add('moving');\n    } else {\n      this.resultCellPositionAndSize = {\n        row: Math.min(this.targetCellRect.rowIndex, this.mouseGridRect.rowIndex),\n        column: Math.min(this.targetCellRect.columnIndex, this.mouseGridRect.columnIndex),\n        rowSpan: Math.abs(this.targetCellRect.rowIndex - this.mouseGridRect.rowIndex) + 1,\n        colSpan: Math.abs(this.targetCellRect.columnIndex - this.mouseGridRect.columnIndex) + 1,\n      };\n      this.maskBox.element.classList.add('resizing');\n    }\n    const topLeftRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row,\n      this.resultCellPositionAndSize.column,\n    );\n    const bottomRightRect = this.getRectByRowAndColumn(\n      this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan - 1,\n      this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan - 1,\n    );\n    if (bottomRightRect && topLeftRect) {\n      this.maskBox.setPositinAndSize({\n        left: topLeftRect.left,\n        top: topLeftRect.top,\n        width: bottomRightRect.left - topLeftRect.left + bottomRightRect.width + 1,\n        height: bottomRightRect.top - topLeftRect.top + bottomRightRect.height + 1,\n      });\n    }\n\n    // set maskbox disable/enable\n    let doable = true;\n    for (\n      let i = this.resultCellPositionAndSize.row;\n      i <\n      Math.min(\n        this.resultCellPositionAndSize.row + this.resultCellPositionAndSize.rowSpan,\n        this.graphInstance.options.totalRows,\n      );\n      i++\n    ) {\n      for (\n        let j = this.resultCellPositionAndSize.column;\n        j <\n        Math.min(\n          this.resultCellPositionAndSize.column + this.resultCellPositionAndSize.colSpan,\n          this.graphInstance.options.totalColumns,\n        );\n        j++\n      ) {\n        if (!this.filteredOccupiedList[i] || this.filteredOccupiedList[i][j] > 0) {\n          doable = false;\n        }\n      }\n    }\n    if (doable) {\n      this.maskBox.enable();\n    } else {\n      this.maskBox.disable();\n    }\n  }\n\n  public startMask(targetTableCell: TableCell) {\n    this.element.classList.remove('hidden');\n    this.showMask(targetTableCell);\n  }\n\n  public stopMask() {\n    this.element.classList.add('hidden');\n    removeElement(this.maskBox.element);\n    this.targetCell.setIsTarget(false);\n    this.maskBox = null;\n  }\n\n  public submitChange() {\n    this.stopMask();\n    const targetCellPositionAndSize: CellPositionAndSize = {\n      row: this.targetCell.row,\n      column: this.targetCell.column,\n      rowSpan: this.targetCell.rowSpan,\n      colSpan: this.targetCell.colSpan,\n    };\n    if (!isEqual(this.resultCellPositionAndSize, targetCellPositionAndSize)) {\n      // const oldNode = cloneDeep(this.targetCell.nodeData);\n      this.targetCell.nodeData.row = this.resultCellPositionAndSize.row;\n      this.targetCell.nodeData.column = this.resultCellPositionAndSize.column;\n      this.targetCell.nodeData.rowSpan = this.resultCellPositionAndSize.rowSpan;\n      this.targetCell.nodeData.colSpan = this.resultCellPositionAndSize.colSpan;\n      // 提交变更\n      if (typeof this.graphInstance.options.onEditNode === 'function') {\n        this.graphInstance.options.onEditNode(this.targetCell.nodeData);\n      }\n      this.graphInstance.refresh();\n    }\n  }\n\n  // get tableGridRect of current mouse position at\n  private getMouseRect() {\n    const mouseX = this.graphInstance.mousePosition.x;\n    const mouseY = this.graphInstance.mousePosition.y;\n    let targetGridRect: TableGridRect;\n    this.tableGridRectList.forEach((gridRect) => {\n      if (\n        mouseY > gridRect.top &&\n        mouseY < gridRect.top + gridRect.height &&\n        mouseX > gridRect.left &&\n        mouseX < gridRect.left + gridRect.width\n      ) {\n        targetGridRect = gridRect;\n      }\n    });\n    return targetGridRect;\n  }\n\n  private getRectByRowAndColumn(row, column) {\n    // const targetCellRow = this.targetCell.row;\n    // const targetCellColumn = this.targetCell.column;\n    return this.tableGridRectList.find((gridRect) => {\n      return gridRect.rowIndex === row && gridRect.columnIndex === column;\n    });\n  }\n\n  public onMouseMove() {\n    const newRect = this.getMouseRect();\n    if (!isEqual(newRect, this.mouseGridRect)) {\n      if (newRect) {\n        this.mouseGridRect = newRect;\n        this.setMaskBoxStatus();\n      }\n    }\n  }\n}\n","import { TableFlowGraph, ColumnSpec, RowSpec, TableGridRect } from '../../index';\nimport { createClassElement, removeElement, setStyles } from '../../lib/dom';\nimport TableCell from './TableCell';\nimport TableHeaderCell from './TableHeaderCell';\nimport TableMask from './TableMask';\nimport Button from '../ui/button/Button';\nimport { setColumnAndRowDeletable } from '../../lib/utils';\n\n/**\n * table-flow-graph tabel\n */\nexport default class Table {\n  graphInstance: TableFlowGraph;\n  public element: HTMLElement;\n  public bottomControlEL: HTMLElement | null;\n  public cells: TableCell[];\n  public headerCells: TableHeaderCell[];\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n  public occupiedList: number[][]; // 1: occupied, 0: not occupied\n  public tableMask: TableMask;\n  public isMovingCell: boolean;\n  public isResizingCell: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('table', 'tfgraph-table', this.graphInstance.element);\n    this.initTableStatus();\n  }\n\n  private initTableStatus() {\n    this.headerCells = [];\n    this.cells = [];\n    this.canDeleteColumn = false;\n    this.canDeleteRow = false;\n    this.occupiedList = [];\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n  }\n\n  // render table and set table controls\n  public renderTable() {\n    this.initTableStatus();\n    this.element.innerHTML = '';\n    this.createHeader();\n    this.createTds();\n    this.createCells();\n    this.setControls();\n  }\n\n  public setControls() {\n    const isEditMode = this.graphInstance.mode === 'edit';\n    if (isEditMode) {\n      const deleteableObj = setColumnAndRowDeletable(\n        this.occupiedList,\n        this.graphInstance.options.totalRows,\n        this.graphInstance.options.totalColumns,\n      );\n      this.canDeleteColumn = deleteableObj.canDeleteColumn;\n      this.canDeleteRow = deleteableObj.canDeleteRow;\n\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setEditorControls();\n      });\n\n      // wait for table render ready\n      setTimeout(() => {\n        const columnSpecs: ColumnSpec[] = []; // [{left, width, columnIndex}]\n        const rowSpecs: RowSpec[] = []; // [{ top, height, rowIndex}]\n\n        this.headerCells.forEach((headerCell) => {\n          // set headerCell controls\n          headerCell.setEditControls();\n          // get columns's width and position\n          columnSpecs.push({\n            width: headerCell.element.getBoundingClientRect().width + 1,\n            left: headerCell.element.offsetLeft - 1,\n            columnIndex: headerCell.columnIndex,\n          });\n        });\n\n        // get rowSpects(row top position and height)\n        for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n          const targetCell = this.getMinRowSpanCell(i, 1);\n          const targetCellHeight = targetCell.element.getBoundingClientRect().height;\n          const targetCellRowHeight = targetCellHeight / targetCell.rowSpan;\n          rowSpecs.push({\n            top: targetCell.element.offsetTop - 1 + (i - targetCell.row) * targetCellRowHeight,\n            height: targetCellRowHeight + 1,\n            rowIndex: i,\n          });\n        }\n        // each table grid's left, top, width, height without rowspan and colspan\n        const tableGridRectList: TableGridRect[] = [];\n        rowSpecs.forEach((rowSpec) => {\n          columnSpecs.forEach((columnSpec) => {\n            tableGridRectList.push(Object.assign({}, rowSpec, columnSpec));\n          });\n        });\n        this.tableMask = new TableMask(tableGridRectList, this.graphInstance);\n      }, 1);\n    } else {\n      // click node event\n      this.cells.forEach((cell) => {\n        // set tabel cell controls\n        cell.setViewerControls();\n      });\n    }\n    this.setBottomControl();\n\n    // set table cell controls\n    // 1. remove last row ✓\n    // 2. empty cell: add node ✓\n    // 3. node cell: edit node content ✓\n    // 4. node cell: adjust node size ✓\n    // 5. node cell: move node position ✓\n  }\n\n  //  recursively find min rowspan cell for targetRow\n  getMinRowSpanCell(row: number, minRowSpan = 1) {\n    let targetRowCell: TableCell | null = null;\n    const rowCells = this.cells.filter((cell) => cell.row === row);\n    if (rowCells.length === 0) {\n      if (row > 0) {\n        targetRowCell = this.getMinRowSpanCell(row - 1, minRowSpan + 1);\n      }\n    } else {\n      let rowSpan = 20;\n      rowCells.forEach((cell) => {\n        if (cell.rowSpan < rowSpan && cell.rowSpan >= minRowSpan) {\n          rowSpan = cell.rowSpan;\n          targetRowCell = cell;\n        }\n      });\n    }\n    return targetRowCell;\n  }\n\n  public onMouseMove() {\n    if (this.isMovingCell || this.isResizingCell) {\n      this.tableMask.onMouseMove();\n    }\n  }\n\n  public startMoving(targetCell: TableCell) {\n    this.isMovingCell = true;\n    this.graphInstance.toolbar.hintMgr.setHint('moveNode');\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopMoving() {\n    this.isMovingCell = false;\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  public startResizing(targetCell: TableCell) {\n    this.isResizingCell = true;\n    this.graphInstance.toolbar.hintMgr.setHint('resizeNode');\n    this.graphInstance.toolbar.disable();\n    this.tableMask.startMask(targetCell);\n  }\n\n  public stopResizing() {\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    this.graphInstance.toolbar.enable();\n    this.tableMask.stopMask();\n  }\n\n  // sumit cell position / size change\n  public submitCellChange() {\n    this.isMovingCell = false;\n    this.isResizingCell = false;\n    this.graphInstance.toolbar.enable();\n    this.tableMask.submitChange();\n  }\n\n  public setBottomControl() {\n    if (\n      this.graphInstance.mode === 'edit' &&\n      !this.bottomControlEL &&\n      this.graphInstance.options.totalRows < this.graphInstance.options.maxRows\n    ) {\n      this.bottomControlEL = createClassElement(\n        'div',\n        'flex flex-row items-center justify-between mt-15',\n        this.graphInstance.element,\n      );\n      // add row btn\n      new Button(this.bottomControlEL, {\n        icon: 'plus',\n        label: this.graphInstance.options.labels.addRow,\n        className: 'flex-1',\n        onClick: () => {\n          if (typeof this.graphInstance.options.addRow === 'function') {\n            this.graphInstance.options.addRow();\n          } else {\n            this.graphInstance.refresh(\n              Object.assign({}, this.graphInstance.options, {\n                totalRows: this.graphInstance.options.totalRows + 1,\n              }),\n            );\n            if (typeof this.graphInstance.options.onAddRow === 'function') {\n              this.graphInstance.options.onAddRow();\n            }\n          }\n        },\n      });\n    } else {\n      if (this.bottomControlEL) {\n        removeElement(this.bottomControlEL);\n        this.bottomControlEL = null;\n      }\n    }\n  }\n\n  // render table header\n  createHeader() {\n    if (this.graphInstance.options.tableLayoutFixed) {\n      setStyles(this.element, { tableLayout: 'fixed' });\n    }\n    if (this.graphInstance.options.columns && this.graphInstance.options.columns.length > 0) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      this.graphInstance.options.columns.forEach((column, index) => {\n        const headerCell = new TableHeaderCell(tr, column, index, this.graphInstance);\n        this.headerCells.push(headerCell);\n      });\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render table rows and tds\n  createTds() {\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      const tr = createClassElement('tr', 'tfgraph-tr');\n      tr.setAttribute('id', `${this.graphInstance.id}_tr_${i}`);\n      const occupiedRow: number[] = [];\n      this.occupiedList.push(occupiedRow);\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        const td = createClassElement('td', 'tfgraph-td', tr);\n        td.setAttribute('id', `${this.graphInstance.id}_td_${i}_${j}`);\n        occupiedRow.push(0);\n      }\n      this.element.appendChild(tr);\n    }\n  }\n\n  // render tabel cells\n  createCells() {\n    // spaned table cell id array\n    const spanedTdIds = [];\n    const nodes = this.graphInstance.options.nodes;\n    if (nodes && nodes.length > 0) {\n      nodes.forEach((node) => {\n        // set spanned tabel cell ids\n        if (node.colSpan > 1 || node.rowSpan > 1) {\n          for (let i = node.column; i < node.column + node.colSpan; i++) {\n            for (let j = node.row; j < node.row + node.rowSpan; j++) {\n              if (!(i === node.column && j === node.row)) {\n                spanedTdIds.push(`${this.graphInstance.id}_td_${j}_${i}`);\n                this.occupiedList[j][i] = 1;\n              }\n            }\n          }\n        }\n      });\n    }\n\n    // remove spaned tabell cell element\n    spanedTdIds.forEach((id) => removeElement(document.getElementById(id)));\n\n    // create table cells\n    for (let i = 0; i < this.graphInstance.options.totalRows; i++) {\n      for (let j = 0; j < this.graphInstance.options.totalColumns; j++) {\n        if (!spanedTdIds.includes(`${this.graphInstance.id}_td_${i}_${j}`)) {\n          const targetNode =\n            nodes && nodes.length > 0\n              ? nodes.find((node) => node.row === i && node.column === j)\n              : null;\n          const targetTd = document.getElementById(`${this.graphInstance.id}_td_${i}_${j}`);\n          if (targetNode) {\n            targetTd.setAttribute('colSpan', targetNode.colSpan.toString());\n            targetTd.setAttribute('rowSpan', targetNode.rowSpan.toString());\n            this.occupiedList[i][j] = 1;\n          }\n          this.cells.push(new TableCell(targetTd, targetNode, i, j, this.graphInstance));\n        }\n      }\n    }\n  }\n}\n","import { createClassElement, removeElement } from '../../lib/dom';\nimport { LineOptions, Position } from '../../index';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph line\n */\nexport default class LineSegment {\n  public element: HTMLElement;\n  public thickness: number;\n  public startPointEl: HTMLElement;\n  public endArrowEl: HTMLElement;\n\n  constructor(parent: LineGroup, options: LineOptions) {\n    this.element = createClassElement('div', 'tfgraph-line', parent.element);\n    const { positionA, positionB, thickness = 2, isStart = true, isEnd = true } = options;\n    this.thickness = thickness;\n    if (isStart) this.toggleStartPoint();\n    if (isEnd) this.toggleEndArrow();\n    this.drawLine(positionA, positionB);\n    this.element.addEventListener('mouseenter', () => parent.setHovered(true));\n    this.element.addEventListener('mouseleave', () => parent.setHovered(false));\n    this.element.addEventListener('dblclick', () => parent.onDoubleClick());\n  }\n\n  public setHoverd(hovered = true) {\n    if (hovered) {\n      this.element.classList.add('hovered');\n    } else {\n      this.element.classList.remove('hovered');\n    }\n  }\n\n  public drawLine(positionA: Position, positionB: Position) {\n    // start point\n    const x1 = positionA.x;\n    const y1 = positionA.y;\n    // end point\n    const x2 = positionB.x;\n    const y2 = positionB.y;\n\n    // distance\n    const length = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n\n    // center\n    const cx = (x1 + x2) / 2 - length / 2;\n    const cy = (y1 + y2) / 2 - this.thickness / 2;\n    // angle\n    const angle = Math.atan2(y2 - y1, x2 - x1) * (180 / Math.PI);\n\n    this.element.style.width = length + this.thickness + 'px';\n    this.element.style.height = this.thickness + 'px';\n    this.element.style.left = cx - 0.5 * this.thickness + 'px';\n    this.element.style.top = cy + 'px';\n    this.element.style.borderRadius = this.thickness + 'px';\n    this.element.style.transform = `rotate(${angle}deg)`;\n  }\n\n  public toggleStartPoint() {\n    if (this.startPointEl) {\n      removeElement(this.startPointEl);\n    } else {\n      this.startPointEl = createClassElement('div', 'start-point', this.element);\n    }\n  }\n\n  public toggleEndArrow() {\n    if (this.endArrowEl) {\n      removeElement(this.endArrowEl);\n    } else {\n      this.endArrowEl = createClassElement('div', 'arrow', this.element);\n    }\n  }\n}\n","import { TableFlowGraph, LineGroupOptions, Position } from '../../index';\nimport { createClassElement, removeElement } from '../../lib/dom';\nimport Anchor from '../anchor/Anchor';\nimport LineSegment from './LineSegment';\n\n/**\n * table-flow-graph line group\n */\nexport default class LineGroup {\n  public element: HTMLElement;\n  public isDrawingActive: boolean;\n  public anchorIds: string[];\n  public anchors: Anchor[];\n  public cursorLine: LineSegment; // line currently drawing at end\n  public lines: LineSegment[];\n  public cursorLineStartPosition: Position;\n  public graphInstance: TableFlowGraph;\n  public hovered: boolean; // is mouse hover\n\n  constructor(\n    parentElement: HTMLElement,\n    options: LineGroupOptions,\n    graphInstance: TableFlowGraph,\n  ) {\n    this.element = createClassElement('div', 'tfgraph-line-group', parentElement);\n    this.isDrawingActive = options.isDrawingActive;\n    this.anchorIds = options.anchorIds;\n    this.graphInstance = graphInstance;\n    this.drawLines();\n  }\n\n  public addLineSegment(anchorId) {\n    if (!this.anchorIds.includes(anchorId)) {\n      this.anchorIds.push(anchorId);\n      this.drawLines();\n    }\n  }\n\n  public onDoubleClick() {\n    if (this.hovered) {\n      if (this.isDrawingActive) {\n        this.graphInstance.lineController.endDrawLine();\n      } else {\n        this.graphInstance.lineController.removeLineGroup(this);\n      }\n    }\n  }\n\n  public drawLines() {\n    this.anchors = [];\n    this.lines = [];\n    if (this.anchorIds.length === 0) return;\n    this.anchorIds.forEach((anchorId) => {\n      const targetAnchor = this.graphInstance.anchorController.anchors.find(\n        (anchor) => anchor.id === anchorId,\n      );\n      if (targetAnchor) {\n        this.anchors.push(targetAnchor);\n      }\n    });\n    this.element.innerHTML = '';\n    const pointList: Position[] = this.anchors.map((anchor) => ({\n      x: anchor.posX,\n      y: anchor.posY,\n    }));\n    if (pointList.length > 1) {\n      for (let i = 0; i < pointList.length - 1; i++) {\n        const line = new LineSegment(this, {\n          positionA: pointList[i],\n          positionB: pointList[i + 1],\n          thickness: 2,\n          isStart: i === 0,\n          isEnd: i === pointList.length - 2 && !this.isDrawingActive,\n        });\n        this.lines.push(line);\n      }\n    }\n    // add line between last anchor position and mouse position when drawing\n    if (this.isDrawingActive) {\n      this.cursorLineStartPosition = pointList[pointList.length - 1];\n      // draw cursor line\n      this.cursorLine = new LineSegment(this, {\n        positionA: this.cursorLineStartPosition,\n        positionB: this.graphInstance.mousePosition,\n        thickness: 2,\n        isStart: pointList.length === 1,\n        isEnd: true,\n      });\n      this.lines.push(this.cursorLine);\n    }\n  }\n\n  public setHovered(hovered = true) {\n    if (this.graphInstance.mode === 'edit') {\n      this.hovered = hovered;\n      this.lines.forEach((line) => {\n        line.setHoverd(hovered);\n      });\n      if (!this.isDrawingActive) {\n        this.graphInstance.toolbar.hintMgr.setHint(hovered ? 'hoverLine' : 'idel');\n      }\n    }\n  }\n\n  public endDrawing() {\n    // removeElement(this.cursorLine.element);\n    this.isDrawingActive = false;\n    this.drawLines();\n  }\n\n  public escapeDrawing() {\n    if (this.cursorLine) {\n      if (this.anchorIds.length > 0) {\n        this.anchorIds.pop();\n        if (this.anchorIds.length === 0) {\n          removeElement(this.element);\n          // remove the last anchor id in this line group\n          this.graphInstance.lineController.lineAnchorIds =\n            this.graphInstance.lineController.lineAnchorIds.filter(\n              (lineArray) => lineArray.length > 1,\n            );\n          this.graphInstance.lineController.endDrawLine();\n        } else {\n          this.drawLines();\n        }\n      }\n    }\n  }\n\n  public onMouseMove(graphInstance: TableFlowGraph) {\n    if (this.cursorLine) {\n      let targetPosition = graphInstance.mousePosition;\n      // snap to hovered anchor\n      if (\n        graphInstance.anchorController.hoveredAnchor &&\n        !this.anchorIds.includes(graphInstance.anchorController.hoveredAnchor.id)\n      ) {\n        targetPosition = {\n          x: graphInstance.anchorController.hoveredAnchor.posX,\n          y: graphInstance.anchorController.hoveredAnchor.posY,\n        };\n      }\n      this.cursorLine.drawLine(this.cursorLineStartPosition, targetPosition);\n    }\n  }\n}\n","import { cloneDeep, isEqual } from 'lodash-es';\nimport { TableFlowGraph } from '../../index';\nimport { createClassElement, removeElement, setStyles } from '../../lib/dom';\nimport LineGroup from './LineGroup';\n\n/**\n * table-flow-graph lines controller\n */\nexport default class LineController {\n  public element: HTMLElement;\n  public lineAnchorIds: string[][]; // anchor ids to draw lines\n  public originLineAnchorIds: string[][]; // compare to lineAnchorIds to determine if lines are changed\n  public isDrawingLine: boolean;\n  public currentDrawingLine: LineGroup;\n  public graphInstance: TableFlowGraph;\n  public canDeleteColumn: boolean;\n  public canDeleteRow: boolean;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.element = createClassElement('div', 'tfgraph-line-layer', this.graphInstance.element);\n    const { options } = this.graphInstance;\n    // this.options.mode = options.mode ? options.mode : 'view';\n    if (options.lines && Array.isArray(options.lines)) {\n      this.lineAnchorIds = options.lines;\n    } else {\n      this.lineAnchorIds = [];\n    }\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public renderLines() {\n    this.element.innerHTML = '';\n    this.lineAnchorIds.forEach((lineGroup) => {\n      new LineGroup(\n        this.element,\n        { anchorIds: lineGroup, isDrawingActive: false },\n        this.graphInstance,\n      );\n    });\n    this.setColAndRowDeletable();\n  }\n\n  public startDrawLine() {\n    this.isDrawingLine = true;\n    this.graphInstance.toolbar.disable();\n    this.graphInstance.toolbar.hintMgr.setHint('drawLine');\n    // set lines layer below anchors layer when draing line\n    setStyles(this.element, { zIndex: '1' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '2' });\n\n    this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n  }\n\n  public endDrawLine() {\n    this.isDrawingLine = false;\n    this.graphInstance.toolbar.enable();\n    // set lines layer above anchors layer when draing line\n    setStyles(this.element, { zIndex: '2' });\n    setStyles(this.graphInstance.anchorController.element, { zIndex: '1' });\n\n    if (this.currentDrawingLine) {\n      this.currentDrawingLine.endDrawing();\n      if (this.currentDrawingLine.anchorIds.length <= 1) {\n        this.removeLineGroup(this.currentDrawingLine);\n      }\n      this.currentDrawingLine = undefined;\n    }\n    if (!isEqual(this.originLineAnchorIds, this.lineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  setColAndRowDeletable() {\n    const totalRows = this.graphInstance.options.totalRows;\n    const totalColumns = this.graphInstance.options.totalColumns;\n    this.canDeleteColumn = true;\n    this.canDeleteRow = true;\n    this.lineAnchorIds.forEach((line) => {\n      line.forEach((id) => {\n        const idArray = id.split('_');\n        const row = idArray[1];\n        const col = idArray[2];\n        if (parseInt(col) === totalColumns - 1) {\n          this.canDeleteColumn = false;\n        }\n        if (parseInt(row) === totalRows - 1) {\n          this.canDeleteRow = false;\n        }\n      });\n    });\n  }\n\n  public onChangeLines() {\n    this.setColAndRowDeletable();\n    this.graphInstance.options = Object.assign({}, this.graphInstance.options, {\n      lines: this.lineAnchorIds,\n    });\n    this.graphInstance.toolbar.hintMgr.setHint('idel');\n    if (typeof this.graphInstance.options.onChangeLines === 'function') {\n      this.graphInstance.options.onChangeLines(this.lineAnchorIds);\n    }\n  }\n\n  public removeLineGroup(line: LineGroup) {\n    removeElement(line.element);\n    this.lineAnchorIds = this.lineAnchorIds.filter((lines) => !isEqual(lines, line.anchorIds));\n    if (!isEqual(this.lineAnchorIds, this.originLineAnchorIds)) {\n      this.originLineAnchorIds = cloneDeep(this.lineAnchorIds);\n      // trigger event: linesChanged\n      this.onChangeLines();\n    }\n  }\n\n  public createLineGroup(anchorId) {\n    this.startDrawLine();\n    this.lineAnchorIds.push([anchorId]);\n    this.currentDrawingLine = new LineGroup(\n      this.element,\n      { anchorIds: this.lineAnchorIds[this.lineAnchorIds.length - 1], isDrawingActive: true },\n      this.graphInstance,\n    );\n  }\n\n  public addLineSegment(anchorId) {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.addLineSegment(anchorId);\n    }\n  }\n\n  public onMouseMove() {\n    if (this.isDrawingLine && this.currentDrawingLine) {\n      this.currentDrawingLine.onMouseMove(this.graphInstance);\n    }\n  }\n}\n","import { TableFlowGraph, Bearing } from '../../index';\nimport { createClassElement } from '../../lib/dom';\n\n// | 'topleft'\n// | 'top'\n// | 'topright'\n// | 'left'\n// | 'center'\n// | 'right'\n// | 'bottomleft'\n// | 'bottom'\n// | 'bottomright';\n\nconst getBearingShort = (bearing: Bearing) => {\n  let shortBearing = 't';\n  switch (bearing) {\n    case 'topleft':\n      shortBearing = 'tl';\n      break;\n    case 'top':\n      shortBearing = 't';\n      break;\n    case 'topright':\n      shortBearing = 'tr';\n      break;\n    case 'left':\n      shortBearing = 'l';\n      break;\n    case 'center':\n      shortBearing = 'c';\n      break;\n    case 'right':\n      shortBearing = 'r';\n      break;\n    case 'bottomleft':\n      shortBearing = 'bl';\n      break;\n    case 'bottom':\n      shortBearing = 'b';\n      break;\n    case 'bottomright':\n      shortBearing = 'br';\n      break;\n    default:\n      break;\n  }\n  return shortBearing;\n};\n\n/**\n * Anchor point for drawing lines\n */\nexport default class Anchor {\n  // element of this Anchor\n  public element: HTMLElement;\n  // the bearing relative to this anchor's parent table cell\n  public bearing: Bearing;\n  public elementTr: HTMLElement;\n  public elementCol: HTMLElement;\n  // is the anchor on table cell border or on inner block border(top / bottom)\n  public isOffsetX: boolean;\n  // is the anchor on table cell border or on inner block border(left / right)\n  public isOffsetY: boolean;\n  // id for this Anchor class\n  public id = '';\n  // x position relative to table area\n  public posX = 0;\n  // y position relative to table area\n  public posY = 0;\n  public row: number;\n  public column: number;\n  public hidden = false;\n\n  constructor(\n    bearing: Bearing,\n    row: number,\n    column: number,\n    graphInstance: TableFlowGraph,\n    isOffsetX = false,\n    isOffsetY = false,\n  ) {\n    this.bearing = bearing;\n    this.isOffsetX = isOffsetX;\n    this.isOffsetY = isOffsetY;\n    this.row = row;\n    this.column = column;\n    this.elementTr = document.getElementById(`${graphInstance.id}_tr_${row}`);\n    this.elementCol = document.getElementById(`${graphInstance.id}_col_${column}`);\n    if (this.elementTr && this.elementCol) {\n      // create dom elements\n      this.element = createClassElement(\n        'div',\n        'tfgraph-anchor',\n        graphInstance.anchorController.element,\n      );\n      createClassElement('div', 'tfgraph-anchor-point', this.element);\n      const area = createClassElement('div', 'tfgraph-anchor-area', this.element);\n      createClassElement('div', 'tfgraph-anchor-circle', area);\n\n      // set Anchor instance id; 'ox' meaning offsetX, 'nx' meaning normalX\n      this.id = `a_${row}_${column}_${getBearingShort(bearing)}_${isOffsetX ? 'ox' : 'nx'}_${\n        isOffsetY ? 'oy' : 'ny'\n      }`;\n      // set dom id\n      this.element.setAttribute('id', `${graphInstance.id}_${this.id}`);\n\n      graphInstance.anchorController.anchors.push(this);\n      this.setVisible(graphInstance.mode === 'edit');\n      // setTimeout(() => this.setPosition(), 1);\n      this.setPosition();\n      this.element.addEventListener('click', () => {\n        if (!graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.createLineGroup(this.id);\n        } else {\n          graphInstance.lineController.addLineSegment(this.id);\n        }\n      });\n      this.element.addEventListener('mouseenter', () => {\n        graphInstance.anchorController.setHoveredAnchor(this);\n      });\n      this.element.addEventListener('mouseleave', () => {\n        if (graphInstance.anchorController.hoveredAnchor.id === this.id) {\n          graphInstance.anchorController.setHoveredAnchor(null);\n        }\n      });\n      // dblclick to finish drawing lines\n      this.element.addEventListener('dblclick', () => {\n        if (graphInstance.lineController.isDrawingLine) {\n          graphInstance.lineController.endDrawLine();\n        }\n      });\n    }\n  }\n\n  setOnePosition(x, y) {\n    this.posX = x;\n    this.posY = y;\n    this.element.style.left = x + 'px';\n    this.element.style.top = y + 'px';\n    this.element.setAttribute('title', `xpos & ypos=${x},${y}`);\n  }\n\n  public setVisible(visible: boolean) {\n    if (visible) {\n      this.element.classList.remove('hidden');\n    } else {\n      this.element.classList.add('hidden');\n    }\n  }\n\n  public setPosition() {\n    const x_left = this.elementCol.offsetLeft + (this.isOffsetX ? 15 : 0);\n    const x_center = this.elementCol.offsetLeft + 0.5 * this.elementCol.offsetWidth;\n    const x_right =\n      this.elementCol.offsetLeft + this.elementCol.offsetWidth - (this.isOffsetX ? 15 : 0);\n    const y_top = this.elementTr.offsetTop + (this.isOffsetY ? 15 : 0);\n    const y_center = this.elementTr.offsetTop + 0.5 * this.elementTr.offsetHeight;\n    const y_bottom =\n      this.elementTr.offsetTop + this.elementTr.offsetHeight - (this.isOffsetY ? 15 : 0);\n\n    switch (this.bearing) {\n      case 'topleft':\n        this.setOnePosition(x_left, y_top);\n        break;\n      case 'top':\n        this.setOnePosition(x_center, y_top);\n        break;\n      case 'topright':\n        this.setOnePosition(x_right, y_top);\n        break;\n      case 'right':\n        this.setOnePosition(x_right, y_center);\n        break;\n      case 'bottomright':\n        this.setOnePosition(x_right, y_bottom);\n        break;\n      case 'bottom':\n        this.setOnePosition(x_center, y_bottom);\n        break;\n      case 'bottomleft':\n        this.setOnePosition(x_left, y_bottom);\n        break;\n      case 'left':\n        this.setOnePosition(x_left, y_center);\n        break;\n      case 'center':\n        this.setOnePosition(x_center, y_center);\n        break;\n      default:\n        break;\n    }\n  }\n}\n","import { TableFlowGraph } from '../../index';\nimport { createClassElement } from '../../lib/dom';\nimport TableCell from '../table/TableCell';\nimport Anchor from './Anchor';\n\n/**\n * table-flow-graph anchor controller\n */\nexport default class AnchorController {\n  public element: HTMLElement;\n  public anchors: Anchor[];\n  public hoveredAnchor: Anchor | null; // current Anchor that mouse hoverd\n  graphInstance: TableFlowGraph;\n\n  constructor(graphInstance: TableFlowGraph) {\n    this.graphInstance = graphInstance;\n    this.anchors = [];\n    this.element = createClassElement('div', 'tfgraph-anchor-layer', graphInstance.element);\n  }\n\n  public renderAnchors() {\n    this.element.innerHTML = '';\n    this.anchors = [];\n    this.graphInstance.tableController.cells.forEach((cell) => {\n      // console.log('cell:::::::::::', cell);\n      this.createAnchors(cell);\n    });\n  }\n\n  public setHoveredAnchor(anchor: Anchor | null) {\n    this.hoveredAnchor = anchor;\n    if (!this.graphInstance.lineController.isDrawingLine) {\n      if (anchor) {\n        this.graphInstance.toolbar.hintMgr.setHint('hoverAnchor');\n      } else {\n        this.graphInstance.toolbar.hintMgr.setHint('idel');\n      }\n    }\n  }\n\n  public resetPosition() {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor) => {\n        anchor.setPosition();\n      });\n    }\n  }\n\n  public setAnchorsVisible(visible: boolean) {\n    if (this.anchors && this.anchors.length > 0) {\n      this.anchors.forEach((anchor: Anchor) => {\n        anchor.setVisible(visible);\n      });\n    }\n  }\n\n  // create anchors for one cell\n  createAnchors(cell: TableCell) {\n    for (let row = cell.row; row < cell.row + cell.rowSpan; row++) {\n      for (let col = cell.column; col < cell.column + cell.colSpan; col++) {\n        if (row === 0) {\n          new Anchor('top', row, col, this.graphInstance);\n          new Anchor('topright', row, col, this.graphInstance);\n          if (cell.column === 0) {\n            new Anchor('topleft', row, col, this.graphInstance);\n          }\n        }\n        if (col === 0) {\n          new Anchor('left', row, col, this.graphInstance);\n          new Anchor('bottomleft', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1) {\n          new Anchor('right', row, col, this.graphInstance);\n        }\n        if (row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottom', row, col, this.graphInstance);\n        }\n        if (col === cell.column + cell.colSpan - 1 || row === cell.row + cell.rowSpan - 1) {\n          new Anchor('bottomright', row, col, this.graphInstance);\n        }\n        if (cell.hasNode) {\n          if (col === cell.column) {\n            new Anchor('left', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomleft', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (col === cell.column + cell.colSpan - 1) {\n            new Anchor('right', row, col, this.graphInstance, true, false);\n            if (row < cell.row + cell.rowSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, true, false);\n            }\n          }\n          if (row === cell.row) {\n            new Anchor('top', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('topright', row, col, this.graphInstance, false, true);\n            }\n          }\n          if (row === cell.row + cell.rowSpan - 1) {\n            new Anchor('bottom', row, col, this.graphInstance, false, true);\n            if (col < cell.column + cell.colSpan - 1) {\n              new Anchor('bottomright', row, col, this.graphInstance, false, true);\n            }\n          }\n        }\n      }\n    }\n    if (!cell.hasNode) {\n      new Anchor('center', cell.row, cell.column, this.graphInstance);\n    }\n  }\n}\n","import './styles/index.scss';\nimport { createClassElement, setStyles } from './lib/dom';\nimport { debounce } from './lib/utils';\nimport Toolbar from './components/toolbar/Toolbar';\nimport TableController from './components/table/TableController';\nimport LineController from './components/line/LineController';\nimport AnchorController from './components/anchor/AnchorController';\n\n// default options\nconst defaultOptions: TFGraphOptions = {\n  totalColumns: 8,\n  totalRows: 8,\n  maxColumns: 12,\n  maxRows: 30,\n  labels: {\n    editMode: 'Edit Mode',\n    previewMode: 'Preview Mode',\n    editColumn: 'Edit Column',\n    addColumn: 'Add Column',\n    deleteColumn: 'Delete Column',\n    addRow: 'Add Row',\n    deleteRow: 'Delete Row',\n    editNode: 'Edit Node',\n    addNode: 'Add Node',\n    deleteNode: 'Delete Node',\n    adjustNodeSize: 'Adjust Node Size',\n    moveNode: 'Move Node',\n    newNode: 'New Node',\n    enterNodeName: 'Enter node name',\n    enterColumnName: 'Enter column name',\n    confirm: 'Confirm',\n    cancel: 'Cancel',\n    hint_drawLine:\n      'Click another anchor to draw new line segment; press [ESC] to undo prev line segment; press [ENTER] or double click left mouse to finish drawing',\n    hint_hoverLine: 'Double click to delete this line',\n    hint_hoverAnchor: 'Click to start drawing lines',\n    hint_moveNode: 'Move cursor to move this node, click left mouse to confrim moving',\n    hint_resizeNode: 'Move cursor to resize this node, click left mouse to confrim resizing',\n  },\n};\n\nexport class TableFlowGraph {\n  public element: HTMLElement;\n  public baseElement: HTMLElement;\n  public options: TFGraphOptions;\n  public id: string;\n  public toolbar: Toolbar;\n  public isAlive: boolean;\n  public hasTableHeader: boolean;\n  public mode: Mode;\n  public mousePosition: Position;\n  public tableController: TableController;\n  public lineController: LineController;\n  public anchorController: AnchorController;\n\n  constructor(el: HTMLElement, options: TFGraphOptions) {\n    if (!el) {\n      throw new Error('no element is specified to initialize TableFlowGraph');\n    } else {\n      this.baseElement = el;\n      this.baseElement.classList.add('tfgraph-wrapper');\n    }\n\n    // use id as unique key, to support multiple table-flow-graph instances in one page.\n    if (this.baseElement.getAttribute('id')) {\n      this.id = this.baseElement.getAttribute('id');\n    } else {\n      this.id = 'id' + (Math.random() * 100000).toFixed(0);\n    }\n\n    this.init(options);\n\n    window.addEventListener('resize', this, false);\n    window.addEventListener('keydown', this, false);\n    window.addEventListener('mousemove', this, false);\n\n    this.isAlive = true;\n  }\n\n  public init(options: TFGraphOptions) {\n    this.baseElement.innerHTML = '';\n\n    this.options = Object.assign({}, defaultOptions, options);\n    if (options.labels) {\n      this.options.labels = Object.assign({}, defaultOptions.labels, options.labels);\n    }\n    // set totalRows\n    // if (typeof this.options.rows !== 'undefined') {\n    //   this.options.totalRows = this.options.rows.length;\n    // }\n    // set totalColumns and hasTableHeader\n    if (this.options.columns && this.options.columns.length > 0) {\n      this.options.totalColumns = this.options.columns.length;\n      this.hasTableHeader = true;\n    } else {\n      this.options.columns = [];\n      this.hasTableHeader = false;\n      for (let i = 0; i < this.options.totalColumns; i++) {\n        this.options.columns.push({\n          width: 'auto',\n        });\n      }\n    }\n\n    // restrain totalRows and totalColumns\n    if (this.options.totalRows > this.options.maxRows) {\n      this.options.totalRows = this.options.maxRows;\n    }\n    if (this.options.totalColumns > this.options.maxColumns) {\n      this.options.totalColumns = this.options.maxColumns;\n    }\n\n    // filter nodes that exceeds totalRows and totalColumns\n    if (this.options.nodes && this.options.nodes.length > 0) {\n      this.options.nodes = this.options.nodes.filter(\n        (node) =>\n          node.row + node.rowSpan - 1 <= this.options.totalRows &&\n          node.column + node.colSpan - 1 <= this.options.totalColumns,\n      );\n    }\n\n    // create toolbar and edit state\n    if (this.options.isEditor) {\n      this.mode = 'edit';\n      this.toolbar = new Toolbar(this.baseElement, this);\n    } else {\n      this.mode = 'preview';\n    }\n\n    // create root dom elements and controllers\n    this.element = createClassElement('div', 'tfgraph', this.baseElement);\n    if (this.mode === 'edit') this.element.classList.add('edit');\n    this.lineController = new LineController(this);\n    this.anchorController = new AnchorController(this);\n    this.tableController = new TableController(this);\n\n    this.render();\n  }\n\n  public render() {\n    // render table\n    this.tableController.renderTable();\n\n    // wait for table render ready; TODO set anchor position relative to table cells\n    setTimeout(() => {\n      // render anchors\n      this.anchorController.renderAnchors();\n      // render lines\n      this.lineController.renderLines();\n    }, 1);\n  }\n\n  handleResize = () => {\n    // TODO detailed resize management\n    // this.anchorController.resetPosition();\n    this.refresh();\n  };\n  debouncedHandleResize = debounce(this.handleResize, 500);\n\n  // handle addEventListener events\n  handleEvent(event) {\n    switch (event.type) {\n      case 'resize':\n        this.debouncedHandleResize();\n        break;\n      case 'mousemove':\n        this.onMourseMove(event);\n        break;\n      case 'keydown':\n        this.onKeydown(event);\n        break;\n      default:\n        break;\n    }\n  }\n\n  onMourseMove(event) {\n    const rect = this.element.getBoundingClientRect();\n    const offsetX = event.clientX - rect.left;\n    const offsetY = event.clientY - rect.top;\n    this.mousePosition = { x: offsetX, y: offsetY };\n    this.lineController.onMouseMove();\n    this.tableController.onMouseMove();\n  }\n\n  onKeydown = (e) => {\n    if (e.code === 'Enter') {\n      // press enter to finish drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.endDrawLine();\n      }\n    } else if (e.code === 'Escape') {\n      // press esc to cancel last anchor point when drawing line\n      if (this.lineController.isDrawingLine) {\n        this.lineController.currentDrawingLine.escapeDrawing();\n      }\n      if (this.tableController.isMovingCell) {\n        this.tableController.stopMoving();\n      }\n      if (this.tableController.isResizingCell) {\n        this.tableController.stopResizing();\n      }\n    }\n  };\n\n  public refresh(options?: TFGraphOptions) {\n    if (!this.isAlive) {\n      return;\n    } else {\n      setTimeout(() => {\n        const height = this.baseElement.getBoundingClientRect().height;\n        // maintain consistent height when rerendering dom elements\n        setStyles(this.baseElement, { height: height + 'px' });\n        this.init(options ? options : this.options);\n        setStyles(this.baseElement, { height: 'auto' });\n      });\n    }\n  }\n\n  public destroy() {\n    if (!this.isAlive) {\n      return;\n    }\n\n    window.removeEventListener('resize', this, false);\n    window.removeEventListener('keydown', this, false);\n    window.removeEventListener('mousemove', this, false);\n\n    this.isAlive = false;\n  }\n\n  public changeMode(mode: Mode) {\n    if (this.mode !== mode) {\n      this.mode = mode;\n      if (mode === 'edit') {\n        this.element.classList.add('edit');\n      } else {\n        this.element.classList.remove('edit');\n      }\n      this.anchorController.setAnchorsVisible(mode === 'edit');\n      this.tableController.renderTable();\n    }\n  }\n}\n\nexport type ColumnWidth = 'auto' | 'lg' | 'md' | 'sm' | 'xs';\n\n// table column header data\nexport interface TFGraphColumn {\n  id?: string;\n  title?: string;\n  width?: ColumnWidth | string;\n}\n\n// table row header data\nexport interface TFGraphRow {\n  id?: string;\n  title: string;\n}\n\ntype RGB = `rgb(${number}, ${number}, ${number})`;\ntype RGBA = `rgba(${number}, ${number}, ${number}, ${number})`;\ntype HEX = `#${string}`;\n\nexport type ColorValue = RGB | RGBA | HEX;\n\nexport type Color =\n  | 'red'\n  | 'orange'\n  | 'yellow'\n  | 'green'\n  | 'cyan'\n  | 'blue'\n  | 'purple'\n  | 'gray'\n  | 'black'\n  | 'white';\n\nexport type FunctionalColor = 'primary' | 'success' | 'info' | 'warning' | 'danger';\n\nexport type NodeType = 'default' | FunctionalColor;\n\nexport type NodeStyleType = {\n  [K in NodeType]: {\n    type: K;\n    normalStyle?: Partial<CSSStyleDeclaration>;\n    hoverStyle?: Partial<CSSStyleDeclaration>;\n  };\n};\n\n// node data\nexport interface TFGraphNode {\n  id: string | number;\n  title: string;\n  row: number;\n  column: number;\n  colSpan: number;\n  rowSpan: number;\n  type?: NodeType;\n  isBtn?: boolean;\n  meta?: Record<string, unknown>;\n  showPopup?: boolean;\n}\n\n// export interface ThemeOption {\n//   borderColor: string;\n//   titleColor: string;\n//   backgroundColor: string;\n// }\n\n// export interface Theme {\n//   default: ThemeOption;\n//   success: ThemeOption;\n//   warning: ThemeOption;\n//   danger: ThemeOption;\n//   primary: ThemeOption;\n// }\n\nexport type Mode = 'edit' | 'preview';\n\n// labels for ui\nexport type Labels = {\n  editMode?: string;\n  previewMode?: string;\n  editColumn?: string;\n  addColumn?: string;\n  deleteColumn?: string;\n  addRow?: string;\n  deleteRow?: string;\n  editNode?: string;\n  addNode?: string;\n  deleteNode?: string;\n  adjustNodeSize?: string;\n  moveNode?: string;\n  newNode?: string;\n  enterNodeName?: string;\n  enterColumnName?: string;\n  confirm?: string;\n  cancel?: string;\n  hint_drawLine?: string;\n  hint_hoverLine?: string;\n  hint_hoverAnchor?: string;\n  hint_moveNode?: string;\n  hint_resizeNode?: string;\n};\n\n// table-flow-graph options\nexport interface TFGraphOptions {\n  nodes?: TFGraphNode[];\n  columns?: TFGraphColumn[];\n  totalColumns?: number;\n  maxColumns?: number;\n  tableLayoutFixed?: boolean;\n  // rows?: TFGraphRow[];\n  totalRows?: number;\n  maxRows?: number;\n  isEditor?: boolean;\n  lines?: string[][]; // 2D array of anchor point ids to draw lines\n  labels?: Labels;\n  onChangeLines?: (lines: string[][]) => void; // lines changed\n  // column methods\n  addColumn?: () => void; // custom add column method\n  onAddColumn?: (columnData?: TFGraphColumn) => void; // add column event\n  editColumn?: (column: TFGraphColumn) => void;\n  onEditColumn?: (column: TFGraphColumn) => void; // on edit column callback\n  deleteColumn?: (column?: TFGraphColumn) => void; // custom delete column method\n  onDeleteColumn?: (column?: TFGraphColumn) => void; // delete column callback\n  // row methods\n  addRow?: () => void; // custom add row method\n  onAddRow?: () => void; // add row\n  deleteRow?: () => void; // custom delete row method\n  onDeleteRow?: () => void; // delete the last row\n  // node methods\n  addNode?: (row: number, column: number) => void; // custom add node method\n  onAddNode?: (node: TFGraphNode) => void; // add node callback\n  editNode?: (node: TFGraphNode) => void; // custom edit node method\n  onEditNode?: (node: TFGraphNode) => void; // edit node callback\n  deleteNode?: (node: TFGraphNode) => void; // custom delete node method\n  onDeleteNode?: (node: TFGraphNode) => void;\n  onClickNode?: (node: TFGraphNode, nodeEl: HTMLElement) => void; // click event on viewer mode\n  // onChangeNode?: (newNode: TFGraphNode, oldNode: TFGraphNode) => void;\n  renderNode?: (node: TFGraphNode) => HTMLElement; // custom render node content\n  renderNodeHoverPopup?: (node: TFGraphNode) => HTMLElement; // custom render node hover popup\n}\n\n// anchor point's relative position to a table cell\nexport type Bearing =\n  | 'topleft'\n  | 'top'\n  | 'topright'\n  | 'left'\n  | 'center'\n  | 'right'\n  | 'bottomleft'\n  | 'bottom'\n  | 'bottomright';\n\nexport type Position = {\n  x: number;\n  y: number;\n};\n\nexport interface ColumnSpec {\n  left: number;\n  width: number;\n  columnIndex: number;\n}\n\nexport interface RowSpec {\n  top: number;\n  height: number;\n  rowIndex: number;\n}\n\nexport type TableGridRect = ColumnSpec & RowSpec;\n\nexport interface LineOptions {\n  positionA: Position; // x and y position relative to table element\n  positionB: Position;\n  thickness: number;\n  isStart: boolean;\n  isEnd: boolean;\n}\n\nexport interface LineGroupOptions {\n  anchorIds: string[];\n  isDrawingActive: boolean; // current line group is drawing\n}\n\nexport type BtnType = 'default' | 'primary' | 'warning' | 'danger' | 'success' | 'clean';\n\nexport interface BtnOptions {\n  label?: string;\n  type?: BtnType;\n  className?: string;\n  icon?: string;\n  onClick?: (e: MouseEvent) => void;\n  tooltip?: string;\n}\n\nexport type TogglerItem = {\n  label: string;\n  id?: string;\n};\n\nexport interface TogglerOptions {\n  items: TogglerItem[];\n  initialActiveIndex?: number;\n  onChange?: (item: TogglerItem, index: number) => void;\n}\n\nexport type TogglerButton = {\n  itemData: TogglerItem;\n  el: HTMLElement;\n  index: number;\n};\n\nexport interface PopupOptions {\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n  contentElement?: HTMLElement;\n}\n\nexport interface TooltipOptoins {\n  placement?: 'top' | 'right' | 'bottom' | 'left';\n  label?: string;\n}\n\nexport interface DialogOptions {\n  title: string;\n  targetElement?: HTMLElement;\n  contentElement: HTMLElement;\n}\n\nexport interface HeaderCellMenuOptions {\n  showAdd?: boolean;\n  showDelete?: boolean;\n}\n\nexport type PositionAndSize = {\n  left: number;\n  top: number;\n  width: number;\n  height: number;\n};\n\nexport type CellPositionAndSize = {\n  row: number;\n  column: number;\n  rowSpan: number;\n  colSpan: number;\n};\n\nexport type HintType =\n  | 'idel'\n  | 'drawLine'\n  | 'hoverLine'\n  | 'hoverAnchor'\n  | 'moveNode'\n  | 'resizeNode';\n"],"names":["TableController"],"mappings":"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"}